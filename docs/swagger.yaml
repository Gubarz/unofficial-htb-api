---
  components:
    headers:
      XRateLimitHeader:
        description: Total requests allowed
        schema:
          example: 15
          format: int32
          type: integer
      XRateLimitRemainingHeader:
        description: Remaining requests allowed
        schema:
          example: 14
          format: int32
          type: integer
    parameters:
      BattlegroundId:
        description: ID of the Battleground match
        in: path
        name: battlegroundId
        required: true
        schema:
          type: integer
      BgUserId:
        description: Users battleground id
        in: path
        name: bgUserId
        required: true
        schema:
          type: integer
      Category:
        description: |
          Filter by category. You can provide multiple values. For example,
          category=15&category=20.
  
          | Name                | Id |
          | ------------------- | -- |
          | DFIR                | 14 |
          | Cloud               | 15 |
          | Malware Analysis    | 16 |
          | SOC                 | 17 |
          | Threat Intelligence | 19 |
          | Campaign            | 20 |
        explode: true
        in: query
        name: category
        schema:
          items:
            enum:
              - '14'
              - '15'
              - '16'
              - '17'
              - '19'
              - '20'
            type: string
          type: array
        style: form
      CategoryChallenge:
        description: |
          Filter by category. You can provide multiple values. For example,
          category=6&category=8.
  
          | Name        | Id |
          | ----------- | -- |
          | AI - ML     | 21 |
          | Blockchain  | 12 |
          | Crypto      | 2  |
          | Forensics   | 7  |
          | GamePwn     | 11 |
          | Hardware    | 10 |
          | Misc        | 6  |
          | Mobile      | 8  |
          | OSINT       | 9  |
          | Pwn         | 4  |
          | Reversing   | 1  |
          | Web         | 5  |
        explode: true
        in: query
        name: category
        schema:
          items:
            enum:
              - '1'
              - '2'
              - '4'
              - '5'
              - '6'
              - '7'
              - '8'
              - '9'
              - '10'
              - '11'
              - '12'
              - '21'
            type: string
          type: array
        style: form
      ChallengeId:
        description: ID of the challenge container
        in: path
        name: challengeId
        required: true
        schema:
          type: integer
      CompanyId:
        description: ID of the company
        in: path
        name: companyId
        required: true
        schema:
          type: integer
      Difficulty:
        description: Filter by difficulty level
        explode: true
        in: query
        name: difficulty
        required: false
        schema:
          items:
            enum:
              - easy
              - medium
              - hard
              - insane
            type: string
          type: array
        style: form
      EndgameId:
        description: ID of the Endgame
        in: path
        name: endgameId
        required: true
        schema:
          type: integer
      FortressId:
        description: ID of the fortress
        in: path
        name: fortressId
        required: true
        schema:
          type: integer
      Keyword:
        description: Search String (variation 1)
        in: query
        name: keyword
        required: false
        schema:
          example: hack
          type: string
      MachineId:
        description: ID of the machine
        in: path
        name: machineId
        required: true
        schema:
          type: integer
      Os:
        description: Filter by os
        explode: true
        in: query
        name: os
        required: false
        schema:
          items:
            enum:
              - linux
              - windows
              - freebsd
              - openbsd
              - other
            type: string
          type: array
        style: form
      Page:
        description: Page number
        in: query
        name: page
        required: false
        schema:
          type: integer
      PerPage:
        description: Limit results per page
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 5
          type: integer
      PeriodPath:
        description: One of ["1Y", "6M", "3M", "1M", "1W"] (variation 1)
        in: path
        name: period
        required: true
        schema:
          enum:
            - 1Y
            - 6M
            - 3M
            - 1M
            - 1W
          type: string
      PeriodQuery:
        description: One of ["1Y", "6M", "3M", "1M", "1W"] (variation 2)
        in: query
        name: period
        required: true
        schema:
          default: 1W
          enum:
            - 1Y
            - 6M
            - 3M
            - 1M
            - 1W
          type: string
      Product:
        description: Select vpn server
        in: query
        name: product
        required: true
        schema:
          enum:
            - competitive
            - labs
            - starting_point
            - fortresses
          type: string
      ProlabId:
        description: ID of the Pro lab
        in: path
        name: prolabId
        required: true
        schema:
          type: integer
      Query:
        description: Search String (variation 2)
        in: query
        name: query
        required: true
        schema:
          example: hack
          type: string
      ReviewId:
        description: Review ID
        in: path
        name: reviewId
        required: true
        schema:
          type: integer
      Search:
        description: Search
        in: query
        name: search
        required: false
        schema:
          type: string
      SearchQuery:
        description: Search Param
        in: query
        name: search_query
        required: true
        schema:
          type: string
      SeasonId:
        description: ID of the Season
        in: path
        name: seasonId
        required: true
        schema:
          type: integer
      SherlockId:
        description: ID of the Sherlock
        in: path
        name: sherlockId
        required: true
        schema:
          type: integer
      SherlockSortBy:
        description: Attribute to sort by
        in: query
        name: sort_by
        schema:
          enum:
            - solves
            - category
            - rating
            - name
          type: string
      ShowCompleted:
        description: Omit for both (variation 1)
        in: query
        name: show_completed
        required: false
        schema:
          enum:
            - incomplete
            - complete
          type: string
      SortBy:
        description: Field to sort by
        in: query
        name: sort_by
        required: false
        schema:
          enum:
            - release-date
            - name
            - user-owns
            - system-owns
            - rating
            - user-difficulty
          type: string
      SortType:
        description: Sort type (asc or desc)
        in: query
        name: sort_type
        required: false
        schema:
          enum:
            - asc
            - desc
          type: string
      StartingPointId:
        description: ID of the task (variation 1)
        in: path
        name: startingPointId
        required: true
        schema:
          type: integer
      State:
        description: Filter by state. You can provide multiple values. For example, state=active&state=retired.
        explode: true
        in: query
        name: state
        schema:
          items:
            enum:
              - active
              - retired
              - unreleased
            type: string
          type: array
        style: form
      Status:
        description: Omit for both (variation 2)
        in: query
        name: status
        required: false
        schema:
          enum:
            - incompleted
            - complete
          type: string
      Tags:
        description: Search Term
        in: query
        name: tags
        required: false
        schema:
          items:
            enum:
              - machines
              - challenges
              - users
              - teams
            type: string
          maxItems: 1
          minItems: 1
          type: array
      TaskId:
        description: ID of the task (variation 2)
        in: path
        name: taskId
        required: true
        schema:
          type: integer
      TeamId:
        description: ID of the team (variation 4)
        in: path
        name: teamId
        required: true
        schema:
          type: integer
      TierId:
        description: ID of the tier
        in: path
        name: tierId
        required: true
        schema:
          type: integer
      Todo:
        description: Filter ToDo
        in: query
        name: todo
        required: false
        schema:
          enum:
            - 1
          format: int32
          type: integer
      TournamentId:
        description: ID of the Tournament
        in: path
        name: tournamentId
        required: true
        schema:
          type: integer
      UniversityId:
        description: ID of the Univeritiy
        in: path
        name: universityId
        required: true
        schema:
          type: integer
      UserId:
        description: ID of the user
        in: path
        name: userId
        required: true
        schema:
          type: integer
      VpnId:
        description: ID of the vpn server
        in: path
        name: vpnId
        required: true
        schema:
          type: integer
    requestBodies:
      BattlegroundFindRequest:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                free:
                  description: Practice Server
                  example: 1
                  type: integer
                game_mode:
                  description: 1v1, 2v2, or 4v4 (4v4 only for Private)
                  enum:
                    - 1
                    - 2
                    - 4
                  example: 1
                  type: integer
                password:
                  description: For Private Matches Only
                  example: Winter2020
                  type: string
                type:
                  description: 'Game Mode Type: Server Siege (koh), Cyber Mayhem (ad), Both (any)'
                  enum:
                    - any
                    - ad
                    - koh
                  example: koh
                  type: string
              required:
                - type
                - game_mode
              type: object
        description: Body to join battleground match queue
        required: true
      BattlegroundOwnRequest:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                flag:
                  type: string
                id:
                  description: current_bg_user_id
                  type: integer
              required:
                - flag
                - id
              type: object
        description: Takes the flag string and the current_bg_user_id
        required: true
      ChallengeOwnRequest:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                challenge_id:
                  type: integer
                difficulty:
                  enum:
                    - 10
                    - 20
                    - 30
                    - 40
                    - 50
                    - 60
                    - 70
                    - 80
                    - 90
                    - 100
                  type: integer
                flag:
                  type: string
              required:
                - challenge_id
                - flag
                - difficulty
              type: object
        description: Body to post challenge flag
      ChallengeReviewRequest:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                headline:
                  type: string
                id:
                  type: integer
                review:
                  type: string
                stars:
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                  type: integer
              required:
                - id
                - review
                - headline
              type: object
        description: Body to post challenge review
      ChallengeStartStopRequest:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                challenge_id:
                  type: integer
              required:
                - challenge_id
              type: object
        description: use challenge_id
        required: true
      MachineOwnRequest:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnMachineRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OwnMachineRequest'
        description: Body to post machine flag
        required: true
      MachineReviewRequest:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MachineReviewRequest'
        description: Body to post machine review
        required: true
      MultiOwnRequest:
        content:
          application/json:
            schema:
              properties:
                flag:
                  type: string
              required:
                - flag
              type: object
          application/x-www-form-urlencoded:
            schema:
              properties:
                flag:
                  type: string
              required:
                - flag
              type: object
        description: Body to post prolab/fortress/endgame flag
        required: true
      PwnboxStartRequest:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PwnboxRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PwnboxRequest'
        description: Body to post start of pwnbox
      SherlocksTasksFlagRequest:
        content:
          application/json:
            schema:
              properties:
                flag:
                  example: 3x4mp1e_fl4g
                  type: string
              type: object
          application/x-www-form-urlencoded:
            schema:
              properties:
                flag:
                  example: 3x4mp1e_fl4g
                  type: string
              type: object
        description: Body to post sherlock flag
        required: true
      VirtualMachineRequest:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpawnExtendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SpawnExtendRequest'
        description: Body to post spawn or reset vm
        required: true
    responses:
      AccessOvpnfileVpnId0Response:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/OpenVpn'
        description: Returns open_vpn file
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      BadgesResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BadgesResponse'
        description: Badges Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      BgCurrentBgUserIdResponse:
        content:
          appliaction/json:
            schema:
              $ref: '#/components/schemas/BgCurrentBgUserIdResponse'
        description: Bg Battleground User Id Response
      BgEventCurrentResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BgEventCurrentResponse'
        description: Bg Event Current Response
      BgFlagOwnResponse:
        content:
          appliaction/json:
            schema:
              $ref: '#/components/schemas/BgFlagOwnResponse'
        description: Bg Flag Own Response
      BgHistoryCurrentBgUserIdResponse:
        content:
          appliaction/json:
            schema:
              $ref: '#/components/schemas/BgHistoryCurrentResponse'
        description: Battleground User ID History Response
      BgLoadingStatusCurrentBgUserIdResponse:
        content:
          appliaction/json:
            schema:
              $ref: '#/components/schemas/BgLoadingStatusCurrentBgUserIdResponse'
        description: Bg Loading Status Battleground User Id Response
      BgLobbyMessages1Response:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LobbyMessagesResponse'
        description: Bg Lobby Messages 1 Response
      BgMachineAssignmentsCurrentBgUserIdResponse:
        content:
          appliaction/json:
            schema:
              $ref: '#/components/schemas/BgMachineAssignmentsCurrentBgUserIdResponse'
        description: Bg Machine Assignments Battleground User Id Response
      BgMatchAcceptResponse:
        content:
          appliaction/json:
            schema:
              $ref: '#/components/schemas/BgMatchAcceptResponse'
        description: Bg Match Accept Response
      BgMatchHistoryAdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BgMatchHistoryAdResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      BgMatchHistoryKohResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BgMatchHistoryKohResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      BgMatchPenaltyResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchPenaltyResponse'
        description: Bg Match Penalty Response
      BgMessagesCurrentBgUserIdResponse:
        content:
          appliaction/json:
            schema:
              $ref: '#/components/schemas/BgMessagesCurrentBgUserIdResponse'
        description: Bg Messages Battleground User Id Response
      BgOpenTimesResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BgOpenTimesResponse'
        description: Bg Open-Times Response
      BgPlayerCountResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerCountResponse'
        description: Bg Player Count Response
      BgPlayerQueueCountResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerQueueCountResponse'
        description: Bg Player Queue Count Response
      BgScoresResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BgScoresResponse'
        description: OK
      BgTeamsCurrentBgUserIdResponse:
        content:
          appliaction/json:
            schema:
              $ref: '#/components/schemas/BgTeamsCurrentBgUserIdResponse'
        description: Bg Teams Battleground User Id Response
      BgTournamentRankingsBattlegroundIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BgTournamentRankingResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      BgTournamentRankingsPerRankResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BgTournamentRankingsPerRankResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      BgUserBattlegroundIdResponse:
        content:
          appliaction/json:
            schema:
              $ref: '#/components/schemas/BgUserBattlegroundIdResponse'
        description: Bg User Battleground Id Response
      BgUserFriendsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFriendsResponse'
        description: Bg User Friends Response
      BgUserInfoResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BgUserInfoResponse'
        description: Bg User Info Response
      BgUserJoiningInfoResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BgUserJoiningInfoResponse'
        description: Bg User Joining Info Response
      BgUserKeyCurrentBgUserIdResponse:
        content:
          appliaction/json:
            schema:
              $ref: '#/components/schemas/BgUserKeyCurrentBgUserIdResponse'
        description: Bg User Key Battleground User Id Response
      CareerCompaniesResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CareerCompaniesResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      CareerCompanyResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CareerCompanyResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      CareerFeaturedResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CareerFeaturedResponse'
        description: Career Featured Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      CareerHistoryResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CareerHistoryResponse'
        description: Career History Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      CareerInfoResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CareerInfoResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      CareerProfileResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CareerProfileResponse'
        description: Career Profile Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      CareerRequestsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CareerRequestsResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      CareerSearchResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CareerSearchResponse'
        description: Career Search Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      CareerStatsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CareerStatsResponse'
        description: Career Stats Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeActivityResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeActivityResponse'
        description: Challenge Activity Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeCategoriesListResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeCategoriesListResponse'
        description: Challenge Categories List Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeChangelogChallengeIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeChangelogIdResponse'
        description: Challenge Changelog Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeDownloadChallengeIdResponse:
        content:
          application/zip:
            example: {}
        description: Challenge Download Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeInfoChallengeIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeIdResponse'
        description: Challenge Info Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeListResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeListResponse'
        description: Challenge List Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeOwn403:
        content:
          application/json:
            example:
              message: Incorrect flag
            schema:
              $ref: '#/components/schemas/Message'
        description: Forbidden
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeOwnResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeOwnResponse'
        description: Challenge Own Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeRecommendedResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeRecommendedResponse'
        description: Challenge Recommended Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeRecommendedRetiredResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeRecommendedRetiredResponse'
        description: Challenge Recommended Retired Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeReviewsChallengeIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewsResponse'
        description: Challenge Reviews Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeReviewsUserChallengeIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeReviewsUserIdResponse'
        description: Challenge Reviews User Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeStartResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeStartResponse'
        description: Challenge Start Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeStopResponse:
        content:
          application/json:
            example:
              message: Container Stopped
            schema:
              $ref: '#/components/schemas/Messagesuccess'
        description: Challenge Stop Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeSuggestedResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeSuggestedResponse'
        description: Challenge Suggested Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChallengeWriteupResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeWriteupResponse'
        description: Challenge Writeup Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ChangelogsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLogsResponse'
        description: Changelogs Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ConnectionStatusProductResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionStatusProductResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ConnectionStatusResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionStatusResponse'
        description: Connection Status Response
      ConnectionsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionsResponse'
        description: Connections Response
      ConnectionsServersProlabResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionsServersProlabResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ConnectionsServersResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionsServerResponse'
        description: Connections Servers Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ConnectionsServersSwitchVpnIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionServerSwitchResponse'
        description: Connections Servers Switch Vpn Id Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ContentStatsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentStatsResponse'
        description: Content Stats Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      EndgameEndgameIdFlagsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndgameIdFlagsResponse'
        description: Endgame Flags Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      EndgameEndgameIdMachinesResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndgameIdMachinesResponse'
        description: Endgame Machines Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      EndgameEndgameIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndgameIdResponse'
        description: Endgame Info Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      EndgameWriteupResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndgameWriteupResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      EndgamesResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndgamesResponse'
        description: Endgames Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      FortressFortressIdFlagsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FortressFlagsResponse'
        description: Fortress Flags Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      FortressFortressIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FortressIdResponse'
        description: Fortress Info Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      FortressesResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FortressesResponse'
        description: Fortresses Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      GenericError:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        description: Generic Error Response
      GenericError5xx:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        description: Internal Server Error
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      GenericPDFResponse:
        content:
          application/pdf: {}
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      GenericSuccess2xx:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Messagesuccess'
        description: Generic Success message
      HomeBannersResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeBannerResponse'
        description: Home Banners Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      HomeRecommendedResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeRecommendedRepsonse'
        description: Home Recommended Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      HomeUserProgressResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeUserProgressResponse'
        description: Home User Progress Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      HomeUserTodoResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HomeUserTodoRepsonse'
        description: Home User Todo Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      LabListResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabListResponse'
        description: Lab List Response
      MachineActiveResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveMachineResponse'
        description: Active Machines Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineActivityMachineIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineActivityIdResponse'
        description: Machine Activity Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineChangelogMachineIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineChangelogIdResponse'
        description: Machine Changelog Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineGraphActivityMachineIdPeriodResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineGraphActivityIdResponse'
        description: Machine Activity Graph Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineGraphMatrixMachineIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineGraphMatrixIdResponse'
        description: Machine Matrix Graph Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineGraphOwnsDifficultyMachineIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineGraphOwnsDifficultyIdResponse'
        description: Machine Owns Difficulty Graph Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineOwn400:
        content:
          application/json:
            examples:
              already_owned_root:
                summary: Root is already owned
                value:
                  message: RouterSpace root is already owned.
                  status: 400
              already_owned_user:
                summary: user_ is already owned
                value:
                  message: RouterSpace user is already owned.
                  status: 400
              invalid_flag:
                summary: Incorrect flag submission
                value:
                  message: Incorrect flag!
                  status: 400
            schema:
              $ref: '#/components/schemas/OwnMachineErrorResponse'
        description: Machine Own Bad Request
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineOwnResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnMachineResponse'
        description: Successful flag submission
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineOwnsTopMachineIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineOwnsTopIdResponse'
        description: Top Machine Owns Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachinePaginatedResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaginatedMachineData'
        description: Machine Paginated Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachinePlayMachineIdResponse:
        content:
          application/json:
            example:
              message: Playing machine.
            schema:
              $ref: '#/components/schemas/Message'
        description: Successful play request
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineProfileMachineIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineProfileResponse'
        description: Machine Profile Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineRecommendedResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecommendedMachineResponse'
        description: Recommended Machines Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineRecommendedRetiredResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineRecommendedRetiredResponse'
        description: Recommended Retired Machines Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineReviewResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineReviewResponse'
        description: Machine Review Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineReviewsMachineIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewsResponse'
        description: Machine Reviews Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineReviewsUserMachineIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineReviewsUserIdResponse'
        description: Machine Reviews User Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineStopResponse:
        content:
          application/json:
            example:
              message: Stopped playing machine.
            schema:
              $ref: '#/components/schemas/Message'
        description: Successful stop request
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineTagsListResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineTagsListResponse'
        description: Machine Tags List Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineTagsMachineIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineTagIdResponse'
        description: Machine Tags Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineTasksResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineTasksResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineUnreleasedResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineUnreleasedResponse'
        description: Unreleased Machines Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineWalkthroughRandomResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineWalkthroughRandomResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineWalkthroughsLanguageListResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineWalkthroughsLanguageListResponse'
        description: Machine Walkthroughs Language List Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineWalkthroughsMachineIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineWalkthroughIdResponse'
        description: Machine Walkthroughs Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MachineWriteupMachineIdResponse:
        content:
          application/pdf:
            schema:
              format: binary
              type: string
        description: Machine Writeup Response
      MachinesAdventureResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachinesAdventureResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MultiOwn400:
        content:
          application/json:
            examples:
              invalid_flag:
                summary: Incorrect flag submission
                value:
                  message: wrong flag
                  status: 0
            schema:
              $ref: '#/components/schemas/OwnMachineErrorResponse'
        description: Multi Own Bad Request
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      MultiOwnResponse:
        content:
          application/json:
            examples:
              invalid_flag:
                summary: Correct flag submission
                value:
                  message: changeme
                  status: 1
            schema:
              $ref: '#/components/schemas/OwnMachineErrorResponse'
        description: Multi Own Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      NavigationMainResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NavigationMainResponse'
        description: Navigation Main Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      NoticesResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoticesResponse'
        description: Notices Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ProfileActivityUserIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileActivityResponse'
        description: Profile Activity User Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ProfileBadgesUserIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileBadgesIdRepsonse'
        description: Profile Badges User Response
      ProfileBloodsUserIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileBloodsResponse'
        description: Profile Bloods User Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ProfileChartMachinesAttackUserIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileChartMachineAttackIdResponse'
        description: Profile Chart Machines Attack Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ProfileContentUserIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileContentIdResponse'
        description: Profile Content User Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ProfileGraphPeriodUserIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileGraphPeriodIdResponse'
        description: Profile Graph Period Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ProfileProgressChallengesUserIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileProgressChallengesIdRepsonse'
        description: Profile Progress Challenges Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ProfileProgressEndgameUserIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileProgressEndgameIdRepsonse'
        description: Profile Progress Endgame Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ProfileProgressFortressUserIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileProgressFortressIdRepsonse'
        description: Profile Progress Fortress Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ProfileProgressProlabUserIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileProgressProLabResponse'
        description: Profile Progress Prolab Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ProlabProgressResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProlabProgressResponse'
        description: OK
      ProlabRatingResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProlabRatingResponse'
        description: OK
      ProlabSubscriptionResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProlabSubscriptionResponse'
        description: OK
      ProlabfaqResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProlabIdFaqResponse'
        description: Prolab FAQ Response
      ProlabflagsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProlabIdFlagsResponse'
        description: Prolab Flags Response
      ProlabinfoResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProlabIdInfoResponse'
        description: Prolab Info Response
      ProlabmachinesResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProlabIdMachineResponse'
        description: Prolab Machines Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ProlaboverviewResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProlabIdOverviewResponse'
        description: Prolab Overview Response
      ProlabreviewsOverviewResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProlabIdReviewsOverviewResponse'
        description: Description
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ProlabreviewsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProlabIdReviewsResponse'
        description: Prolab Reviews Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ProlabsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProlabsResponse'
        description: Prolabs response
      PwnboxStartResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PwnboxStartResponse'
        description: Pwnbox Start Response
      PwnboxStatusResponse:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PwnboxStatusRunningResponse'
                - $ref: '#/components/schemas/PwnboxStatusNotRunningResponse'
        description: Pwnbox Status Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      PwnboxTerminate204:
        description: No Content
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      PwnboxUsageResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PwnboxUsageResponse'
        description: Pwnbox Usage Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsCountriesResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsCountries'
        description: Rankings Countries Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsCountryBestResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsCountryBest'
        description: Rankings Country Best Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsCountryMembersResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsCountryMembersResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsCountryOverviewResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsCountryOverviewResponse'
        description: Rankings Country Overview Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsCountryRankingBracketResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsCountrRankingBracketResponse'
        description: Rankings Country Bracket Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsTeamBestResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsTeamBestResponse'
        description: Rankings Team Best Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsTeamOverviewResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsTeamOverviewResponse'
        description: Rankings Team Overview Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsTeamRankingBracketResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsTeamRankingBracketResponse'
        description: Rankings Team Bracket Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsTeamsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsTeamResponse'
        description: Rankings Teams Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsUniversitiesResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsUniversitiesResponse'
        description: Rankings Universities Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsUniversityBestResponse:
        content:
          application/json:
            example: {}
        description: Rankings University Best Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsUniversityOverviewResponse:
        content:
          application/json:
            example: {}
        description: Rankings University Overview Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsUniversityRankingBracketByIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsUniversityRankingBracketByIdResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsUniversityRankingBracketResponse:
        content:
          application/json:
            example: {}
        description: Rankings University Bracket Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsUserBestResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsUserBestResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsUserOverviewResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsUserOverviewResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsUserRankingBracketResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsUserRankingBracketResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      RankingsUsersResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RankingsUsersResponse'
        description: Rankings Users Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      ReviewSherlockSherlockIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewsResponse'
        description: Review Sherlock Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SearchFetchResponse:
        content:
          text/html:
            schema:
              $ref: '#/components/schemas/SearchFetchResponse'
        description: Search results
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SeasonListResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeasonListResponse'
        description: Season List Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SeasonMachineActiveResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeasonActive'
        description: Season Machine Active Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SeasonMachinesCompletedSeasonIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeasonCompletedMachine'
        description: Season Machines Completed Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SeasonMachinesResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeasonMachines'
        description: Season Machines Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SeasonPlatersLeaderboardTopResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeasonPlatersLeaderboardTopResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SeasonPlayersLeaderboardResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeasonPlayersLeaderboardResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SeasonRewardsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeasonRewardsResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SeasonUserFollowersSeasonIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeasonUserFollowers'
        description: Season User Followers Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SeasonUserRankSeasonIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeasonUserRank'
        description: Season User Rank Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SherlocksCategoriesListResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SherlocksCategoriesListResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SherlocksDownloadLinkResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SherlockDownloadLink'
        description: Sherlocks Download Link Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SherlocksNameResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SherlockNamedItem'
        description: Sherlocks Name Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SherlocksResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SherlockItemList'
        description: Sherlocks Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SherlocksSherlockId404:
        content:
          application/json:
            example:
              message: No results for this sherlock
        description: Not Found
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SherlocksSherlockIdInfoResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SherlockInfo'
        description: Sherlock Info Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SherlocksSherlockIdPlayResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SherlockPlayResponse'
        description: Sherlock Play Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SherlocksSherlockIdProgressResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SherlockProgress'
        description: Sherlock Progress Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SherlocksSherlockIdTasksResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SherlockTasksList'
        description: Sherlock Tasks Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SherlocksSherlockIdTasksTaskIdFlag201:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskFlagResponse'
        description: Sherlock Tasks Task Id Flag Created Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SherlocksSherlockIdTasksTaskIdFlag400:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BadRequestError'
        description: Sherlock Tasks Task Id Flag Bad Request
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SherlocksSherlockIdWriteupOfficialResponse:
        content:
          application/pdf:
            schema:
              format: binary
              type: string
        description: Sherlock Official Writeup Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SherlocksSherlockIdWriteupResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SherlockWriteup'
        description: Sherlock Writeup Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SidebarAnnouncementResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SidebarAnnouncementResponse'
        description: Sidebar Announcement Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SidebarChangelogResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SidebarChangeLogResponse'
        description: Sidebar Changelog Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SpProfileStartingPointIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpProfileIdResponse'
        description: Sp Profile Starting Point Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SpTaskFlagResponse:
        description: Sp Task Flag Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SpTierResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpTierResponse'
        description: Sp Tier Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SpTiersProgressResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpTiersProgressResponse'
        description: Sp Tiers Progress Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      SubscriptionsPricingResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionsPricingResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      TeamActivityTeamIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamActivityIdResponse'
        description: Team Activity Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      TeamChartChallengeTeamIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeCatagoriesDetails'
        description: Team Challenge Chart Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      TeamChartMachinesAttackTeamIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineAttackDetails'
        description: Team Machines Attack Chart Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      TeamGraphTeamIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamGraphIdResponse'
        description: Team Graph Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      TeamInfoTeamIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamInfoIdResponse'
        description: Team Info Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      TeamInvitationsTeamIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamInvitationsIdResponse'
        description: Team Invitations Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      TeamMembersTeamIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMembersIdResponse'
        description: Team Members Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      TeamStatsOwnsTeamIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnStats'
        description: Team Owns Stats Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      TodoResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoResponse'
        description: ToDo Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      TracksIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TracksIdResponse'
        description: Tracks Id Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      TracksLikeResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TracksLikeResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      TracksResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TracksResponse'
        description: Tracks Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      TraksEnrollResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraksEnrollResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UniversityActivityResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversityActivityResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UniversityAllListResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversityAllListResponse'
        description: University List Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UniversityChartChallengeCategoriesResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversityChartChallengeCategoriesResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UniversityChartMachinesAttackResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversityChartMachinesAttackResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UniversityCountryListResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversityCountryListResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UniversityMembersTeamIdResponse:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UniversityMembersResponse'
              type: array
        description: University Members Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UniversityMyResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversityMyResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UniversityNewListResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversityNewListResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UniversityProfileTeamIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamInformationProfileResponse'
        description: University Profile Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UniversityStatsOwnsUserIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnStats'
        description: University Owns Stats Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UniversityTopListResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversityTopListResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserAchievementTarTypeUserIdTarIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAchievementTarTypeUserIdTarIdResponse'
        description: User Achievement Target Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserAnonymizedIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAnonymizedIdResponse'
        description: User Anonymized ID Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserApptokenCreateResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserApptokenCreateResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserApptokenListResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserApptokenListResponse'
        description: OK
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserCareerResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCareerResponse'
        description: OK
      UserConnectionStatusResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConnectionStatusResponse'
        description: User Connection Status Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserDashboardResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDashboardResponse'
        description: User Dashboard Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserFeedbackBugAreasResponse:
        content:
          application/json:
            example: {}
        description: User Feedback Bug Areas Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserFollowersResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFollowersResponse'
        description: User Followers Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserInfoResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoResponse'
        description: User Info Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserProfileBasicUserIdResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileBasicIdResponse'
        description: User Profile Basic Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserProfileProgressSherlocksResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileProgressSherlocksResponse'
        description: OK
      UserProfileSummaryResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileIdRepsonse'
        description: User Profile Summary Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserSettingsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettingsResponse'
        description: User Settings Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserSubmissionsChallengesResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubmissionsChallengesResponse'
        description: User Submissions Challenges Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserSubmissionsMachinesResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubmissionsMachineResponse'
        description: User Submissions Machines Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserSubscriptionBillingHistory:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubscriptionBillingHistory'
        description: OK
      UserSubscriptionsBalanceResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubscriptionsBalanceResponse'
        description: User Subscriptions Balance Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserSubscriptionsCancellationReasonsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubscriptionsCancellationReasonsResponse'
        description: OK
      UserSubscriptionsManageRecurlyResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubscriptionsManageRecurlyResponse'
        description: User Subscriptions Manage Recurly Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserSubscriptionsResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubscriptionsResponse'
        description: User Subscriptions Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      UserTracksResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTracksResponse'
        description: User Tracks Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      VmExtendResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        description: VM Reset Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      VmReset400:
        content:
          application/json:
            examples:
              already_voted:
                summary: user_ already voted
                value:
                  message: Faculty was not reset. user_ has already voted for resetting a machine.
              voted_too_many_times:
                summary: Voted too many times
                value:
                  message: Too many reset machine attempts. Try again later!
        description: Vm Reset Bad Request
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      VmResetResponse:
        content:
          application/json:
            example:
              message: Carpediem will be reset in 1 minute.
            schema:
              $ref: '#/components/schemas/Message'
        description: VM Reset Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
      VmSpawnResponse:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Messagesuccess'
        description: Vm Spawn Response
        headers:
          x-ratelimit-limit:
            $ref: '#/components/headers/XRateLimitHeader'
          x-ratelimit-remaining:
            $ref: '#/components/headers/XRateLimitRemainingHeader'
    schemas:
      AcademyModule:
        description: Academy Module Item
        properties:
          avatar:
            example: https://academy.hackthebox.com/storage/modules/19/avatar.png
            type: string
          difficulty:
            properties:
              color:
                example: success
                type: string
              id:
                example: 3
                type: integer
              level:
                example: 3
                type: integer
              text:
                example: Easy
                type: string
              title:
                example: Easy
                type: string
            type: object
          id:
            example: 19
            type: integer
          logo:
            example: https://academy.hackthebox.com/storage/modules/19/avatar.png
            type: string
          name:
            example: Network Enumeration with Nmap
            type: string
          tier:
            properties:
              color:
                example: success
                type: string
              name:
                example: Tier I
                type: string
              number:
                example: 1
                type: integer
            type: object
          url:
            example: https://academy.hackthebox.com/course/preview/network-enumeration-with-nmap
            type: string
        title: Academy Module
        type: object
      ActiveMachineResponse:
        description: Schema definition for Active Machine Response
        properties:
          info:
            nullable: true
            properties:
              avatar:
                example: /storage/avatars/23e804513a47e8f20bc865d0419946e1.png
                type: string
              expires_at:
                example: '2024-05-18 17:42:04'
                type: string
              id:
                example: 597
                type: integer
              ip:
                example: 10.129.56.30
                format: ipv4
                nullable: true
                type: string
              isSpawning:
                example: false
                type: boolean
              lab_server:
                example: vip_lab
                type: string
              name:
                example: Usage
                type: string
              tier_id:
                example: null
                nullable: true
                type: string
              type:
                example: Free
                type: string
              voted:
                example: null
                nullable: true
                type: string
              voting:
                example: null
                nullable: true
                type: string
              vpn_server_id:
                example: 289
                nullable: true
                type: integer
            type: object
        title: Active Machine Response
        type: object
      Announcement:
        description: Schema definition for Announcement
        properties:
          created_at:
            example: '2023-12-12T15:55:50.000000Z'
            format: date-time
            type: string
          id:
            example: 113
            type: integer
          title:
            example: Hack The Box named a global leader in Cybersecurity Skills and Training Platforms.
            type: string
          updated_at:
            example: '2023-12-12T15:55:50.000000Z'
            format: date-time
            type: string
        title: Announcement
        type: object
      AssignedServerConnection:
        description: Schema definition for Assigned Server
        nullable: true
        properties:
          current_clients:
            example: 85
            type: integer
          friendly_name:
            example: US VIP+ 1
            type: string
          id:
            example: 289
            type: integer
          location:
            example: US
            type: string
        title: Assigned Server
        type: object
      AssignedServerConnectionsServers:
        description: Schema definition for Assigned Server
        nullable: true
        properties:
          current_clients:
            example: 85
            type: integer
          friendly_name:
            example: US VIP+ 1
            type: string
          id:
            example: 289
            type: integer
          location:
            example: US
            type: string
          location_type_friendly:
            type: string
        title: Assigned Server
        type: object
      BadRequestError:
        description: Schema definition for Bad Request Error
        properties:
          message:
            type: string
        title: Bad Request Error
        type: object
      Badge:
        description: Schema definition for Badge
        properties:
          badge_category_id:
            example: 1
            type: integer
          color:
            example: gold
            nullable: true
            type: string
          description_en:
            example: Has been in the Top 10 of the Hall of Fame.
            type: string
          icon:
            example: far fa-list-ol
            type: string
          id:
            example: 2
            type: integer
          name:
            example: Top 10
            type: string
          rarity:
            type: number
          users_count:
            example: 326
            type: integer
        title: Badge
        type: object
      BadgesResponse:
        description: Schema definition for Badges Response
        properties:
          categories:
            items:
              properties:
                badges:
                  items:
                    $ref: '#/components/schemas/Badge'
                  type: array
                description:
                  type: string
                id:
                  type: integer
                name:
                  type: string
              type: object
            type: array
        title: Badges Response
        type: object
      BgCurrentBgUserIdResponse:
        description: Schema definition for Bg Get Battleground User Id Response
        properties:
          avg_last_ping:
            type: integer
          bg_users:
            type: string
          duration:
            type: integer
          ends_at:
            format: date-time
            type: string
          free:
            type: integer
          game_mode:
            type: integer
          id:
            type: integer
          machines:
            items:
              properties:
                friendly_name:
                  type: string
                id:
                  type: integer
                ip:
                  example: 10.10.10.10
                  format: ipv4
                  nullable: true
                  type: string
                last_condition:
                  type: string
                last_ping:
                  type: number
                os:
                  type: string
                points:
                  type: integer
                root_flag:
                  $ref: '#/components/schemas/BgMachineFlag'
                shielded:
                  type: integer
                status:
                  type: string
                team_id:
                  nullable: true
                  type: integer
                user_flag:
                  $ref: '#/components/schemas/BgMachineFlag'
              type: object
            type: array
          private:
            type: integer
          scores:
            items:
              properties:
                availability_points:
                  type: integer
                own_points:
                  type: string
                reset_points:
                  type: integer
                team_id:
                  type: integer
                total_points:
                  type: integer
              type: object
            type: array
          starts_at:
            format: date-time
            type: string
          state:
            type: string
          teams:
            items:
              properties:
                battleground_users:
                  items:
                    properties:
                      avatar:
                        type: string
                      connected:
                        type: integer
                      connected_at:
                        format: date-time
                        type: string
                      external_id:
                        type: string
                      id:
                        type: integer
                      kilobytes_down:
                        type: number
                      kilobytes_up:
                        type: number
                      name:
                        type: string
                      team_id:
                        type: integer
                      vote_banned:
                        type: integer
                    type: object
                  type: array
                friendly_name:
                  type: string
                id:
                  type: integer
              type: object
            type: array
          type:
            type: string
        title: Battleground Get Battleground User ID Response
        type: object
      BgEventCurrentResponse:
        description: Schema definition for Bg Event Current Response
        properties:
          event:
            nullable: true
            type: object
        title: Battleground Event Current Response
        type: object
      BgFlagOwnResponse:
        description: Schema definition for Bg Flag Own Response
        properties:
          machine_id:
            type: integer
          poaints:
            type: integer
        title: Battleground Flag Own Response
        type: object
      BgHistoryCurrentResponse:
        description: Schema definition for Bg History Battleground User Id Response
        properties:
          battleground:
            properties:
              duration:
                type: number
              ends_at:
                type: string
              id:
                type: number
              starts_at:
                type: string
              type:
                type: string
            type: object
          history:
            items:
              properties:
                created_at:
                  type: string
                id:
                  type: number
                round:
                  type: number
                text:
                  type: string
                type:
                  type: string
              type: object
            type: array
        title: Battleground History Battleground User ID Response
        type: object
      BgLoadingStatusCurrentBgUserIdResponse:
        description: Loading Status Current BG User
        properties:
          free:
            type: integer
          loading_end_date:
            format: date-time
            type: string
          loading_start_date:
            format: date-time
            type: string
          private:
            type: integer
          started:
            type: boolean
        title: Battleground Loading Status Battleground User ID Response
        type: object
      BgMachineAssignmentsCurrentBgUserIdResponse:
        description: Schema definition for Bg Machine Assignments Battleground User Id Response
        properties:
          itfroze:
            type: string
        title: Battleground Machine Assignments Battleground User ID Response
        type: object
      BgMachineFlag:
        description: BG Machine Flag
        nullable: true
        properties:
          created_at:
            format: date-time
            type: string
          flag_id:
            type: integer
          id:
            type: integer
          points:
            type: integer
          team_id:
            type: integer
          team_name:
            type: string
          user_id:
            type: integer
          user_name:
            type: string
        title: Battleground flag information
        type: object
      BgMatchAcceptResponse:
        description: Schema definition for Bg Match Accept Response
        properties:
          message:
            example: Accepted Match.
            type: string
        title: Battleground Match Accept Response
        type: object
      BgMatchHistoryAdResponse:
        properties:
          match_history:
            $ref: '#/components/schemas/BgMatchHistoryDetail'
        title: Battleground Match History AD Response
        type: object
      BgMatchHistoryDetail:
        items:
          properties:
            created_at:
              type: string
            flags_owned:
              type: number
            game_mode:
              type: number
            id:
              type: number
            result:
              type: string
            type:
              type: string
            variations:
              items:
                type: object
              type: array
          type: object
        type: array
      BgMatchHistoryKohResponse:
        properties:
          match_history:
            $ref: '#/components/schemas/BgMatchHistoryDetail'
        title: Battleground Match History KOH Response
        type: object
      BgMessagesCurrentBgUserIdResponse:
        description: Schema definition for Bg Messages Battleground User Id Response
        properties:
          itfroze:
            type: string
        title: Battleground Messages Battleground User ID Response
        type: object
      BgOpenTimesResponse:
        description: Schema definition for Bg Open Times Response
        properties:
          open_times:
            properties:
              canPlay:
                type: boolean
              next_close_time:
                nullable: true
                type: string
              next_open_time:
                nullable: true
                type: string
              schedule:
                items:
                  type: string
                type: array
            type: object
        title: Battleground Open Times Response
        type: object
      BgScoresResponse:
        properties:
          battleground:
            properties:
              duration:
                type: number
              ends_at:
                type: string
              free:
                type: number
              game_mode:
                type: number
              id:
                type: number
              machines:
                items:
                  properties:
                    friendly_name:
                      type: string
                    id:
                      type: integer
                    os:
                      type: string
                    points:
                      type: number
                    team_id:
                      type: integer
                      nullable: true
                  type: object
                type: array
              private:
                type: number
              starts_at:
                type: string
              surrender_id:
                type: integer
                nullable: true
              type:
                type: string
              winner_id:
                type: number
            type: object
          scores:
            properties:
              myteam:
                type: number
              teams:
                items:
                  properties:
                    availability_points:
                      type: number
                    id:
                      type: number
                    name:
                      type: string
                    own_points:
                      type: number
                    players:
                      items:
                        properties:
                          avatar:
                            type: string
                          external_id:
                            type: string
                          id:
                            type: number
                          name:
                            type: string
                          own_points:
                            oneOf:
                              - type: string
                              - type: number
                          total_owns:
                            type: number
                        type: object
                      type: array
                    reset_points:
                      type: number
                    total_points:
                      type: number
                  type: object
                type: array
              total_flags:
                type: number
            type: object
        type: object
      BgTeamsCurrentBgUserIdResponse:
        description: Schema definition for Bg Teams Get Battleground User Id Response
        properties:
          itfroze:
            type: string
        title: Battleground Teams Get Battleground User ID Response
        type: object
      BgTournamentRankDetail:
        items:
          properties:
            avatar:
              type: string
            id:
              type: number
            last_win_time:
              type: string
            name:
              type: string
            rank_id:
              type: number
            total_flags:
              type: number
            total_games:
              type: number
            total_points:
              oneOf:
                - type: string
                - type: number
            wins:
              type: number
          type: object
        type: array
      BgTournamentRankingResponse:
        properties:
          tournament_rankings:
            $ref: '#/components/schemas/BgTournamentRankDetail'
          user_rank:
            type: string
            nullable: true
        title: Battleground Tournament Ranking Response
        type: object
      BgTournamentRankingsPerRankResponse:
        properties:
          tournament_rankings:
            properties:
              Elite Hacker:
                $ref: '#/components/schemas/BgTournamentRankDetail'
              Guru:
                $ref: '#/components/schemas/BgTournamentRankDetail'
              Hacker:
                $ref: '#/components/schemas/BgTournamentRankDetail'
              Noob:
                $ref: '#/components/schemas/BgTournamentRankDetail'
              Omniscient:
                $ref: '#/components/schemas/BgTournamentRankDetail'
              Pro Hacker:
                $ref: '#/components/schemas/BgTournamentRankDetail'
            type: object
          user_rank:
            type: string
            nullable: true
        type: object
      BgUserBattlegroundIdResponse:
        description: Schema definition for Bg User Get Battleground Id Response
        properties:
          bgUserId:
            type: integer
        title: Battleground User Get Battleground ID Response
        type: object
      BgUserInfoResponse:
        description: Schema definition for Bg User Info Response
        properties:
          info:
            properties:
              avatar:
                type: string
              battlegrounds:
                properties:
                  canPlay:
                    type: boolean
                  current_bg_id:
                    type: integer
                    nullable: true
                  current_bg_type:
                    type: string
                    nullable: true
                  current_bg_user_id:
                    type: integer
                    nullable: true
                  current_team_id:
                    type: integer
                    nullable: true
                  hasBGPass:
                    type: boolean
                    nullable: true
                  joining:
                    oneOf:
                      - type: boolean
                        example: false
                      - type: object
                        properties:
                          available:
                            type: boolean
                            example: true
                          disqualified:
                            type: boolean
                            example: false
                          region:
                            type: string
                            example: EU
                          region_locked:
                            type: boolean
                            example: true
                  last_ad_tournament_id:
                    type: integer
                  last_koh_tournament_id:
                    type: integer
                  last_tournament_id:
                    type: integer
                  matches_played:
                    type: integer
                  max_matches:
                    type: integer
                  playing:
                    type: boolean
                  searching:
                    type: boolean
                  searching_game_mode:
                    nullable: true
                    type: string
                  searching_password:
                    nullable: true
                    type: string
                  searching_practice:
                    nullable: true
                    type: boolean
                  searching_type:
                    nullable: true
                    type: string
                  tournament_info:
                    nullable: true
                    type: string
                  upcoming_tournament:
                    nullable: true
                    type: string
                type: object
              id:
                type: integer
              name:
                type: string
              timezone:
                type: string
            type: object
        title: Battleground User Info Response
        type: object
      BgUserJoiningInfoResponse:
        description: Schema definition for Bg User Joining Info Response
        properties:
          info:
            properties:
              accepted_count:
                description: The count of users who have accepted the match.
                example: 1
                type: integer
              accepted_users:
                description: List of user IDs who have accepted the match.
                items:
                  example: 45667
                  type: integer
                type: array
              expire_match_time:
                description: The expiration time of the match in ISO 8601 format.
                example: '2024-08-09T11:00:58.000000Z'
                format: date-time
                type: string
              game_mode:
                description: The mode of the game, represented by an integer.
                example: 1
                type: integer
              hasVoted:
                description: Indicates whether the user has voted in the match.
                example: true
                type: boolean
              match_players:
                description: List of players participating in the match.
                items:
                  properties:
                    avatar:
                      description: The URL path to the player's avatar image.
                      example: /storage/avatars/546345362353d1e715678e73af78d0.png
                      type: string
                    name:
                      description: The name of the player.
                      example: ausername
                      type: string
                    user_id:
                      description: The unique identifier for the player.
                      example: 45645
                      type: integer
                  type: object
                type: array
              type:
                description: The type of the match.
                example: koh
                type: string
            type: object
            nullable: true
        title: Battleground User Joining Info Response
        type: object
      BgUserKeyCurrentBgUserIdResponse:
        description: Schema definition for Bg User Key Battleground User Id Response
        properties:
          key:
            type: string
        title: Battleground User Key Battleground User ID Response
        type: object
      BloodInfo:
        description: Schema definition for Blood Info
        properties:
          blood_difference:
            type: string
          created_at:
            type: string
          user:
            $ref: '#/components/schemas/UserBasic'
        title: Blood Info
        type: object
      CareerCompaniesResponse:
        properties:
          data:
            items:
              properties:
                career_logo:
                  nullable: true
                  type: string
                featured:
                  type: boolean
                id:
                  type: number
                job_offers:
                  type: number
                logo:
                  nullable: true
                  type: string
                name:
                  type: string
              type: object
            type: array
        title: Career Companies Response
        type: object
      CareerCompanyResponse:
        properties:
          data:
            properties:
              company:
                properties:
                  description:
                    type: string
                  featured:
                    type: boolean
                  id:
                    type: number
                  latest_post:
                    nullable: true
                    type: string
                  logo:
                    type: string
                  name:
                    type: string
                  url:
                    type: string
                type: object
              jobs:
                items:
                  properties:
                    application_url:
                      nullable: true
                      type: object
                    applied:
                      type: boolean
                    company:
                      properties:
                        id:
                          type: number
                        name:
                          type: string
                        url:
                          type: string
                      type: object
                    company_logo:
                      type: string
                    country:
                      type: string
                    created_at:
                      type: string
                    external_employer_name:
                      nullable: true
                      type: object
                    external_link:
                      nullable: true
                      type: string
                    has_application_url:
                      type: boolean
                    id:
                      type: number
                    minimum_rank_id:
                      type: number
                    minimum_rank_name:
                      type: string
                    remote:
                      nullable: true
                      type: string
                    title:
                      type: string
                    updated_at:
                      type: string
                    work_type:
                      type: string
                  type: object
                type: array
            type: object
          meta:
            $ref: '#/components/schemas/MetaAlt'
        type: object
      CareerFeaturedResponse:
        description: Schema definition for Career Featured Response
        properties:
          data:
            items:
              properties:
                id:
                  type: integer
                logo:
                  type: string
                name:
                  type: string
              type: object
            type: array
        title: Career Featured Response
        type: object
      CareerHistoryResponse:
        description: Schema definition for Career History Response
        properties:
          data:
            items:
              type: string
            type: array
          meta:
            $ref: '#/components/schemas/MetaAlt'
        title: Career History Response
        type: object
      CareerInfoResponse:
        properties:
          data:
            properties:
              application_url:
                nullable: true
                type: string
              applied:
                type: boolean
              company:
                properties:
                  id:
                    type: number
                  name:
                    type: string
                  url:
                    type: string
                type: object
              company_logo:
                type: string
              country:
                type: string
              created_at:
                type: string
              description:
                type: string
              external_employer_name:
                nullable: true
                type: string
              external_link:
                nullable: true
                type: string
              has_application_url:
                type: boolean
              id:
                type: number
              minimum_rank_id:
                type: number
              minimum_rank_name:
                type: string
              other_jobs:
                items:
                  type: object
                type: array
              remote:
                nullable: true
                type: boolean
              title:
                type: string
              updated_at:
                type: string
              work_type:
                type: string
            type: object
        type: object
      CareerProfileResponse:
        description: Schema definition for Career Profile Response
        properties:
          data:
            properties:
              freelance:
                nullable: true
                type: string
              full_time:
                nullable: true
                type: string
              opt_in:
                type: boolean
              skills:
                items:
                  type: string
                type: array
            type: object
        title: Career Profile Response
        type: object
      CareerRequestsResponse:
        properties:
          data:
            items:
              type: object
            type: array
          meta:
            $ref: '#/components/schemas/MetaAlt'
        type: object
      CareerSearchResponse:
        description: Schema definition for Career Search Response
        properties:
          data:
            items:
              properties:
                application_url:
                  nullable: true
                  type: string
                applied:
                  type: boolean
                company:
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    url:
                      nullable: true
                      type: string
                  type: object
                company_logo:
                  type: string
                created_at:
                  format: date-time
                  type: string
                external_employer_name:
                  nullable: true
                  type: string
                external_link:
                  type: string
                  nullable: true
                has_application_url:
                  type: boolean
                id:
                  type: integer
                minimum_rank_id:
                  type: integer
                minimum_rank_name:
                  type: string
                remote:
                  nullable: true
                  type: string
                title:
                  type: string
                updated_at:
                  format: date-time
                  type: string
                work_type:
                  type: string
              type: object
            type: array
          meta:
            $ref: '#/components/schemas/MetaAlt'
        title: Career Search Response
        type: object
      CareerStatsResponse:
        description: Schema definition for Career Stats Response
        properties:
          data:
            properties:
              new_today:
                type: integer
              total_job_offers:
                type: integer
            type: object
        title: Career Stats Response
        type: object
      Challenge:
        description: Schema definition for Challenge
        properties:
          authUserHasReviewed:
            example: false
            type: boolean
          authUserSolve:
            example: false
            type: boolean
          authUserSolveTime:
            example: null
            nullable: true
            type: string
          can_access_walkthough:
            type: boolean
          category_name:
            example: Crypto
            type: string
          creator2_avatar:
            example: null
            nullable: true
            type: string
          creator2_id:
            example: null
            nullable: true
            type: integer
          creator2_name:
            example: null
            nullable: true
            type: string
          creator_avatar:
            example: /storage/avatars/2a956277f4de5800bf659c63cbbd140b.png
            type: string
          creator_id:
            example: 185587
            type: integer
          creator_name:
            example: DaysOfLife
            type: string
          description:
            example: The more the merrier, right? We decided to mash two of the best cryptosytems together for the best product...
            type: string
          difficulty:
            example: Medium
            type: string
          difficulty_chart:
            properties:
              counterBitHard:
                example: 131
                type: integer
              counterBrainFuck:
                example: 19
                type: integer
              counterCake:
                example: 27
                type: integer
              counterEasy:
                example: 42
                type: integer
              counterExHard:
                example: 13
                type: integer
              counterHard:
                example: 83
                type: integer
              counterMedium:
                example: 246
                type: integer
              counterTooEasy:
                example: 96
                type: integer
              counterTooHard:
                example: 35
                type: integer
              counterVeryEasy:
                example: 31
                type: integer
            type: object
          dislikeByAuthUser:
            example: false
            type: boolean
          dislikes:
            example: 0
            type: integer
          docker:
            example: true
            nullable: true
            type: boolean
          docker_ip:
            example: null
            nullable: true
            type: string
          docker_ports:
            example: null
            nullable: true
            type: string
          download:
            example: true
            type: boolean
          first_blood_time:
            example: 0H 39M 49S
            type: string
          first_blood_user:
            example: sampriti
            type: string
          first_blood_user_avatar:
            example: /storage/avatars/03d6176149e9fe81c83590dd4e7a5225.png
            type: string
          first_blood_user_id:
            example: 836
            type: integer
          id:
            example: 206
            type: integer
          isRespected:
            example: false
            type: boolean
          isRespected2:
            example: null
            nullable: true
            type: boolean
          isTodo:
            example: false
            type: boolean
          likeByAuthUser:
            example: false
            type: boolean
          likes:
            example: 0
            type: integer
          name:
            example: Composition
            type: string
          points:
            oneOf:
              - type: string
              - type: number
          recommended:
            example: 0
            type: integer
          release_date:
            example: '2021-04-02T20:00:00.000000Z'
            format: date-time
            type: string
          released:
            example: 1
            type: integer
          retired:
            example: true
            type: boolean
          sha256:
            example: b3edd221b1ca7ae93673ddcbdfe5dbe2109998db2865f0e1b8ec5cc9fac56492
            type: string
          solves:
            example: 704
            type: integer
          stars:
            example: 4.8
            format: float
            type: number
          state:
            example: retired
            type: string
          tags:
            example: []
            items:
              type: string
            type: array
          user_can_review:
            example: true
            type: boolean
        title: Challenge
        type: object
      ChallengeActivity:
        description: Schema definition for Challenge Activity
        properties:
          created_at:
            example: '2020-02-07T20:03:28.000000Z'
            format: date-time
            type: string
          date:
            example: February 7th, 2020 10:03 pm
            type: string
          date_diff:
            example: 4 years ago
            type: string
          type:
            example: blood
            type: string
          user_avatar:
            example: /storage/avatars/fd5b946aaadbb0254014fa10a22dd403.png
            type: string
          user_id:
            example: 82600
            type: integer
          user_name:
            example: del_KZx497Ju
            type: string
        title: Challenge Activity
        type: object
      ChallengeActivityResponse:
        description: Schema definition for Challenge Activity Response
        properties:
          info:
            properties:
              activity:
                items:
                  $ref: '#/components/schemas/ChallengeActivity'
                type: array
            type: object
        title: Challenge Activity Response
        type: object
      ChallengeCatagoriesDetails:
        description: Schema definition for Challenge Catagories Details
        properties:
          data:
            items:
              properties:
                all_teams_avg_percentage:
                  example: 6.72
                  format: float
                  type: number
                id:
                  example: 1
                  type: integer
                name:
                  example: Reversing
                  type: string
                team_percentage:
                  example: 23.53
                  format: float
                  type: number
              type: object
            type: array
          status:
            example: true
            type: boolean
        type: object
      ChallengeCategoriesListResponse:
        description: Schema definition for Challenge Categories List Response
        properties:
          info:
            items:
              properties:
                icon:
                  example: https://labs.hackthebox.com/storage/challenge_categories/c20ad4d76fe97759aa27a0c99bff6710.svg
                  type: string
                id:
                  example: 21
                  type: integer
                name:
                  example: AI - ML
                  type: string
              type: object
            type: array
        title: Challenge Categories List Response
        type: object
      ChallengeChangelogIdResponse:
        description: Schema definition for Challenge Changelog Id Response
        properties:
          data:
            items:
              type: string
            type: array
          status:
            type: boolean
        title: Challenge Change Log Id Response
        type: object
      ChallengeIdResponse:
        description: Schema definition for Challenge Id Response
        properties:
          challenge:
            $ref: '#/components/schemas/Challenge'
        title: Challenge Id Response
        type: object
      ChallengeList:
        description: Schema definition for Challenge List
        items:
          properties:
            auth_user_has_reviewed:
              example: false
              type: boolean
            avatar:
              example: null
              nullable: true
              type: string
            category_id:
              example: 4
              type: integer
            category_name:
              example: Pwn
              type: string
            difficulty:
              example: Very Easy
              type: string
            difficulty_chart:
              properties:
                counterBitHard:
                  example: 7
                  type: integer
                counterBrainFuck:
                  example: 6
                  type: integer
                counterCake:
                  example: 23
                  type: integer
                counterEasy:
                  example: 26
                  type: integer
                counterExHard:
                  example: 1
                  type: integer
                counterHard:
                  example: 1
                  type: integer
                counterMedium:
                  example: 9
                  type: integer
                counterTooEasy:
                  example: 17
                  type: integer
                counterTooHard:
                  example: 3
                  type: integer
                counterVeryEasy:
                  example: 35
                  type: integer
              type: object
            id:
              example: 706
              type: integer
            is_owned:
              example: false
              type: boolean
            name:
              example: Regularity
              type: string
            pinned:
              type: boolean
            rating:
              example: 4
              format: float
              nullable: true
              type: number
            rating_count:
              example: 1
              type: integer
            release_date:
              example: '2024-06-07T20:00:00.000000Z'
              format: date-time
              type: string
            solves:
              example: 132
              type: integer
            state:
              example: retired
              type: string
            user_difficulty:
              example: '3.33'
              type: string
        title: Challenge List
      ChallengeListResponse:
        description: Schema definition for Challenge List Response
        properties:
          data:
            $ref: '#/components/schemas/ChallengeList'
          links:
            $ref: '#/components/schemas/Links'
          meta:
            $ref: '#/components/schemas/Meta'
        title: Challenge List Response
        type: object
      ChallengeOwnResponse:
        description: Schema definition for Challenge Own Response
        properties:
          message:
            example: Congratulations!
            type: string
          user_rank:
            $ref: '#/components/schemas/UserRank'
        title: Challenge Own Response
        type: object
      ChallengeRecommendedResponse:
        description: Schema definition for Challenge Recommended Response
        properties:
          card1:
            $ref: '#/components/schemas/RecommendedCard'
          card2:
            $ref: '#/components/schemas/RecommendedCard'
          state:
            example:
              - coming
              - retiring
            items:
              type: string
            type: array
        title: Challenge Recommended Response
        type: object
      ChallengeRecommendedRetiredResponse:
        description: Schema definition for Challenge Recommended Retired Response
        properties:
          card1:
            $ref: '#/components/schemas/RecommendedCardRetired'
          card2:
            $ref: '#/components/schemas/RecommendedCardRetired'
        title: Challenge Recommended Retired Response
        type: object
      ChallengeReviewsUserIdResponse:
        description: Schema definition for Challenge Reviews User Id Response
        properties:
          info:
            nullable: true
            type: string
        title: Challenge Reviews User Id Response
        type: object
      ChallengeStartResponse:
        description: Schema definition for Challenge Start Response
        properties:
          id:
            example: 1214160
            type: integer
          message:
            example: Instance Created!
            type: string
        title: Challenge Start Response
        type: object
      ChallengeSuggestedResponse:
        description: Schema definition for Challenge Suggested Response
        properties:
          data:
            properties:
              challenge_category_name:
                type: string
              id:
                type: integer
              name:
                type: string
              url_name:
                type: string
            type: object
          message:
            type: string
          status:
            type: boolean
        title: Challenge Suggested Response
        type: object
      ChallengeWriteupResponse:
        description: Schema definition for Challenge Writeup Response
        properties:
          data:
            properties:
              official:
                properties:
                  filename:
                    type: string
                  sha256:
                    type: string
                  url:
                    type: string
                type: object
            type: object
        title: Challenge writeups
        type: object
      Change:
        description: Schema definition for Change
        properties:
          changelog_id:
            example: 41
            type: integer
          id:
            example: 146
            type: integer
          text:
            example: We have introduced a new paid submission initiative, aiming to further improve the quality of our challenges and reward our valuable community members who wish to contribute to our weekly release roadmap.
            type: string
          type:
            example: change
            type: string
        title: Change
        type: object
      ChangeLog:
        description: Schema definition for Change Log
        properties:
          changes:
            items:
              $ref: '#/components/schemas/Change'
            type: array
          created_at:
            example: '2021-11-12T10:38:24.000000Z'
            format: date-time
            type: string
          description:
            example: null
            nullable: true
            type: string
          id:
            example: 41
            type: integer
          version:
            example: 3.18.0
            type: string
        title: Change Log
        type: object
      ChangeLogsResponse:
        description: Schema definition for Change Logs Response
        properties:
          changelogs:
            items:
              $ref: '#/components/schemas/ChangeLog'
            type: array
        title: Change Log Response
        type: object
      UserProfileBloodsResponse:
        type: object
        properties:
          profile:
            type: object
            properties:
              bloods:
                type: object
                properties:
                  machines:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        avatar:
                          type: string
                        os:
                          type: string
                        difficulty_text:
                          type: string
                        user_blood:
                          type: boolean
                        user_blood_difference:
                          type: string
                        root_blood:
                          type: boolean
                        root_blood_difference:
                          type: string
                  challenges:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        category_name:
                          type: string
                        difficulty_text:
                          type: string
                        blood_difference:
                          type: string
      UserProfileActivityResponse:
        type: object
        properties:
          profile:
            type: object
            properties:
              activity:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                    date_diff:
                      type: string
                    object_type:
                      type: string
                    type:
                      type: string
                    first_blood:
                      type: boolean
                    id:
                      type: integer
                    name:
                      type: string
                    points:
                      type: integer
                    machine_avatar:
                      type: string
      CommonIdName:
        description: Schema definition for Common Id Name
        properties:
          id:
            type: integer
          name:
            type: string
        title: Common Id Name
        type: object
      Company:
        description: Schema definition for Company
        properties:
          description:
            example: <p>Jet.com is currently looking for Security Engineers in the USA.</p>...
            format: html
            type: string
          id:
            example: 3
            type: integer
          image:
            example: https://labs.hackthebox.com/storage/companies/3.png
            type: string
          name:
            example: Jet.com
            type: string
          url:
            example: https://jet.com/careers
            type: string
        title: Company
        type: object
      ConnectionServerSwitchResponse:
        description: Schema definition for Connection Server Switch Response
        properties:
          data:
            $ref: '#/components/schemas/SwitchedServer'
          message:
            example: VPN server switched
            type: string
          status:
            example: true
            type: boolean
        title: Connection Server Switch Resposne
        type: object
      ConnectionStatusProductResponse:
        properties:
          data:
            properties:
              connection:
                nullable: true
                properties:
                  down:
                    type: number
                  ip4:
                    type: string
                  ip6:
                    type: string
                  name:
                    type: string
                  through_pwnbox:
                    type: boolean
                  up:
                    type: number
                type: object
              location_type_friendly:
                type: string
              server:
                properties:
                  friendly_name:
                    type: string
                  hostname:
                    type: string
                  id:
                    type: number
                type: object
            type: object
          status:
            type: boolean
          type:
            type: string
        type: object
      ConnectionStatusResponse:
        description: Schema definition for Connection Status Response
        items:
          properties:
            connection:
              properties:
                down:
                  type: number
                ip4:
                  type: string
                ip6:
                  type: string
                name:
                  type: string
                through_pwnbox:
                  type: boolean
                up:
                  type: number
              type: object
            location_type_friendly:
              type: string
            server:
              properties:
                friendly_name:
                  type: string
                hostname:
                  type: string
                id:
                  type: integer
                port:
                  type: integer
              type: object
            type:
              type: string
          type: object
        title: Connection Status Response
        type: array
      ConnectionsResponse:
        description: Schema definition for Connections Response
        properties:
          data:
            properties:
              competitive:
                properties:
                  assigned_server:
                    $ref: '#/components/schemas/AssignedServerConnection'
                  available:
                    type: boolean
                  can_access:
                    type: boolean
                  location_type_friendly:
                    type: string
                  machine:
                    properties:
                      avatar_thumb_url:
                        type: string
                      id:
                        type: integer
                      name:
                        type: string
                    type: object
                type: object
              endgames:
                properties:
                  assigned_server:
                    $ref: '#/components/schemas/AssignedServerConnection'
                  can_access:
                    type: boolean
                  location_type_friendly:
                    nullable: true
                    type: string
                type: object
              fortresses:
                properties:
                  assigned_server:
                    $ref: '#/components/schemas/AssignedServerConnection'
                  can_access:
                    type: boolean
                  location_type_friendly:
                    type: string
                type: object
              lab:
                properties:
                  assigned_server:
                    $ref: '#/components/schemas/AssignedServerConnection'
                  can_access:
                    type: boolean
                  location_type_friendly:
                    type: string
                type: object
              pro_labs:
                properties:
                  assigned_server:
                    $ref: '#/components/schemas/AssignedServerConnection'
                  can_access:
                    type: boolean
                  fullhouse:
                    properties:
                      assigned_server:
                        $ref: '#/components/schemas/AssignedServerConnection'
                        nullable: true
                      can_access:
                        type: boolean
                      location_type_friendly:
                        nullable: true
                        type: string
                      pro_lab:
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                        type: object
                    type: object
                  solar:
                    properties:
                      assigned_server:
                        $ref: '#/components/schemas/AssignedServerConnection'
                        nullable: true
                      can_access:
                        type: boolean
                      location_type_friendly:
                        nullable: true
                        type: string
                      pro_lab:
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                        type: object
                    type: object
                type: object
              starting_point:
                properties:
                  assigned_server:
                    $ref: '#/components/schemas/AssignedServerConnection'
                  can_access:
                    type: boolean
                  location_type_friendly:
                    type: string
                type: object
            type: object
          status:
            type: boolean
        title: Connections Response
        type: object
      ConnectionsServerResponse:
        description: Schema definition for Connections Server Response
        properties:
          data:
            properties:
              assigned:
                $ref: '#/components/schemas/AssignedServerConnectionsServers'
              disabled:
                example: false
                type: boolean
              options:
                $ref: '#/components/schemas/Options'
            type: object
          status:
            type: boolean
        title: Connections Server Response
        type: object
      ConnectionsServersProlabResponse:
        properties:
          data:
            properties:
              assigned:
                nullable: true
                type: object
              options:
                $ref: '#/components/schemas/Options'
            type: object
          status:
            type: boolean
        type: object
      ContentStatsResponse:
        description: Schema definition for Content Stats Response
        properties:
          challenges:
            example: 533
            type: integer
          machines:
            example: 388
            type: integer
        title: Content Stats Resposne
        type: object
      Creator:
        description: Schema definition for Creator
        properties:
          avatar_thumb:
            example: /storage/avatars/dc1de03becebcd2b3d0db515230e876e_thumb.png
            type: string
          id:
            example: 302
            type: integer
          name:
            example: eks
            type: string
        title: Creator
        type: object
      DashboardPlayers:
        description: Schema definition for Dashboard Players
        properties:
          online_players:
            example: '644'
            type: string
        title: Dashboard Players
        type: object
      DesignatedLevel:
        description: Schema definition for Designated Level
        properties:
          category:
            example: Red team_ Operator
            type: string
          description:
            example: Hone your offensive tradecraft with a Red team_ Operator Level I lab. From gaining a foothold and establishing situational awareness, to exploiting interactive users and "living off the land", this will put your skills to the test.
            type: string
          level:
            example: 1
            type: integer
          team:
            example: red
            type: string
        title: Designated Level
        type: object
      EndgameIdFlagsResponse:
        description: Schema definition for Endgame Id Flags Response
        properties:
          data:
            items:
              properties:
                id:
                  type: integer
                owned:
                  oneOf:
                    - type: boolean
                    - type: integer
                points:
                  oneOf:
                    - type: boolean
                    - type: integer
                title:
                  type: string
              type: object
            type: array
          status:
            oneOf:
              - type: boolean
              - type: integer
        title: Endgame Id Flags Response
        type: object
      EndgameIdMachinesResponse:
        description: Schema definition for Endgame Id Machines Response
        properties:
          data:
            items:
              properties:
                avatar_thumb_url:
                  type: string
                id:
                  type: integer
                name:
                  type: string
                os:
                  type: string
              type: object
            type: array
          status:
            oneOf:
              - type: boolean
              - type: integer
        title: Endgame Id Machine Response
        type: object
      EndgameIdResponse:
        description: Schema definition for Endgame Id Response
        properties:
          data:
            properties:
              avatar_url:
                type: string
              completion_icon:
                type: string
              completion_text:
                type: string
              cover_image_url:
                type: string
              creators:
                items:
                  properties:
                    avatar_thumb:
                      type: string
                    id:
                      type: integer
                    name:
                      type: string
                  type: object
                type: array
              description:
                type: string
              endgame_reset_votes:
                type: integer
              entry_points:
                items:
                  type: string
                type: array
              has_user_finished:
                type: boolean
              id:
                type: integer
              is_deployment_ready:
                type: boolean
              most_recent_reset:
                nullable: true
                type: string
              name:
                type: string
              players_completed:
                type: integer
              points:
                type: string
              retired:
                oneOf:
                  - type: boolean
                  - type: integer
              user_availability:
                properties:
                  available:
                    type: boolean
                  code:
                    type: number
                  message:
                    nullable: true
                    type: string
                type: object
              video_url:
                nullable: true
                type: string
              vip:
                oneOf:
                  - type: boolean
                  - type: integer
            type: object
          status:
            oneOf:
              - type: boolean
              - type: integer
        title: Endgame Id Resposne
        type: object
      EndgameWriteupResponse:
        properties:
          data:
            properties:
              official:
                properties:
                  filename:
                    type: string
                  liked_percentage:
                    type: number
                  ratings_count:
                    type: number
                  sha256:
                    type: string
                  threshold_for_display_reached:
                    type: boolean
                  url:
                    type: string
                  user_liked:
                    type: object
                type: object
              user_submitted:
                items:
                  type: object
                type: array
              writeups:
                items:
                  type: object
                type: array
            type: object
          status:
            type: boolean
        type: object
      Endgames:
        description: Schema definition for Endgames
        properties:
          avatar_url:
            example: https://labs.hackthebox.com/storage/endgames/c4ca4238a0b923820dcc509a6f75849b.png
            format: uri
            type: string
          cover_image_url:
            example: https://labs.hackthebox.com/storage/endgames/c4ca4238a0b923820dcc509a6f75849b_cover.png
            format: uri
            type: string
          creators:
            items:
              $ref: '#/components/schemas/Creator'
            type: array
          endgame_flags_count:
            example: 5
            type: integer
          endgame_machines_count:
            example: 2
            type: integer
          id:
            example: 1
            type: integer
          name:
            example: P.O.O.
            type: string
          new:
            example: false
            type: boolean
          retired:
            example: true
            type: boolean
          user_availability:
            $ref: '#/components/schemas/UserAvailability'
          vip:
            example: true
            type: boolean
        title: Endgames
        type: object
      EndgamesResponse:
        description: Schema definition for Endgames Response
        properties:
          data:
            items:
              $ref: '#/components/schemas/Endgames'
            type: array
          status:
            example: true
            type: boolean
        title: Endgames Response
        type: object
      FaqItem:
        description: Schema definition for Faq Item
        properties:
          answer:
            example: Individual Pro Labs subscriptions do not come with a write-up for users. Only our Enterprise-level Pro Labs subscriptions provide a write-up to the lab masters for documentation, training, and research purposes.
            type: string
          generic:
            example: true
            type: boolean
          question:
            example: Do Pro Lab subscriptions provide a write-up?
            type: string
        title: FAQ Item
        type: object
      FeedbackForChart:
        description: Schema definition for Feedback For Chart
        properties:
          counterBitHard:
            example: 300
            type: integer
          counterBrainFuck:
            example: 18
            type: integer
          counterCake:
            example: 55
            type: integer
          counterEasy:
            example: 256
            type: integer
          counterExHard:
            example: 21
            type: integer
          counterHard:
            example: 175
            type: integer
          counterMedium:
            example: 546
            type: integer
          counterTooEasy:
            example: 416
            type: integer
          counterTooHard:
            example: 34
            type: integer
          counterVeryEasy:
            example: 56
            type: integer
        title: Feedback For Chart
        type: object
      Flag:
        description: Schema definition for Flag
        properties:
          id:
            example: 1
            type: integer
          owned:
            example: false
            type: boolean
          points:
            example: 5
            type: integer
          title:
            example: Connect
            type: string
        title: Flag
        type: object
      Fortress:
        description: Schema definition for Fortress
        properties:
          cover_image_url:
            example: https://labs.hackthebox.com/storage/fortresses/c4ca4238a0b923820dcc509a6f75849b_cover_small.png
            format: uri
            type: string
          id:
            example: 1
            type: integer
          image:
            example: https://labs.hackthebox.com/storage/fortresses/c4ca4238a0b923820dcc509a6f75849b_logo.svg
            format: uri
            type: string
          name:
            example: Jet
            type: string
          new:
            example: false
            type: boolean
          number_of_flags:
            example: 11
            type: integer
        title: Fortress
        type: object
      FortressData:
        description: Schema definition for Fortress Data
        properties:
          company:
            $ref: '#/components/schemas/Company'
          completion_message:
            example: null
            nullable: true
            type: string
          cover_image_url:
            example: https://labs.hackthebox.com/storage/fortresses/c4ca4238a0b923820dcc509a6f75849b_cover_full.png
            type: string
          description:
            example: Lift off with this introductory fortress from Jet! Featuring interesting web vectors and challenges, this fortress is perfect for those getting started.
            type: string
          flags:
            items:
              $ref: '#/components/schemas/Flag'
            type: array
          has_completion_message:
            example: false
            type: boolean
          id:
            example: 1
            type: integer
          image:
            example: https://labs.hackthebox.com/storage/fortresses/c4ca4238a0b923820dcc509a6f75849b_logo.svg
            type: string
          ip:
            example: 10.13.37.10
            format: ipv4
            type: string
          name:
            example: Jet
            type: string
          players_completed:
            example: 2504
            type: integer
          points:
            example: '100'
            type: string
          progress_percent:
            example: 0
            type: number
          reset_votes:
            example: 0
            type: integer
          user_availability:
            $ref: '#/components/schemas/UserAvailability'
        title: Fortress Data
        type: object
      FortressFlagsResponse:
        description: Schema definition for Fortress Flags Response
        properties:
          data:
            items:
              properties:
                id:
                  type: integer
                owned:
                  type: boolean
                points:
                  type: integer
                title:
                  type: string
              type: object
            type: array
          status:
            type: boolean
        title: Fortress Flags Response
        type: object
      FortressIdResponse:
        description: Schema definition for Fortress Id Response
        properties:
          data:
            $ref: '#/components/schemas/FortressData'
          status:
            example: true
            type: boolean
        title: Fortress Id Response
        type: object
      FortressesResponse:
        description: Schema definition for Fortresses Response
        properties:
          data:
            additionalProperties:
              $ref: '#/components/schemas/Fortress'
            type: object
          status:
            example: true
            type: boolean
        title: Fortresses Response
        type: object
      HomeBannerResponse:
        description: Schema definition for Home Banner Response
        properties:
          data:
            items:
              properties:
                image:
                  type: string
                link:
                  type: string
                new_window:
                  type: boolean
              type: object
            type: array
        title: Home Banner Response
        type: object
      HomeBattlegroundCard:
        description: Schema definition for Home Battleground Card
        items:
          nullable: true
          properties:
            name:
              type: string
            type:
              type: string
            url:
              type: string
          type: object
        title: Home Battleground Card
        type: array
      HomeProgressMachineCard:
        description: Schema definition for Home Machine Card
        items:
          nullable: true
          properties:
            avatar:
              type: string
            difficulty:
              type: string
            id:
              type: number
            name:
              type: string
            os:
              type: string
            points:
              nullable: true
              type: number
            root_flag:
              type: integer
            url:
              type: string
            user_flag:
              type: integer
          type: object
        title: Home Machine Card
        type: array
      HomeProgressProlabCard:
        description: Schema definition for Home Prolab Card
        items:
          nullable: true
          properties:
            avatar:
              nullable: true
              type: string
            difficulty:
              type: string
            id:
              type: number
            identifier:
              type: string
            name:
              type: string
            percentage:
              example: 54.55
              format: float
              type: number
            points:
              type: string
          type: object
        title: Home Prolab Card
        type: array
      HomeProgressSpsCard:
        description: Schema definition for Home Sps Card
        items:
          nullable: true
          properties:
            avatar:
              type: string
            completion_percentage:
              type: integer
            free_machine_completion_percentage:
              type: integer
            id:
              type: integer
            name:
              type: string
          type: object
        title: Home SPS Card
        type: array
      HomeProgressTracksCard:
        description: Schema definition for Home Tracks Card
        items:
          nullable: true
          properties:
            avatar:
              type: string
            difficulty:
              type: string
            id:
              type: integer
            name:
              type: string
            percentage:
              example: 54.55
              format: float
              type: number
            points:
              type: integer
            url:
              type: string
          type: object
        title: Home Tracks Card
        type: array
      HomeRecommendedChallengeCard:
        description: Schema definition for Home Challenge Card
        items:
          nullable: true
          properties:
            avatar:
              type: string
            categoryID:
              type: integer
            difficulty:
              type: string
            id:
              type: number
            name:
              type: string
            points:
              nullable: true
              type: object
            type:
              type: string
            url:
              type: string
            urlName:
              type: string
          type: object
        title: Home Challenge Card
        type: array
      HomeRecommendedMachineCard:
        description: Schema definition for Home Machine Card
        items:
          nullable: true
          properties:
            avatar:
              type: string
            difficulty:
              type: string
            id:
              type: number
            name:
              type: string
            os:
              type: string
            points:
              nullable: true
              type: number
            type:
              type: string
            url:
              type: string
          type: object
        title: Home Machine Card
        type: array
      HomeRecommendedProlabCard:
        description: Schema definition for Home Prolab Card
        items:
          nullable: true
          properties:
            avatar:
              nullable: true
              type: object
            difficulty:
              type: string
            id:
              type: number
            identifier:
              type: string
            name:
              type: string
            points:
              type: integer
            type:
              type: string
            url:
              type: string
          type: object
        title: Home Prolab Card
        type: array
      HomeRecommendedRepsonse:
        description: Schema definition for Home Recommended Repsonse
        properties:
          data:
            properties:
              battlegrounds:
                $ref: '#/components/schemas/HomeBattlegroundCard'
              challenges:
                $ref: '#/components/schemas/HomeRecommendedChallengeCard'
              endgames:
                items:
                  type: object
                type: array
              machines:
                $ref: '#/components/schemas/HomeRecommendedMachineCard'
              prolabs:
                $ref: '#/components/schemas/HomeRecommendedProlabCard'
              sherlocks:
                $ref: '#/components/schemas/HomeRecommendedSherlocksCard'
              sps:
                $ref: '#/components/schemas/HomeRecommendedSpsCard'
              tracks:
                $ref: '#/components/schemas/HomeRecommendedTracksCard'
            type: object
        title: Home Recommended Repsonse
        type: object
      HomeRecommendedSherlocksCard:
        description: Schema definition for Home Tracks Card
        items:
          nullable: true
          properties:
            avatar:
              type: string
            categoryID:
              type: integer
            difficulty:
              type: string
            id:
              type: integer
            name:
              type: string
            type:
              type: string
            url:
              type: string
            urlName:
              type: string
          type: object
        title: Home Tracks Card
        type: array
      HomeRecommendedSpsCard:
        description: Schema definition for Home Sps Card
        items:
          nullable: true
          properties:
            avatar:
              type: string
            completion_percentage:
              type: integer
            free_machine_completion_percentage:
              type: integer
            id:
              type: integer
            name:
              type: string
          type: object
        title: Home SPS Card
        type: array
      HomeRecommendedTracksCard:
        description: Schema definition for Home Tracks Card
        items:
          nullable: true
          properties:
            avatar:
              type: string
            difficulty:
              type: string
            id:
              type: integer
            name:
              type: string
            points:
              type: integer
            type:
              type: string
            url:
              type: string
          type: object
        title: Home Tracks Card
        type: array
      HomeTodoChallengeCard:
        description: Schema definition for Home Challenge Card
        items:
          nullable: true
          properties:
            avatar:
              type: string
            challenge_category_id:
              type: integer
            difficulty:
              type: string
            id:
              type: number
            name:
              type: string
            points:
              nullable: true
              type: string
            url:
              type: string
            url_name:
              type: string
          type: object
        title: Home Challenge Card
        type: array
      HomeTodoMachineCard:
        description: Schema definition for Home Machine Card
        items:
          nullable: true
          properties:
            avatar:
              type: string
            difficulty:
              type: string
            id:
              type: number
            name:
              type: string
            os:
              type: string
            points:
              nullable: true
              type: number
            root_flag:
              type: boolean
            root_flag_only:
              type: boolean
            url:
              type: string
            user_flag:
              type: boolean
          type: object
        title: Home Machine Card
        type: array
      HomeTodoProlabCard:
        description: Schema definition for Home Prolab Card
        items:
          nullable: true
          properties:
            avatar:
              nullable: true
              type: object
            difficulty:
              type: string
            id:
              type: number
            identifier:
              type: string
            name:
              type: string
            points:
              type: string
            progress:
              type: number
            url:
              type: string
          type: object
        title: Home Prolab Card
        type: array
      HomeUserProgressResponse:
        description: Schema definition for Home User Progress Response
        properties:
          data:
            properties:
              endgames:
                items:
                  type: object
                type: array
              fortresses:
                additionalProperties:
                  properties:
                    avatar:
                      example: /storage/fortresses/c4ca4238a0b923820dcc509a6f75849b_logo.svg
                      type: string
                    id:
                      example: 1
                      type: integer
                    name:
                      example: Jet
                      type: string
                    percentage:
                      example: 54.55
                      format: float
                      type: number
                    points:
                      example: 100
                      type: integer
                    url:
                      example: /fortresses/1
                      type: string
                  type: object
                type: object
              machines:
                $ref: '#/components/schemas/HomeProgressMachineCard'
              prolabs:
                $ref: '#/components/schemas/HomeProgressProlabCard'
              sps:
                $ref: '#/components/schemas/HomeProgressSpsCard'
              tracks:
                $ref: '#/components/schemas/HomeProgressTracksCard'
            type: object
        title: Home User Progress Response
        type: object
      HomeUserTodoRepsonse:
        description: Schema definition for Home User Todo Repsonse
        properties:
          data:
            properties:
              challenges:
                $ref: '#/components/schemas/HomeTodoChallengeCard'
              machines:
                $ref: '#/components/schemas/HomeTodoMachineCard'
              prolabs:
                $ref: '#/components/schemas/HomeTodoProlabCard'
              tracks:
                $ref: '#/components/schemas/HomeRecommendedTracksCard'
            type: object
        title: Home User Todo Repsonse
        type: object
      LabCategory:
        description: Schema definition for Lab Category
        properties:
          code:
            example: aufree
            type: string
          location:
            example: AU
            type: string
          name:
            example: AU - Free Lab
            type: string
        title: Lab Category
        type: object
      LabListResponse:
        description: Schema definition for Lab List Response
        properties:
          disabled:
            example: false
            type: boolean
          lab_categories:
            items:
              $ref: '#/components/schemas/LabCategory'
            type: array
          lab_category_code:
            example: usdedivip
            type: string
          release_arena_labs:
            items:
              $ref: '#/components/schemas/ReleaseArenaLab'
            type: array
          server_id:
            example: 289
            type: integer
          servers:
            items:
              $ref: '#/components/schemas/LabServer'
            type: array
        title: Lab List Response
        type: object
      LabMaster:
        description: Schema definition for Lab Master
        properties:
          avatar_thumb:
            example: /storage/avatars/2b44f5ca5458931c49e1fa57da6705c1_thumb.png
            type: string
          id:
            example: 11649
            type: integer
          name:
            example: RastaMouse
            type: string
        title: Lab Master
        type: object
      LabServer:
        description: Schema definition for Lab Server
        properties:
          current_clients:
            example: 85
            type: integer
          friendly_name:
            example: US VIP+ 1
            type: string
          id:
            example: 289
            type: integer
        title: Lab Server
        type: object
      Label:
        description: Schema definition for Label
        properties:
          color:
            type: string
          name:
            type: string
        title: Label
        type: object
      Links:
        description: Schema definition for Links
        properties:
          first:
            example: https://labs.hackthebox.com/api/v4/prolab/1/reviews?page=1
            type: string
          last:
            example: https://labs.hackthebox.com/api/v4/prolab/1/reviews?page=11
            type: string
          next:
            example: https://labs.hackthebox.com/api/v4/prolab/1/reviews?page=2
            nullable: true
            type: string
          prev:
            example: null
            nullable: true
            type: string
        title: Links
        type: object
      LobbyMessagesResponse:
        description: Schema definition for Lobby Messages Response
        items:
          properties:
            avatar:
              type: string
            created_at:
              format: date-time
              type: string
            id:
              type: integer
            isBGModerator:
              type: boolean
            name:
              type: string
            sender_id:
              type: integer
            staff:
              type: boolean
            text:
              type: string
          type: object
        title: Lobby Messages Resposne
        type: array
      Machine:
        description: Schema definition for Machine
        properties:
          avatar_thumb_url:
            example: https://labs.hackthebox.com/storage/avatars/f85bcb72ecffef8a5b2afd2fbc3ac153_thumb.png
            type: string
          id:
            example: 1
            type: integer
          name:
            example: RASTA-DC01
            type: string
          os:
            example: Windows
            type: string
        title: Machine
        type: object
      MachineActivityIdResponse:
        description: Schema definition for Machine Activity Id Response
        properties:
          info:
            properties:
              activity:
                items:
                  properties:
                    blood_type:
                      nullable: true
                      type: string
                    created_at:
                      type: string
                    date:
                      type: string
                    date_diff:
                      type: string
                    type:
                      type: string
                    user_avatar:
                      type: string
                    user_id:
                      type: integer
                    user_name:
                      type: string
                  type: object
                type: array
              server:
                type: string
            type: object
        title: Machine Activity Id Response
        type: object
      MachineAttackDetails:
        description: Schema definition for Machine Attack Details
        properties:
          machine_attack_paths:
            properties:
              Binary Analysis:
                $ref: '#/components/schemas/TeamsAttackPathCard'
              Binary Exploitation:
                $ref: '#/components/schemas/TeamsAttackPathCard'
              Configuration Analysis:
                $ref: '#/components/schemas/TeamsAttackPathCard'
              Fuzzing:
                $ref: '#/components/schemas/TeamsAttackPathCard'
              Impersonation:
                $ref: '#/components/schemas/TeamsAttackPathCard'
              Packet Capture Analysis:
                $ref: '#/components/schemas/TeamsAttackPathCard'
              Pivoting:
                $ref: '#/components/schemas/TeamsAttackPathCard'
              Reconnaissance:
                $ref: '#/components/schemas/TeamsAttackPathCard'
              User Enumeration:
                $ref: '#/components/schemas/TeamsAttackPathCard'
              Web Site Structure Discovery:
                $ref: '#/components/schemas/TeamsAttackPathCard'
            type: object
          machine_owns:
            $ref: '#/components/schemas/MachineOwnsCard'
        title: Machine Attack Details
        type: object
      MachineCard1:
        description: Schema definition for Machine Card
        properties:
          avatar:
            example: /storage/avatars/a2c2bd7b4e98ff8b782ed590896305a1.png
            type: string
          difficultyText:
            example: Medium
            type: string
          id:
            example: 601
            type: integer
          isTodo:
            type: boolean
          maker:
            $ref: '#/components/schemas/MakerRecommended'
          maker2:
            $ref: '#/components/schemas/MakerRecommended'
          name:
            example: SolarLab
            type: string
          os:
            example: Windows
            type: string
          points:
            example: 30
            type: integer
          release:
            example: '2024-05-11T16:00:00.000000Z'
            format: date-time
            type: string
          retired:
            example: 0
            type: integer
          typeCard:
            example: seasonal
            type: string
        title: Machine Card
        type: object
      MachineCard2:
        description: Schema definition for Machine Card
        properties:
          authUserInRootOwns:
            example: false
            type: boolean
          authUserInUserOwns:
            example: false
            type: boolean
          avatar:
            example: /storage/avatars/a2c2bd7b4e98ff8b782ed590896305a1.png
            type: string
          difficultyText:
            example: Medium
            type: string
          feedbackForChart:
            nullable: true
            properties:
              counterBitHard:
                example: 894
                type: integer
              counterBrainFuck:
                example: 255
                type: integer
              counterCake:
                example: 150
                type: integer
              counterEasy:
                example: 556
                type: integer
              counterExHard:
                example: 298
                type: integer
              counterHard:
                example: 1137
                type: integer
              counterMedium:
                example: 2367
                type: integer
              counterTooEasy:
                example: 813
                type: integer
              counterTooHard:
                example: 770
                type: integer
              counterVeryEasy:
                example: 169
                type: integer
            type: object
          id:
            example: 601
            type: integer
          name:
            example: SolarLab
            type: string
          os:
            example: Windows
            type: string
          points:
            example: 30
            type: integer
          release:
            example: '2024-05-11T16:00:00.000000Z'
            format: date-time
            type: string
          retired:
            example: 0
            type: integer
          retired_date:
            example: '2020-04-04T15:01:00.000000Z'
            format: date-time
            nullable: true
            type: string
          root_owns_count:
            example: 3347
            type: integer
          stars:
            example: 4.5
            format: float
            type: number
          typeCard:
            example: seasonal
            type: string
          user_owns_count:
            example: 4128
            type: integer
        title: Machine Card
        type: object
      MachineChangelogIdResponse:
        description: Schema definition for Machine Changelog Id Response
        properties:
          info:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                user_id:
                  type: integer
                machine_id:
                  type: integer
                type:
                  type: string
                title:
                  type: string
                created_at:
                  type: string
                description:
                  type: string
                released:
                  type: integer
                updated_at:
                  type: string
        title: Machine Changelog Id Response
        type: object
      MachineData:
        description: Schema definition for Machine Data
        properties:
          active:
            nullable: true
            type: boolean
          authUserHasReviewed:
            type: boolean
          authUserInRootOwns:
            type: boolean
          authUserInUserOwns:
            type: boolean
          avatar:
            type: string
          difficulty:
            type: integer
          difficultyText:
            type: string
          easy_month:
            type: integer
          feedbackForChart:
            properties:
              counterBitHard:
                type: integer
              counterBrainFuck:
                type: integer
              counterCake:
                type: integer
              counterEasy:
                type: integer
              counterExHard:
                type: integer
              counterHard:
                type: integer
              counterMedium:
                type: integer
              counterTooEasy:
                type: integer
              counterTooHard:
                type: integer
              counterVeryEasy:
                type: integer
            type: object
          free:
            type: boolean
          id:
            type: integer
          ip:
            format: ipv4
            nullable: true
            type: string
          isTodo:
            oneOf:
              - type: boolean
              - format: int32
                type: integer
          is_competitive:
            type: boolean
          labels:
            items:
              $ref: '#/components/schemas/Label'
            type: array
          name:
            type: string
          os:
            type: string
          playInfo:
            properties:
              expires_at:
                nullable: true
                type: string
              isActive:
                nullable: true
                type: boolean
            type: object
          points:
            type: integer
          poweroff:
            type: integer
          recommended:
            type: integer
          release:
            format: date-time
            type: string
          root_owns_count:
            type: integer
          sp_flag:
            type: integer
          star:
            type: number
          static_points:
            type: integer
          user_owns_count:
            type: integer
        title: Machine Data
        type: object
      MachineGraphActivityIdResponse:
        description: Schema definition for Machine Graph Activity Id Response
        properties:
          info:
            properties:
              periods:
                items:
                  items:
                    type: string
                  type: array
                type: array
              resets:
                items:
                  type: integer
                type: array
              system_owns:
                items:
                  type: integer
                type: array
              user_owns:
                items:
                  type: integer
                type: array
            type: object
        title: Machine Graph Activity Id Response
        type: object
      MachineGraphMatrixIdResponse:
        description: Schema definition for Machine Graph Matrix Id Response
        properties:
          info:
            properties:
              aggregate:
                properties:
                  ctf:
                    type: number
                  custom:
                    type: number
                  cve:
                    type: number
                  enum:
                    type: number
                  real:
                    type: number
                type: object
              maker:
                properties:
                  ctf:
                    type: integer
                  custom:
                    type: integer
                  cve:
                    type: integer
                  enum:
                    type: integer
                  real:
                    type: integer
                type: object
              user:
                properties:
                  ctf:
                    type: integer
                  custom:
                    type: integer
                  cve:
                    type: integer
                  enum:
                    type: integer
                  real:
                    type: integer
                type: object
            type: object
        title: Machine Graph Matrix Id Response
        type: object
      MachineGraphOwnsDifficultyIdResponse:
        description: Schema definition for Machine Graph Owns Difficulty Id Response
        properties:
          info:
            properties:
              '1':
                properties:
                  root:
                    type: integer
                  user:
                    type: integer
                type: object
              '2':
                properties:
                  root:
                    type: integer
                  user:
                    type: integer
                type: object
              '3':
                properties:
                  root:
                    type: integer
                  user:
                    type: integer
                type: object
              '4':
                properties:
                  root:
                    type: integer
                  user:
                    type: integer
                type: object
              '5':
                properties:
                  root:
                    type: integer
                  user:
                    type: integer
                type: object
              '6':
                properties:
                  root:
                    type: integer
                  user:
                    type: integer
                type: object
              '7':
                properties:
                  root:
                    type: integer
                  user:
                    type: integer
                type: object
              '8':
                properties:
                  root:
                    type: integer
                  user:
                    type: integer
                type: object
              '9':
                properties:
                  root:
                    type: integer
                  user:
                    type: integer
                type: object
              '10':
                properties:
                  root:
                    type: integer
                  user:
                    type: integer
                type: object
            type: object
        title: Machine Graph Owns Difficulty Id Response
        type: object
      MachineOwnsCard:
        description: Schema definition for Machine Owns Card
        properties:
          solved:
            example: 100
            type: integer
          total:
            example: 204
            type: integer
        title: Machine Owns Card
        type: object
      MachineOwnsTopIdResponse:
        description: Schema definition for Machine Owns Top Id Response
        properties:
          info:
            items:
              properties:
                avatar:
                  type: string
                id:
                  type: integer
                is_root_blood:
                  oneOf:
                    - type: boolean
                    - type: integer
                is_user_blood:
                  oneOf:
                    - type: boolean
                    - type: integer
                name:
                  type: string
                own_date:
                  type: string
                postition:
                  type: integer
                rank_id:
                  type: integer
                rank_text:
                  type: string
                root_own_time:
                  type: string
                user_own_date:
                  type: string
                user_own_time:
                  type: string
              type: object
            type: array
        title: Machine Owns Top Id Response
        type: object
      MachineProfileInfo:
        description: Schema definition for Machine Profile Info
        properties:
          synopsis:
            type: string
            nullable: true
          academy_modules:
            items:
              $ref: '#/components/schemas/AcademyModule'
            nullable: true
            type: array
          active:
            type: boolean
          authUserFirstRootTime:
            example: 18H 6M 57S
            nullable: true
            type: string
          authUserFirstUserTime:
            example: 3H 47M 43S
            type: string
            nullable: true
          authUserHasReviewed:
            example: false
            type: boolean
          authUserHasSubmittedMatrix:
            example: false
            type: boolean
          authUserInRootOwns:
            example: true
            type: boolean
          authUserInUserOwns:
            example: true
            type: boolean
          avatar:
            example: /storage/avatars/a2c2bd7b4e98ff8b782ed590896305a1.png
            type: string
          can_access_walkthrough:
            example: false
            type: boolean
          difficultyText:
            example: Medium
            type: string
          feedbackForChart:
            $ref: '#/components/schemas/FeedbackForChart'
          free:
            example: true
            type: boolean
          has_changelog:
            example: false
            type: boolean
          id:
            example: 601
            type: integer
          info_status:
            example: null
            nullable: true
            type: object
          ip:
            example: 10.10.10.10
            format: ipv4
            nullable: true
            type: string
          isGuidedEnabled:
            example: false
            type: boolean
          isTodo:
            type: boolean
          machine_mode:
            example: seasonal
            nullable: true
            type: string
          maker:
            $ref: '#/components/schemas/Maker'
          maker2:
            $ref: '#/components/schemas/Maker'
          name:
            example: SolarLab
            type: string
          os:
            example: Windows
            type: string
          ownRank:
            example: 292
            type: integer
            nullable: true
          playInfo:
            $ref: '#/components/schemas/PlayInfo'
          points:
            example: 30
            type: integer
          recommended:
            type: boolean
          release:
            example: '2024-05-11T19:00:00.000000Z'
            format: date-time
            type: string
          retired:
            type: boolean
          reviews_count:
            example: 71
            type: integer
          rootBlood:
            $ref: '#/components/schemas/BloodInfo'
          root_owns_count:
            example: 1355
            type: integer
          season_id:
            example: 5
            nullable: true
            type: integer
          show_go_vip:
            example: false
            type: boolean
          show_go_vip_server:
            example: false
            type: boolean
          sp_flag:
            example: 0
            type: integer
          stars:
            example: 4.6
            format: float
            type: number
          start_mode:
            example: spawn
            type: string
          static_points:
            example: 30
            type: integer
          userBlood:
            $ref: '#/components/schemas/BloodInfo'
          user_can_review:
            example: false
            type: boolean
          user_owns_count:
            example: 1573
            type: integer
        title: Machine Profile Info
        type: object
      MachineProfileResponse:
        description: Schema definition for Machine Profile Response
        properties:
          info:
            $ref: '#/components/schemas/MachineProfileInfo'
        title: Machine Profile Response
        type: object
      MachineRecommendedRetiredResponse:
        description: Schema definition for Machine Recommended Retired Response
        properties:
          card1:
            properties:
              avatar:
                type: string
              difficultyText:
                type: string
              retired:
                type: integer
              feedbackForChart:
                properties:
                  counterBitHard:
                    type: integer
                  counterBrainFuck:
                    type: integer
                  counterCake:
                    type: integer
                  counterEasy:
                    type: integer
                  counterExHard:
                    type: integer
                  counterHard:
                    type: integer
                  counterMedium:
                    type: integer
                  counterTooEasy:
                    type: integer
                  counterTooHard:
                    type: integer
                  counterVeryEasy:
                    type: integer
                type: object
              id:
                type: integer
              name:
                type: string
              os:
                type: string
              release:
                type: string
              retired_date:
                type: string
            type: object
          card2:
            properties:
              avatar:
                type: string
              retired:
                type: integer
              difficultyText:
                type: string
              feedbackForChart:
                properties:
                  counterBitHard:
                    type: integer
                  counterBrainFuck:
                    type: integer
                  counterCake:
                    type: integer
                  counterEasy:
                    type: integer
                  counterExHard:
                    type: integer
                  counterHard:
                    type: integer
                  counterMedium:
                    type: integer
                  counterTooEasy:
                    type: integer
                  counterTooHard:
                    type: integer
                  counterVeryEasy:
                    type: integer
                type: object
              id:
                type: integer
              name:
                type: string
              os:
                type: string
              release:
                type: string
              retired_date:
                type: string
            type: object
        title: Machine Recommended Retired Response
        type: object
      MachineReview:
        description: Schema definition for Machine Review
        properties:
          id:
            example: 444
            type: integer
          reviewed:
            example: true
            type: boolean
        title: Machine Review
        type: object
      MachineReviewRequest:
        description: Schema definition for Machine Review Request
        properties:
          headline:
            example: Very funny machine
            type: string
          id:
            example: 444
            type: integer
          review:
            example: It is not so immediate but it is very funny!
            type: string
          stars:
            example: 5
            format: float
            type: number
        required:
          - id
          - stars
          - headline
          - review
        title: Machine Review Request
        type: object
      MachineReviewResponse:
        description: Schema definition for Machine Review Response
        properties:
          message:
            items:
              $ref: '#/components/schemas/MachineReview'
            type: array
        title: Machine Review Response
        type: object
      MachineReviewsUserIdResponse:
        description: Schema definition for Machine Reviews User Id Response
        properties:
          message:
            type: string
            nullable: true
        type: object
        title: Machine Review User Id Response
      MachineTagIdResponse:
        description: Schema definition for Machine Tag Id Response
        properties:
          info:
            items:
              properties:
                category:
                  example: Category
                  type: string
                id:
                  example: 694
                  type: integer
                name:
                  example: Vulnerability Assessment
                  type: string
              type: object
            type: array
        title: Machine Tag Id Response
        type: object
      MachineTagsListResponse:
        description: Schema definition for Machine Tags List Response
        properties:
          info:
            items:
              $ref: '#/components/schemas/TagCatagory'
            type: array
        title: Machine Tag List Response
        type: object
      BaseTask:
        type: object
        properties:
          id:
            type: integer
          title:
            type: string
          description:
            type: string
          hint:
            type: string
            nullable: true
          type:
            type: object
            properties:
              id:
                type: integer
              text:
                type: string
          task_type:
            type: object
            properties:
              id:
                type: integer
              text:
                type: string
          prerequisite_id:
            type: integer
            nullable: true
          completed:
            type: boolean
          masked_flag:
            type: string
          options:
            type: array
            items:
              type: object
      FlagRatingTask:
        allOf:
          - $ref: '#/components/schemas/BaseTask'
          - type: object
            properties:
              flag_rating:
                type: integer
                minimum: 1
                maximum: 5
            required:
              - flag_rating
      MachineTasksResponse:
        type: object
        properties:
          data:
            type: array
            items:
              oneOf:
                - $ref: '#/components/schemas/BaseTask'
                - $ref: '#/components/schemas/FlagRatingTask'
      MachineUnreleasedResponse:
        description: Schema definition for Machine Unreleased Response
        properties:
          data:
            items:
              properties:
                avatar:
                  type: string
                coCreators:
                  items:
                    properties:
                      avatar:
                        type: string
                      id:
                        type: integer
                      name:
                        type: string
                    type: object
                  type: array
                  nullable: true
                difficulty:
                  type: integer
                difficulty_text:
                  type: string
                firstCreator:
                  items:
                    properties:
                      avatar:
                        type: string
                      id:
                        type: integer
                      name:
                        type: string
                    type: object
                  type: array
                id:
                  type: integer
                name:
                  type: string
                os:
                  type: string
                release:
                  type: string
                retiring:
                  properties:
                    avatar:
                      type: string
                    difficulty_text:
                      type: string
                    id:
                      type: integer
                    name:
                      type: string
                    os:
                      type: string
                  type: object
              type: object
            type: array
          links:
            $ref: '#/components/schemas/Links'
          meta:
            $ref: '#/components/schemas/Meta'
        title: Machine Unreleased Response
        type: object
      MachineWalkthroughIdResponse:
        description: Schema definition for Machine Walkthrough Id Response
        properties:
          message:
            properties:
              official:
                properties:
                  filename:
                    type: string
                  sha256:
                    type: string
                  rating:
                    type: number
                  likedByUser:
                    type: boolean
                    nullable: true
                  dislikedByUser:
                    type: number
                    nullable: true
                  total_ratings:
                    type: integer
                  threshold_for_display_reached:
                    type: integer
                type: object
              under_review:
                type: string
                nullable: true
              video:
                properties:
                  creator_avatar:
                    type: string
                  creator_id:
                    type: integer
                  creator_name:
                    type: string
                  youtube_id:
                    type: string
                type: object
                nullable: true
              writeups:
                items:
                  properties:
                    created_at:
                      type: string
                    disliked_by_user:
                      type: string
                      nullable: true
                    id:
                      type: integer
                    language_code:
                      type: string
                      nullable: true
                    language_name:
                      type: string
                      nullable: true
                    liked_by_user:
                      type: string
                      nullable: true
                    rating:
                      type: integer
                    total_ratings:
                      type: integer
                    url:
                      type: string
                    user_avatar:
                      type: string
                    user_id:
                      type: integer
                    user_name:
                      type: string
                  type: object
                type: array
            type: object
        title: Machine Walkthrough Id Response
        type: object
      MachineWalkthroughRandomResponse:
        properties:
          message:
            properties:
              avatar:
                type: string
              id:
                type: number
              name:
                type: string
            type: object
        type: object
      MachineWalkthroughsLanguageListResponse:
        description: Schema definition for Machine Walkthroughs Language List Response
        properties:
          info:
            items:
              properties:
                full_name:
                  type: string
                id:
                  type: integer
                short_name:
                  type: string
              type: object
            type: array
        title: Machine Walkthroughs Language List Response
        type: object
      MachinesAdventureResponse:
        properties:
          data:
            items:
              properties:
                completed:
                  type: boolean
                description:
                  type: string
                  nullable: true
                flag_rating:
                  type: number
                  nullable: true
                hint:
                  type: string
                  nullable: true
                id:
                  type: integer
                  nullable: true
                masked_flag:
                  type: string
                title:
                  type: string
                type:
                  properties:
                    id:
                      type: number
                    text:
                      type: string
                  type: object
              type: object
            type: array
        type: object
      Maker:
        description: Schema definition for Maker
        nullable: true
        properties:
          avatar:
            nullable: true
            type: string
          id:
            nullable: true
            type: integer
          isRespected:
            nullable: true
            type: boolean
          name:
            nullable: true
            type: string
          profile_url:
            example: https://app.hackthebox.com/profile/389926
            type: string
        title: Maker
        type: object
      MakerRecommended:
        description: Schema definition for Maker
        nullable: true
        properties:
          avatar:
            nullable: true
            type: string
          id:
            nullable: true
            type: integer
          name:
            nullable: true
            type: string
        title: Maker
        type: object
      MatchPenaltyResponse:
        description: Schema definition for Match Penalty Response
        properties:
          penalty:
            nullable: true
            type: integer
        title: Match Penalty Response
        type: object
      Message:
        description: Schema definition for Message
        properties:
          message:
            description: Return message (variation 1)
            type: string
        title: Message
        type: object
      Messagesuccess:
        description: Schema definition for Message
        properties:
          message:
            description: Return message (variation 1)
            type: string
        title: Message
        type: object
      Meta:
        description: Schema definition for Meta
        properties:
          current_page:
            example: 1
            type: integer
          from:
            example: 1
            type: integer
          last_page:
            example: 11
            type: integer
          links:
            items:
              $ref: '#/components/schemas/PaginationLink'
            type: array
          path:
            example: https://labs.hackthebox.com/api/v4/prolab/1/reviews
            type: string
          per_page:
            example: 15
            type: integer
          to:
            example: 15
            type: integer
          total:
            example: 162
            type: integer
        title: Meta
        type: object
      MetaAlt:
        properties:
          currentPage:
            type: number
          pages:
            type: number
        type: object
      NavigationMainResponse:
        description: Schema definition for Navigation Main Response
        properties:
          data:
            properties:
              ranking:
                properties:
                  current_xp:
                    type: number
                  id:
                    type: integer
                  name:
                    type: string
                  next_rank_xp:
                    type: number
                type: object
              season_ranking:
                properties:
                  latest_season:
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                    type: object
                  league:
                    type: string
                  rank:
                    type: integer
                  rank_suffix:
                    type: string
                  upcoming_season:
                    properties:
                      date:
                        nullable: true
                        type: string
                      id:
                        nullable: true
                        type: string
                      name:
                        nullable: true
                        type: string
                    type: object
                type: object
              sso_linked:
                type: boolean
            type: object
        title: Navigation Main Response
        type: object
      NewRank:
        description: Schema definition for New Rank
        properties:
          id:
            example: 3
            type: integer
          text:
            example: null
            nullable: true
            type: string
        title: New Rank
        type: object
      NoticesResponse:
        description: Schema definition for Notices Response
        properties:
          data:
            items:
              properties:
                dismissible:
                  type: boolean
                id:
                  type: integer
                message:
                  type: string
                type:
                  type: string
                url:
                  type: string
                url_exact:
                  type: boolean
              type: object
            type: array
        title: Notices Response
        type: object
      OpenVpn:
        description: Schema definition for Open Vpn
        format: binary
        title: Open VPN
        type: string
      Options:
        additionalProperties:
          additionalProperties:
            $ref: '#/components/schemas/ServerGroup'
          type: object
        description: Schema definition for Options
        title: Options
        type: object
      OwnMachineErrorResponse:
        description: Schema definition for Own Machine Error Response
        properties:
          message:
            example: Incorrect flag!
            type: string
          status:
            example: 400
            type: integer
        title: Own Machine Error Response
        type: object
      OwnMachineRequest:
        description: Schema definition for Own Machine Request
        properties:
          difficultyText:
            example: 50
            type: integer
          flag:
            example: 0cc175b9c0f1b6a831c399e269772661
            type: string
          id:
            example: 597
            type: integer
        required:
          - id
          - flag
        title: Own Machine Request
        type: object
      OwnMachineResponse:
        description: Schema definition for Own Machine Response
        properties:
          message:
            example: machine owned successfully!
            type: string
          status:
            example: 200
            type: integer
        title: Own Machine Response
        type: object
      OwnStats:
        description: Schema definition for Own Stats
        properties:
          first_bloods:
            type: integer
          rank:
            type: integer
          system_owns:
            type: integer
          user_owns:
            type: integer
          weekly:
            type: object
          respects:
            type: integer
          challenge_owns:
            type: integer
        title: Own Stats
        type: object
      PaginatedMachineData:
        description: Schema definition for Paginated Machine Data
        properties:
          data:
            items:
              $ref: '#/components/schemas/MachineData'
            type: array
          links:
            $ref: '#/components/schemas/Links'
          meta:
            $ref: '#/components/schemas/Meta'
        title: Paginated Machine Data
        type: object
      PaginationLink:
        description: Schema definition for Pagination Link
        properties:
          active:
            example: true
            type: boolean
          label:
            example: '1'
            type: string
          url:
            example: https://labs.hackthebox.com/api/v4/prolab/1/reviews?page=1
            nullable: true
            type: string
        title: Pagination Link
        type: object
      PlayInfo:
        description: Schema definition for Play Info
        properties:
          active_player_count:
            example: 1
            type: integer
          expires_at:
            format: date-time
            nullable: true
            type: string
          isActive:
            nullable: true
            type: boolean
          isSpawned:
            nullable: true
            type: boolean
          isSpawning:
            nullable: true
            type: boolean
        title: Play Info
        type: object
      PlayerCountResponse:
        description: Schema definition for Player Count Response
        properties:
          player_count:
            type: integer
        title: Player Count Response
        type: object
      PlayerQueueCountResponse:
        description: Schema definition for Player Queue Count Response
        properties:
          Normal:
            properties:
              ad:
                properties:
                  1v1:
                    type: integer
                  2v2:
                    type: integer
                  4v4:
                    type: integer
                  total:
                    type: integer
                type: object
              koh:
                properties:
                  1v1:
                    type: integer
                  2v2:
                    type: integer
                  4v4:
                    type: integer
                  total:
                    type: integer
                type: object
            type: object
          Practice:
            properties:
              ad:
                properties:
                  1v1:
                    type: integer
                  2v2:
                    type: integer
                  4v4:
                    type: integer
                  total:
                    type: integer
                type: object
              koh:
                properties:
                  1v1:
                    type: integer
                  2v2:
                    type: integer
                  4v4:
                    type: integer
                  total:
                    type: integer
                type: object
            type: object
          Private:
            properties:
              ad:
                properties:
                  1v1:
                    type: integer
                  2v2:
                    type: integer
                  4v4:
                    type: integer
                  total:
                    type: integer
                type: object
              koh:
                properties:
                  1v1:
                    type: integer
                  2v2:
                    type: integer
                  4v4:
                    type: integer
                  total:
                    type: integer
                type: object
            type: object
        title: Player Queue Count Response
        type: object
      ProfileBadgesIdRepsonse:
        description: Schema definition for Profile Badges Id Repsonse
        properties:
          badges:
            items:
              properties:
                id:
                  type: number
                pivot:
                  properties:
                    created_at:
                      type: string
                  type: object
              type: object
            type: array
        title: Profile Badges Id Repsonse
        type: object
      ProfileChartMachineAttackCard:
        description: Schema definition for Profile Chart Machine Attack Card
        properties:
          avg_user_solved:
            example: 0.403
            type: number
          solved:
            type: integer
          total:
            type: integer
        title: Profile Chart Machine Attack Card
        type: object
      ProfileChartMachineAttackIdResponse:
        description: Schema definition for Profile Chart Machine Attack Id Response
        properties:
          profile:
            properties:
              machine_attack_paths:
                properties:
                  Active Directory:
                    $ref: '#/components/schemas/ProfileChartMachineAttackCard'
                  Arbitrary File Upload:
                    $ref: '#/components/schemas/ProfileChartMachineAttackCard'
                  Binary Exploit:
                    $ref: '#/components/schemas/ProfileChartMachineAttackCard'
                  File Misconfiguration:
                    $ref: '#/components/schemas/ProfileChartMachineAttackCard'
                  Injection:
                    $ref: '#/components/schemas/ProfileChartMachineAttackCard'
                  LFI:
                    $ref: '#/components/schemas/ProfileChartMachineAttackCard'
                  Password Reuse:
                    $ref: '#/components/schemas/ProfileChartMachineAttackCard'
                  Patch Management:
                    $ref: '#/components/schemas/ProfileChartMachineAttackCard'
                  SQLi:
                    $ref: '#/components/schemas/ProfileChartMachineAttackCard'
                  Web:
                    $ref: '#/components/schemas/ProfileChartMachineAttackCard'
                type: object
              machine_owns:
                $ref: '#/components/schemas/MachineOwnsCard'
            type: object
        title: Profile Chart Machine Attack Id Response
        type: object
      ProfileContentIdResponse:
        description: Schema definition for Profile Content Id Response
        properties:
          profile:
            properties:
              content:
                properties:
                  challenges:
                    items: {}
                    type: array
                  machines:
                    items:
                      properties:
                        difficulty:
                          type: string
                        id:
                          type: integer
                        machine_avatar:
                          type: string
                        name:
                          type: string
                        os:
                          type: string
                        rating:
                          type: string
                        system_owns:
                          type: integer
                        user_owns:
                          type: integer
                      type: object
                    type: array
                  writeups:
                    items: {}
                    type: array
                type: object
            type: object
        title: Profile Content Id Response
        type: object
      ProfileGraphPeriodIdResponse:
        description: Schema definition for Profile Graph Period Id Response
        properties:
          profile:
            properties:
              graphData:
                properties:
                  challenge_owns:
                    items:
                      type: integer
                    type: array
                  first_bloods:
                    items:
                      type: integer
                    type: array
                  respects:
                    items:
                      type: integer
                    type: array
                  system_owns:
                    items:
                      type: integer
                    type: array
                  user_owns:
                    items:
                      type: integer
                    type: array
                type: object
            type: object
        title: Profile Graph Period Id Response
        type: object
      ProfileIdRepsonse:
        description: Schema definition for Profile Id Repsonse
        properties:
          userStats:
            properties:
              avatar:
                type: string
              country_code:
                type: string
              country_name:
                type: string
              current_rank_progress:
                type: number
              description:
                type: string
              github:
                nullable: true
                type: string
              id:
                type: integer
              isVip:
                type: integer
              linkedin:
                nullable: true
                type: string
              name:
                type: string
              next_rank:
                type: string
              next_rank_points:
                type: number
              points:
                type: integer
              rank:
                type: string
              rank_id:
                type: integer
              rank_ownership:
                type: number
              rank_requirement:
                type: integer
              ranking:
                type: integer
              respects:
                type: integer
              system_bloods:
                type: integer
              system_owns:
                type: integer
              team:
                oneOf:
                  - nullable: true
                    properties:
                      avatar:
                        type: string
                      name:
                        type: string
                      ranking:
                        type: integer
                    type: object
              timezone:
                type: string
              twitter:
                nullable: true
                type: string
              university_name:
                nullable: true
                type: string
              user_bloods:
                type: integer
              user_owns:
                type: integer
            type: object
        title: Profile Id Repsonse
        type: object
      ProfileProgressChallengesIdRepsonse:
        description: Schema definition for Profile Progress Challenges Id Repsonse
        properties:
          profile:
            properties:
              challenge_categories:
                items:
                  properties:
                    avg_user_solved:
                      example: 0.403
                      type: number
                    completion_percentage:
                      type: integer
                    name:
                      type: string
                    owned_flags:
                      type: integer
                    total_flags:
                      type: integer
                  type: object
                type: array
              challenge_owns:
                properties:
                  solved:
                    type: integer
                  total:
                    type: integer
                type: object
            type: object
        title: Profile Progress Challenges Id Repsonse
        type: object
      ProfileProgressEndgameIdRepsonse:
        description: Schema definition for Profile Progress Endgame Id Repsonse
        properties:
          profile:
            properties:
              endgames:
                items:
                  properties:
                    completion_percentage:
                      type: integer
                    name:
                      type: string
                    owned_flags:
                      type: integer
                    total_flags:
                      type: integer
                  type: object
                type: array
            type: object
        title: Profile Progress Endgame Id Repsonse
        type: object
      ProfileProgressFortressIdRepsonse:
        description: Schema definition for Profile Progress Fortress Id Repsonse
        properties:
          profile:
            properties:
              fortresses:
                items:
                  properties:
                    avatar:
                      type: string
                    completion_percentage:
                      type: integer
                    name:
                      type: string
                    owned_flags:
                      type: integer
                    total_flags:
                      type: integer
                  type: object
                type: array
            type: object
        title: Profile Progress Fortress Id Repsonse
        type: object
      ProfileProgressProLabResponse:
        description: Schema definition for Profile Progress Prolab Response
        properties:
          profile:
            properties:
              prolabs:
                items:
                  properties:
                    average_ratings:
                      nullable: true
                      type: number
                    completion_percentage:
                      type: integer
                    name:
                      type: string
                    owned_flags:
                      type: integer
                    total_flags:
                      type: integer
                    total_machines:
                      type: integer
                  type: object
                type: array
            type: object
        title: Profile Progress ProLab Response
        type: object
      Prolab:
        description: Schema definition for Prolab
        properties:
          cover_image_url:
            nullable: true
            type: string
          cover_img_url:
            example: null
            nullable: true
            type: string
          designated_category:
            example: Red team_ Operator
            type: string
          id:
            example: 1
            type: integer
          identifier:
            type: string
          lab_servers_count:
            example: 6
            type: integer
          level:
            example: 1
            type: integer
          mini:
            type: boolean
          name:
            example: RastaLabs
            type: string
          new:
            example: false
            type: boolean
          ownership:
            example: 0
            type: number
          pro_flags_count:
            example: 22
            type: integer
          pro_machines_count:
            example: 15
            type: integer
          release_at:
            example: '2018-01-02T06:00:00.000000Z'
            format: date-time
            type: string
          skill_level:
            example: INTERMEDIATE
            type: string
          state:
            type: string
          team:
            example: red
            type: string
          user_eligible_for_certificate:
            example: false
            type: boolean
        title: Prolab
        type: object
      ProlabData:
        description: Schema definition for Prolab Data
        properties:
          active_users:
            example: 15
            type: integer
          cover_image_url:
            example: null
            nullable: true
            type: string
          description:
            example: <h4>RastaLabs</h4>...
            format: html
            type: string
          entry_points:
            items:
              example: 10.10.110.0/24
              type: string
            type: array
          id:
            example: 1
            type: integer
          identifier:
            type: string
          lab_masters:
            items:
              $ref: '#/components/schemas/LabMaster'
            type: array
          lab_servers_count:
            example: 6
            type: integer
          mini:
            type: boolean
          name:
            example: RastaLabs
            type: string
          pro_flags_count:
            example: 22
            type: integer
          pro_machines_count:
            example: 15
            type: integer
          state:
            type: string
          version:
            example: '1.3'
            type: string
          video_url:
            example: null
            nullable: true
            type: string
          writeup:
            nullable: true
            type: string
        title: Prolab Data
        type: object
      ProlabIdFaqResponse:
        description: Schema definition for Prolab Id Faq Response
        properties:
          data:
            items:
              $ref: '#/components/schemas/FaqItem'
            type: array
          status:
            example: true
            type: boolean
        title: Prolab Id Faq Response
        type: object
      ProlabIdFlagsResponse:
        description: Schema definition for Prolab Id Flags Response
        properties:
          data:
            items:
              $ref: '#/components/schemas/Flag'
            type: array
          status:
            example: true
            type: boolean
        title: Prolab Id Flags Response
        type: object
      ProlabIdInfoResponse:
        description: Schema definition for Prolab Id Info Response
        properties:
          data:
            $ref: '#/components/schemas/ProlabData'
          status:
            example: true
            type: boolean
        title: Prolab Id Info Response
        type: object
      ProlabIdMachineResponse:
        description: Schema definition for Prolab Id Machine Response
        properties:
          data:
            items:
              $ref: '#/components/schemas/Machine'
            type: array
          status:
            example: true
            type: boolean
        title: Prolab Id Machine Response
        type: object
      ProlabIdOverviewResponse:
        description: Schema definition for Prolab Id Overview Response
        properties:
          data:
            $ref: '#/components/schemas/ProlabOverviewData'
          status:
            example: true
            type: boolean
        title: Prolab Id Overview Response
        type: object
      ProlabIdReviewsOverviewResponse:
        description: Schema definition for Prolab Id Reviews Overview Response
        properties:
          data:
            $ref: '#/components/schemas/ProlabReviewsOverviewData'
          status:
            example: true
            type: boolean
        title: Prolab Id Reviews Overview Response
        type: object
      ProlabIdReviewsResponse:
        description: Schema definition for Prolab Id Reviews Response
        properties:
          data:
            items:
              $ref: '#/components/schemas/ReviewProlab'
            type: array
          links:
            $ref: '#/components/schemas/Links'
          meta:
            $ref: '#/components/schemas/Meta'
        title: Prolab Id Reviews Response
        type: object
      ProlabOverviewData:
        description: Schema definition for Prolab Overview Data
        properties:
          designated_level:
            $ref: '#/components/schemas/DesignatedLevel'
          excerpt:
            example: null
            nullable: true
            type: string
          id:
            example: 1
            type: integer
          identifier:
            type: string
          lab_masters:
            items:
              $ref: '#/components/schemas/LabMaster'
            type: array
          mini:
            type: boolean
          name:
            example: RastaLabs
            type: string
          new_version:
            example: false
            type: boolean
          overview_image_url:
            example: null
            nullable: true
            type: string
          pro_flags_count:
            example: 22
            type: integer
          pro_machines_count:
            example: 15
            type: integer
          skill_level:
            example: INTERMEDIATE
            type: string
          social_links:
            $ref: '#/components/schemas/SocialLinks'
          state:
            type: string
          user_eligible_to_play:
            type: boolean
          version:
            example: '1.3'
            type: string
        title: Prolab Overview Data
        type: object
      ProlabProgressResponse:
        properties:
          data:
            properties:
              keyed_pro_lab_mile_stone:
                items:
                  properties:
                    description:
                      type: string
                    icon:
                      type: string
                    isMilestoneReached:
                      type: boolean
                    percent:
                      type: number
                    rarity:
                      type: number
                    text:
                      type: string
                  type: object
                type: array
              ownership:
                type: number
              ownership_required_for_certification:
                type: number
              user_eligible_for_certificate:
                type: boolean
            type: object
          status:
            type: boolean
        type: object
      ProlabRatingResponse:
        properties:
          data:
            properties:
              rating:
                type: string
            type: object
        type: object
      ProlabReviewsOverviewData:
        description: Schema definition for Prolab Reviews Overview Data
        properties:
          feedbacks:
            items:
              $ref: '#/components/schemas/ReviewOverview'
            type: array
          total_number_of_ratings:
            example: 0
            type: integer
          users_average_rating:
            example: 0
            format: float
            type: number
        title: Prolab Reviews Overview Data
        type: object
      ProlabSubscriptionResponse:
        properties:
          data:
            properties:
              active:
                type: boolean
              ends_at:
                type: string
                nullable: true
              name:
                type: string
                nullable: true
              renews_at:
                type: string
                nullable: true
              type:
                type: object
                nullable: true
            type: object
          status:
            type: boolean
        type: object
      ProlabsResponse:
        description: Schema definition for Prolabs Response
        properties:
          data:
            properties:
              count:
                example: 6
                type: integer
              labs:
                items:
                  $ref: '#/components/schemas/Prolab'
                type: array
            type: object
          status:
            example: true
            type: boolean
        title: Prolabs Response
        type: object
      PwnboxRequest:
        description: Schema definition for Pwnbox Request
        properties:
          location:
            enum:
              - us-east
              - us-west
              - uk
              - ca
              - in
              - de
              - au
            type: string
        required:
          - location
        title: Pwnbox Request
        type: object
      PwnboxStartData:
        description: Schema definition for Pwnbox Start Data
        properties:
          created_at:
            example: '2024-05-21T04:07:34.000000Z'
            format: date-time
            type: string
          expires_at:
            example: '2024-05-21T12:07:34.000000Z'
            format: date-time
            type: string
          flock_id:
            example: 2059436
            type: integer
          hostname:
            example: htb-jiczlqw6tg.htb-cloud.com
            type: string
          id:
            example: 232502
            type: integer
          is_ready:
            example: null
            nullable: true
            type: boolean
          life_remaining:
            example: 479
            type: integer
          location:
            example: us-east
            type: string
          proxy_url:
            example: proxy-us-east.htb-cloud.com
            type: string
          status:
            example: deploying
            type: string
          updated_at:
            example: '2024-05-21T04:07:34.000000Z'
            format: date-time
            type: string
          username:
            example: null
            nullable: true
            type: string
          vnc_password:
            example: null
            nullable: true
            type: string
          vnc_view_only_password:
            example: null
            nullable: true
            type: string
        title: Pwnbox Start Data
        type: object
      PwnboxStartResponse:
        description: Schema definition for Pwnbox Start Response
        properties:
          data:
            $ref: '#/components/schemas/PwnboxStartData'
        title: Pwnbox Start Response
        type: object
      PwnboxStatusNotRunningResponse:
        description: Schema definition for Pwnbox Status Not Running Response
        properties:
          message:
            type: string
          status:
            type: string
        required:
          - message
          - status
        title: Pwnbox Status Not Running Response
        type: object
      PwnboxStatusRunningResponse:
        description: Schema definition for Pwnbox Status Running Response
        properties:
          data:
            properties:
              created_at:
                format: date-time
                type: string
              expires_at:
                format: date-time
                type: string
              flock_id:
                type: integer
              hostname:
                type: string
              id:
                type: integer
              is_ready:
                type: boolean
              life_remaining:
                type: integer
              location:
                type: string
              proxy_url:
                type: string
              spectate_url:
                type: string
              status:
                type: string
              updated_at:
                format: date-time
                type: string
              username:
                type: string
              vnc_password:
                type: string
              vnc_view_only_password:
                type: string
            type: object
        title: Pwnbox Status Running Response
        type: object
      PwnboxUsageResponse:
        description: Schema definition for Pwnbox Usage Response
        properties:
          active_minutes:
            type: integer
          allowed:
            type: integer
          minutes:
            type: integer
          remaining:
            type: integer
          sessions:
            type: integer
          total:
            type: integer
          used:
            type: integer
        title: Pwnbox Usage Response
        type: object
      RankingDataProperties:
        properties:
          avatar:
            type: string
          id:
            type: number
          name:
            type: string
          rank:
            type: number
          rank_growth:
            type: string
        type: object
      RankingsCountries:
        properties:
          status:
            type: boolean
          data:
            type: array
            items:
              type: object
              properties:
                rank:
                  type: integer
                country:
                  type: string
                members:
                  type: integer
                points:
                  type: integer
                root_owns:
                  type: integer
                user_owns:
                  type: integer
                challenge_owns:
                  type: integer
                root_bloods:
                  type: integer
                user_bloods:
                  type: integer
                fortress:
                  type: integer
                endgame:
                  type: integer
                name:
                  type: string
                ranks_diff:
                  type: integer
      RankingsCountryBest:
        properties:
          status:
            type: boolean
          data:
            type: object
            properties:
              rank:
                type: integer
              date:
                type: string
              rank_chart_data:
                type: array
                items:
                  type: integer
      RankingsCountryOverviewResponse:
        properties:
          status:
            type: boolean
          data:
            type: object
            properties:
              ranks_diff:
                type: integer
              points_diff:
                type: integer
              points_growth:
                type: string
              chart_data:
                type: array
                items:
                  type: integer
      RankingsCountrRankingBracketResponse:
        properties:
          status:
            type: boolean
          data:
            type: object
            properties:
              rank:
                type: integer
              points:
                type: integer
              points_for_next_bracket:
                type: integer
                nullable: true
              current_bracket:
                type: string
              next_bracket:
                type: string
                nullable: true
      RankingsCountryMembersResponse:
        properties:
          data:
            properties:
              country_name:
                type: string
              rankings:
                items:
                  properties:
                    avatar_thumb:
                      type: string
                    challenge_bloods:
                      type: number
                    challenge_owns:
                      type: number
                    country:
                      type: string
                    endgame:
                      type: number
                    fortress:
                      type: number
                    id:
                      type: number
                    level:
                      type: string
                    name:
                      type: string
                    points:
                      type: number
                    rank:
                      type: number
                    ranks_diff:
                      type: number
                      nullable: true
                    root_bloods:
                      type: number
                    root_owns:
                      type: number
                    user_bloods:
                      type: number
                    user_owns:
                      type: number
                  type: object
                type: array
            type: object
          status:
            type: boolean
        type: object
      RankingsResponse:
        properties:
          data:
            properties:
              team:
                $ref: '#/components/schemas/RankingDataProperties'
              user:
                $ref: '#/components/schemas/RankingDataProperties'
            type: object
          status:
            type: boolean
        type: object
      RankingsTeamBestResponse:
        description: Schema definition for Rankings Team Best Response
        properties:
          data:
            properties:
              date:
                format: date
                type: string
              rank:
                format: int32
                type: integer
              rank_chart_data:
                items:
                  type: integer
                type: array
            type: object
          status:
            type: boolean
        title: Rankings Team Best Response
        type: object
      RankingsTeamOverviewResponse:
        description: Schema definition for Rankings Team Overview Response
        properties:
          data:
            properties:
              chart_data:
                items:
                  type: integer
                type: array
              points_diff:
                format: int32
                type: integer
              points_growth:
                type: string
              ranks_diff:
                nullable: true
                type: integer
              team:
                properties:
                  avatar_thumb_url:
                    type: string
                  avatar_url:
                    type: string
                  id:
                    format: int32
                    type: integer
                  name:
                    type: string
                type: object
            type: object
          status:
            type: boolean
        title: Rankings Team Overview Response
        type: object
      RankingsTeamRankingBracketResponse:
        description: Schema definition for Rankings Team Ranking Bracket Response
        example:
          data:
            current_bracket: Top 20
            next_bracket: Top 10
            points: 1839
            points_for_next_bracket: 107
            rank: 14
          status: true
        properties:
          data:
            properties:
              current_bracket:
                type: string
              next_bracket:
                type: string
                nullable: true
              points:
                format: int32
                type: integer
              points_for_next_bracket:
                format: int32
                type: integer
                nullable: true
              rank:
                format: int32
                type: integer
            type: object
          status:
            type: boolean
        title: Rankings Team Ranking Bracket Response
        type: object
      RankingsUniversitiesResponse:
        type: object
        properties:
          status:
            type: boolean
          data:
            type: array
            items:
              type: object
              properties:
                rank:
                  type: integer
                students:
                  type: integer
                points:
                  type: integer
                root_owns:
                  type: integer
                user_owns:
                  type: integer
                challenge_owns:
                  type: integer
                root_bloods:
                  type: integer
                user_bloods:
                  type: integer
                challenge_bloods:
                  type: integer
                fortress:
                  type: integer
                endgame:
                  type: integer
                id:
                  type: integer
                name:
                  type: string
                country:
                  type: string
                ranks_diff:
                  type: integer
      RankingsTeamResponse:
        description: Schema definition for Rankings Team Response
        example:
          data:
            - Userbloods: 36
              avatar_thumb_url: https://www.hackthebox.eu/storage/teams/6a5dfac4be1502501489fc0f5a24b667_thumb.jpg
              challenge_bloods: 28
              challenge_owns: 149
              country: EU
              endgame: 13
              fortress: 26
              id: 1750
              name: TheAteam
              points: 2436
              rank: 1
              ranks_diff: 0
              root_bloods: 45
              root_owns: 187
              user_owns: 187
            - Userbloods: 3
              avatar_thumb_url: https://www.hackthebox.eu/storage/teams/52d080a3e172c33fd6886a37e7288491_thumb.jpg
              challenge_bloods: 6
              challenge_owns: 149
              country: US
              endgame: 13
              fortress: 26
              id: 1709
              name: BirdsArentReal
              points: 2190
              rank: 2
              ranks_diff: 0
              root_bloods: 2
              root_owns: 187
              user_owns: 187
          status: true
        properties:
          data:
            items:
              properties:
                avatar_thumb_url:
                  type: string
                challenge_bloods:
                  format: int32
                  type: integer
                challenge_owns:
                  format: int32
                  type: integer
                country:
                  nullable: true
                  type: string
                endgame:
                  format: int32
                  type: integer
                fortress:
                  format: int32
                  type: integer
                id:
                  format: int32
                  type: integer
                name:
                  type: string
                points:
                  format: int32
                  type: integer
                rank:
                  format: int32
                  type: integer
                ranks_diff:
                  nullable: true
                  type: integer
                root_bloods:
                  format: int32
                  type: integer
                root_owns:
                  format: int32
                  type: integer
                user_bloods:
                  format: int32
                  type: integer
                user_owns:
                  format: int32
                  type: integer
              type: object
            type: array
          status:
            type: boolean
        title: Rankings Team Response
        type: object
      RankingsUniversityRankingBracketByIdResponse:
        properties:
          data:
            properties:
              current_bracket:
                type: string
              next_bracket:
                type: string
                nullable: true
              points:
                type: integer
              points_for_next_bracket:
                type: integer
                nullable: true
              rank:
                type: integer
            type: object
          status:
            type: boolean
        type: object
      RankingsUserBestResponse:
        properties:
          data:
            properties:
              date:
                type: string
              rank:
                type: number
              rank_chart_data:
                items:
                  type: number
                type: array
            type: object
          status:
            type: boolean
        type: object
      RankingsUserOverviewResponse:
        properties:
          data:
            properties:
              chart_data:
                items:
                  type: number
                type: array
              points_diff:
                type: number
              points_growth:
                type: string
              ranks_diff:
                type: number
              user:
                properties:
                  avatar:
                    type: string
                  avatar_thumb:
                    type: string
                  id:
                    type: number
                  name:
                    type: string
                type: object
            type: object
          status:
            type: boolean
        type: object
      RankingsUserRankingBracketResponse:
        properties:
          data:
            properties:
              current_bracket:
                type: string
              next_bracket:
                type: string
              points:
                type: number
              points_for_next_bracket:
                type: number
              rank:
                type: number
            type: object
          status:
            type: boolean
        type: object
      RankingsUsersResponse:
        description: Schema definition for Rankings Users Response
        properties:
          data:
            items:
              properties:
                avatar_thumb:
                  type: string
                challenge_bloods:
                  type: integer
                challenge_owns:
                  type: integer
                country:
                  nullable: true
                  type: string
                endgame:
                  type: integer
                fortress:
                  type: integer
                id:
                  type: integer
                level:
                  type: string
                name:
                  type: string
                points:
                  type: integer
                rank:
                  type: integer
                ranks_diff:
                  nullable: true
                  type: integer
                root_bloods:
                  type: integer
                root_owns:
                  type: integer
                user_bloods:
                  type: integer
                user_owns:
                  type: integer
              type: object
            type: array
          status:
            oneOf:
              - type: integer
              - type: boolean
        title: Rankings Users Response
        type: object
      RecommendedCard:
        description: Schema definition for Recommended Card
        properties:
          category_name:
            example: AI - ML
            type: string
          difficulty:
            example: Medium
            type: string
          id:
            example: 753
            type: integer
          name:
            example: Prometheon
            type: string
          rating:
            example: 0
            type: number
          release_date:
            example: '2024-08-09T20:00:00.000000Z'
            type: string
          retire_challenge_id:
            example: 445
            type: integer
          retired:
            example: false
            type: boolean
          state:
            example: unreleased
            type: string
          url_name:
            example: prometheon
            type: string
        title: Recommended Card
        type: object
      RecommendedCardRetired:
        description: Schema definition for Recommended Card Retired
        properties:
          category_name:
            example: AI - ML
            type: string
          difficulty:
            example: Medium
            type: string
          id:
            example: 753
            type: integer
          name:
            example: Prometheon
            type: string
          release_date:
            example: '2024-08-09T20:00:00.000000Z'
            type: string
          retired:
            example: true
            type: boolean
          state:
            example: retired
            type: string
          url_name:
            example: prometheon
            type: string
        title: Recommended Card Retired
        type: object
      RecommendedMachineResponse:
        description: Schema definition for Recommended Machine Response
        properties:
          card1:
            $ref: '#/components/schemas/MachineCard1'
          card2:
            $ref: '#/components/schemas/MachineCard2'
          state:
            example:
              - seasonal
              - staff_pick
            items:
              type: string
            type: array
        title: Recommended Machine Response
        type: object
      ReleaseArenaLab:
        description: Schema definition for Release Arena Lab
        properties:
          code:
            example: eurelease
            type: string
          location:
            example: EU
            type: string
          name:
            example: EU Release Arena 1
            type: string
        title: Release Arena Lab
        type: object
      ReviewHelpful:
        description: Schema definition for Review Helpful
        items:
          properties:
            id:
              example: 1411
              type: integer
            review_id:
              example: 359383
              type: integer
            user_id:
              example: 389926
              type: integer
          type: object
        title: Helpful Reviews
        type: array
      ReviewMessage:
        description: Schema definition for Review Message
        items:
          properties:
            authUserInHelpfulReviews:
              example: false
              type: boolean
            created_at:
              example: '2023-01-28T21:42:53.000000Z'
              format: date-time
              type: string
            helpful_reviews:
              $ref: '#/components/schemas/ReviewHelpful'
            helpful_reviews_count:
              example: 0
              type: integer
            id:
              example: 3242342
              type: integer
            message:
              example: User was great, would user again
              type: string
            released:
              example: 1
              type: integer
            stars:
              example: 5
              type: integer
            title:
              example: A++++
              nullable: true
              type: string
            user:
              $ref: '#/components/schemas/ReviewUser'
            user_id:
              example: 234234
              type: integer
          type: object
        title: Review Message
        type: array
      ReviewOverview:
        description: Schema definition for Review Overview
        properties:
          rating:
            example: 5
            type: integer
          text:
            example: The lab was one of the best CTF challenges I've come across. For a long time, I felt that it would be an awesome thing to have a platform where you can train your domain kung fu skills. Rastamouse and HTB made that happen. Amazing, Hard, Fun, Real. Thanks
            type: string
          user:
            $ref: '#/components/schemas/CommonIdName'
        title: Review Overview
        type: object
      ReviewProlab:
        description: Schema definition for Review Prolab
        properties:
          created_at:
            example: '2024-03-31T20:40:55.000000Z'
            format: date-time
            type: string
          difficulty:
            example: 8
            type: integer
          helpful_pro_feedbacks_count:
            example: 1
            type: integer
          id:
            example: 929
            type: integer
          rating:
            example: 5
            type: integer
          text:
            example: I really enjoyed the lab for a Red team_ experience
            type: string
          user:
            $ref: '#/components/schemas/ReviewUserProlab'
          user_in_helpful_pro_feedbacks:
            example: false
            type: boolean
        title: Review
        type: object
      ReviewUser:
        description: Schema definition for Review User
        properties:
          avatar:
            example: /storage/avatars/3453459704ee924e218ba13453453453.png
            type: string
          id:
            example: 234234
            type: integer
          name:
            example: aname
            type: string
        title: Review User
        type: object
      ReviewUserProlab:
        description: Schema definition for Review User Prolab
        properties:
          avatar_thumb:
            example: /storage/avatars/09a1dd57d2c38ddcc021b9cf55c88db5_thumb.png
            type: string
          id:
            example: 105937
            type: integer
          name:
            example: Rafity
            type: string
        title: Review User Prolab
        type: object
      ReviewsResponse:
        description: Schema definition for Reviews Response
        properties:
          average:
            example: 3.3
            format: float
            type: number
          count:
            example: 118
            type: integer
          info:
            $ref: '#/components/schemas/ReviewMessage'
        title: Reviews
      SearchFetchResponse:
        description: Schema definition for Search Fetch Response
        properties:
          challenges:
            items:
              properties:
                challenge_category_id:
                  example: 10
                  type: integer
                description:
                  example: Our agents got caught during a mission...
                  type: string
                id:
                  example: 217
                  type: integer
                value:
                  example: Walkie Hackie
                  type: string
              type: object
            type: array
          joboffers:
            items:
              properties:
                id:
                  example: '644'
                  type: string
              type: object
            type: array
          machines:
            additionalProperties:
              properties:
                avatar:
                  example: b99c956ef89135920805452930f99f71.png
                  type: string
                id:
                  example: 176
                  type: integer
                isSp:
                  example: false
                  type: boolean
                tierId:
                  example: null
                  nullable: true
                  type: string
                value:
                  example: Hackback
                  type: string
              type: object
            type: object
          teams:
            items:
              properties:
                avatar:
                  example: 45c166d697d65080d54501403b433256.jpg
                  type: string
                id:
                  example: 3174
                  type: integer
                motto:
                  example: Be sure, be secure!
                  nullable: true
                  type: string
                value:
                  example: HACK
                  type: string
              type: object
            type: array
          users:
            items:
              properties:
                avatar:
                  example: 23531cbb5210aebc5a094e8f18e10ec5.png
                  type: string
                id:
                  example: 85187
                  type: integer
                value:
                  example: hack
                  type: string
              type: object
            type: array
        title: Search Fetch Response
        type: object
      SeasonActive:
        description: Schema definition for Season Active
        properties:
          data:
            properties:
              active:
                type: boolean
              avatar:
                type: string
              cocreators:
                items:
                  type: object
                type: array
              creator:
                items:
                  properties:
                    avatar:
                      type: string
                    id:
                      type: integer
                    name:
                      type: string
                  type: object
                type: array
              difficulty_text:
                type: string
              id:
                type: integer
              info_status:
                nullable: true
                type: string
              ip:
                example: 10.10.10.10
                format: ipv4
                nullable: true
                type: string
              is_owned_root:
                type: boolean
              is_owned_user:
                type: boolean
              is_released:
                type: boolean
              is_root_blood:
                type: boolean
              is_user_blood:
                type: boolean
              maker_id:
                type: integer
              name:
                type: string
              os:
                type: string
              play_info:
                $ref: '#/components/schemas/PlayInfo'
              points:
                type: integer
              poweroff:
                type: integer
              production:
                type: boolean
              release:
                format: date-time
                type: string
              release_time:
                format: date-time
                type: string
              retired:
                type: boolean
              root_blood_points:
                type: integer
              root_own_points:
                type: integer
              root_points:
                type: integer
              static_points:
                type: integer
              unknown:
                type: boolean
              user_blood_points:
                type: integer
              user_own_points:
                type: integer
              user_points:
                type: integer
            type: object
        title: Season Active
        type: object
      SeasonCompletedMachine:
        description: Schema definition for Season Completed Machine
        properties:
          data:
            properties:
              season_flags:
                type: integer
              season_pwned_flags:
                type: integer
            type: object
        title: Season Completed Machine
        type: object
      SeasonListResponse:
        description: Schema definition for Season List Response
        properties:
          data:
            items:
              properties:
                active:
                  type: boolean
                background_image:
                  type: string
                end_date:
                  format: date-time
                  type: string
                id:
                  type: integer
                is_visible:
                  type: boolean
                logo:
                  type: string
                name:
                  type: string
                start_date:
                  format: date-time
                  type: string
                state:
                  type: string
                subtitle:
                  nullable: true
                  type: string
              type: object
            type: array
        title: Season List Response
        type: object
      SeasonMachines:
        description: Schema definition for Season Machines
        properties:
          data:
            items:
              properties:
                Userpoints:
                  type: integer
                active:
                  type: boolean
                avatar:
                  type: string
                difficulty_text:
                  type: string
                id:
                  type: integer
                is_Userblood:
                  type: boolean
                is_owned_root:
                  type: boolean
                is_owned_user:
                  type: boolean
                is_released:
                  type: boolean
                is_root_blood:
                  type: boolean
                name:
                  type: string
                os:
                  type: string
                release_time:
                  format: date-time
                  type: string
                root_points:
                  type: integer
                unknown:
                  type: boolean
              type: object
            type: array
        title: Season Machines
        type: object
      SeasonPlatersLeaderboardTopResponse:
        properties:
          data:
            items:
              properties:
                avatar_thumb:
                  type: string
                country:
                  type: string
                  nullable: true
                is_respected:
                  type: boolean
                last_own:
                  type: string
                  nullable: true
                league_rank:
                  type: string
                name:
                  type: string
                points:
                  type: number
                rank:
                  type: number
                resource_id:
                  type: number
                root_bloods:
                  type: number
                root_owns:
                  type: number
                user_bloods:
                  type: number
                user_owns:
                  type: number
              type: object
            type: array
        type: object
      SeasonPlayersLeaderboardResponse:
        properties:
          data:
            items:
              properties:
                avatar_thumb:
                  type: string
                country:
                  type: string
                  nullable: true
                last_own:
                  type: string
                league_rank:
                  type: string
                name:
                  type: string
                points:
                  type: number
                positive_trend:
                  type: boolean
                rank:
                  type: number
                rank_trend:
                  type: number
                resource_id:
                  type: number
                root_bloods:
                  type: number
                root_owns:
                  type: number
                user_bloods:
                  type: number
                user_owns:
                  type: number
              type: object
            type: array
          links:
            $ref: '#/components/schemas/Links'
          meta:
            $ref: '#/components/schemas/Meta'
        type: object
      SeasonRewardsResponse:
        properties:
          data:
            items:
              properties:
                reward_types:
                  properties:
                    description:
                      type: string
                    groups:
                      items:
                        properties:
                          description:
                            type: string
                            nullable: true
                          id:
                            type: number
                          image:
                            type: string
                            nullable: true
                          name:
                            type: string
                          order:
                            type: number
                          reward_type_id:
                            type: number
                          rewards:
                            items:
                              properties:
                                id:
                                  type: number
                                image:
                                  type: string
                                name:
                                  type: string
                                order:
                                  type: number
                                reward_group_id:
                                  type: number
                              type: object
                            type: array
                          subtitle:
                            type: string
                            nullable: true
                        type: object
                      type: array
                    id:
                      type: number
                    name:
                      type: string
                    order:
                      type: number
                  type: object
              type: object
            type: array
        title: Season Rewards Resposne
        type: object
      SeasonUserFollowers:
        description: Schema definition for Season User Followers
        properties:
          data:
            properties:
              top_ranked_followers:
                items:
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    points:
                      type: integer
                      nullable: true
                    user_avatar:
                      type: string
                  type: object
                type: array
              top_season_users:
                items:
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    points:
                      type: integer
                      nullable: true
                    user_avatar:
                      type: string
                  type: object
                type: array
            type: object
        title: Season User Followers
        type: object
      SeasonUserRank:
        description: Schema definition for Season User Rank
        properties:
          data:
            properties:
              flags_to_next_rank:
                properties:
                  obtained:
                    type: integer
                  total:
                    type: integer
                type: object
              league:
                type: string
              rank:
                type: integer
              rank_suffix:
                type: string
              total_ranks:
                type: integer
              total_season_points:
                type: integer
            type: object
        title: Season User Rank
        type: object
      Server:
        description: Schema definition for Server
        properties:
          current_clients:
            example: 85
            type: integer
          friendly_name:
            example: US VIP+ 1
            type: string
          full:
            example: false
            type: boolean
          id:
            example: 289
            type: integer
          location:
            example: US
            type: string
        title: Server
        type: object
      ServerGroup:
        description: Schema definition for Server Group
        properties:
          location:
            example: EU
            type: string
          name:
            example: EU - Free
            type: string
          servers:
            additionalProperties:
              $ref: '#/components/schemas/Server'
            type: object
        title: Server Group
        type: object
      SherlockDownloadLink:
        description: Schema definition for Sherlock Download Link
        properties:
          expires_in:
            type: integer
          url:
            type: string
        title: Sherlock Download Link
      SherlockInfo:
        description: Schema definition for Sherlock Info
        properties:
          data:
            properties:
              data:
                properties:
                  academyModules:
                    items:
                      properties:
                        avatar:
                          type: string
                        difficulty:
                          properties:
                            color:
                              type: string
                            id:
                              type: number
                            level:
                              type: number
                            text:
                              type: string
                            title:
                              type: string
                          type: object
                        id:
                          type: number
                        logo:
                          type: string
                        name:
                          type: string
                        tier:
                          properties:
                            color:
                              type: string
                            name:
                              type: string
                            number:
                              type: number
                          type: object
                        url:
                          type: string
                      type: object
                    type: array
                  description:
                    type: string
                  id:
                    type: number
                  user_owns_count:
                    type: number
                type: object
            type: object
        title: Sherlock Info
        type: object
      SherlockItem:
        description: Schema definition for Sherlock Item
        properties:
          auth_user_has_reviewed:
            type: boolean
          avatar:
            type: string
          category_id:
            type: integer
          category_name:
            type: string
          difficulty:
            enum:
              - Very Easy
              - Easy
              - Medium
              - Hard
              - Insane
            type: string
          id:
            type: integer
          is_owned:
            type: boolean
          name:
            type: string
          pinned:
            type: boolean
          progress:
            type: integer
          rating:
            type: number
          rating_count:
            type: integer
          release_date:
            type: string
          solves:
            type: integer
          state:
            description: The state of the item.
            type: string
        title: Sherlock Item
        type: object
      SherlockItemList:
        description: Schema definition for Sherlock Item List
        properties:
          data:
            items:
              $ref: '#/components/schemas/SherlockItem'
            type: array
          links:
            $ref: '#/components/schemas/Links'
          meta:
            $ref: '#/components/schemas/Meta'
        title: Sherlock Item List
        type: object
      SherlockNamedItem:
        description: Schema definition for Sherlock Named Item
        properties:
          data:
            properties:
              auth_user_has_reviewed:
                type: boolean
              avatar:
                example: /storage/challenges/cbcb58ac2e496207586df2854b17995f.png
                type: string
              category_id:
                example: 16
                type: integer
              category_name:
                example: Malware Analysis
                type: string
              difficulty:
                example: Insane
                type: string
              favorite:
                type: boolean
              id:
                example: 565
                type: integer
              isTodo:
                type: boolean
              name:
                example: Safecracker
                type: string
              rating:
                example: 4.555555555555555
                type: number
              rating_count:
                example: 18
                type: integer
              release_at:
                format: date-time
                type: string
              retired:
                type: boolean
              show_go_vip:
                type: boolean
              state:
                example: retired_free
                type: string
              tags:
                items:
                  type: string
                type: array
              writeup_visible:
                type: boolean
            type: object
        title: Sherlock Named Item
        type: object
      SherlockPlayResponse:
        description: Schema definition for Sherlock Play Response
        properties:
          data:
            properties:
              creators:
                items:
                  $ref: '#/components/schemas/Maker'
                type: array
              file_name:
                example: campfire-2.zip
                type: string
              file_size:
                example: 24 KB
                type: string
              id:
                example: 736
                type: integer
              scenario:
                example: Forela's Network is constantly under attack. The security system raised an alert about an old admin account requesting a ticket from KDC on a domain controller. Inventory shows that this user account is not used as of now so you are tasked to take a look at this. This may be an AsREP roasting attack as anyone can request any user's ticket which has preauthentication disabled.
                type: string
            type: object
        title: Sherlock Play Response
        type: object
      SherlockProgress:
        description: Schema definition for Sherlock Progress
        properties:
          data:
            properties:
              is_owned:
                type: boolean
              own_rank:
                type: integer
              progress:
                type: integer
              tasks_answered:
                type: integer
              total_tasks:
                type: integer
            type: object
        title: Sherlock Progress
        type: object
      SherlockTask:
        description: Schema definition for Sherlock Task
        properties:
          completed:
            type: boolean
          description:
            type: string
          flag:
            type: string
          hint:
            type: string
            nullable: true
          id:
            type: integer
          masked_flag:
            type: string
          options:
            items: {}
            type: array
          prerequisite_id:
            nullable: true
            type: integer
          task_type:
            properties:
              id:
                type: integer
              text:
                type: string
            type: object
          title:
            type: string
          type:
            properties:
              id:
                type: integer
              text:
                type: string
            type: object
        title: Sherlock Task
        type: object
      SherlockTasksList:
        description: Schema definition for Sherlock Tasks List
        properties:
          data:
            items:
              $ref: '#/components/schemas/SherlockTask'
            type: array
        title: Sherlock Tasks List
        type: object
      SherlockWriteup:
        description: Schema definition for Sherlock Writeup
        properties:
          data:
            properties:
              official:
                properties:
                  filename:
                    type: string
                  sha256:
                    type: string
                  url:
                    type: string
                type: object
            type: object
        title: Sherlock Writeup
        type: object
      SherlocksCategoriesListResponse:
        properties:
          info:
            items:
              properties:
                icon:
                  type: string
                  nullable: true
                id:
                  type: number
                name:
                  type: string
              type: object
            type: array
        type: object
      SidebarAnnouncementResponse:
        description: Schema definition for Sidebar Announcement Response
        properties:
          announcement:
            $ref: '#/components/schemas/Announcement'
        type: object
      SidebarChangeLog:
        description: Schema definition for Sidebar Change Log
        properties:
          created_at:
            example: '2021-11-12T10:38:24.000000Z'
            format: date-time
            type: string
          id:
            example: 41
            type: integer
          version:
            example: 3.18.0
            type: string
        title: Sidebar Change Log
        type: object
      SidebarChangeLogResponse:
        description: Schema definition for Sidebar Change Log Response
        properties:
          changelog:
            $ref: '#/components/schemas/SidebarChangeLog'
        title: Sidebar Change Log Response
        type: object
      SocialLinks:
        description: Schema definition for Social Links
        properties:
          discord:
            example: https://discord.gg/RnFKvTPYer
            type: string
          forum:
            example: https://forum.hackthebox.com/c/content/prolabs/18
            type: string
        title: Social Links
        type: object
      SpProfileIdResponse:
        description: Schema definition for Sp Profile Id Response
        properties:
          info:
            properties:
              ip:
                example: 10.10.10.10
                format: ipv4
                nullable: true
                type: string
              playInfo:
                $ref: '#/components/schemas/PlayInfo'
            type: object
        title: Sp Profile Id Response
        type: object
      SpTierInfo:
        description: Schema definition for Sp Tier Info
        properties:
          data:
            properties:
              description:
                example: You need to walk before you can run
                type: string
              id:
                example: 2
                type: integer
              machines:
                items:
                  type: object
                  properties:
                    avatar:
                      example: /storage/avatars/a9ddcda8d2f6eb388c6717de2caff896.png
                      type: string
                    difficultyText:
                      example: Very Easy
                      type: string
                    forum_discussion_id:
                      example: null
                      nullable: true
                      type: string
                    id:
                      example: 402
                      type: integer
                    info_status:
                      example: null
                      nullable: true
                      type: string
                    name:
                      example: Appointment
                      type: string
                    order:
                      example: 10
                      type: integer
                    os:
                      example: Linux
                      type: string
                    rootOwn:
                      example: true
                      type: boolean
                    sp_flag:
                      example: 1
                      type: integer
                    static_points:
                      example: 0
                      type: integer
                    tasks:
                      items:
                        properties:
                          description:
                            example: What does the acronym SQL stand for?
                            type: string
                          flag:
                            example: Structured Query Language
                            type: string
                          hint:
                            example: A simple Google search will yield the answer. Use Camel Case.
                            type: string
                            nullable: true
                          id:
                            example: 64
                            type: integer
                          masked_flag:
                            example: '********** ***** *******e'
                            type: string
                            nullable: true
                          options:
                            example: []
                            items: {}
                            type: array
                          task_type:
                            example: 0
                            type: integer
                          title:
                            example: Task 1
                            type: string
                          type:
                            example: 0
                            type: integer
                          user_completions_count:
                            example: 1
                            type: integer
                        type: object
                      type: array
                    userOwn:
                      example: false
                      type: boolean
                    video:
                      oneOf:
                        - type: object
                          properties:
                            creator_id:
                              type: integer
                              example: 3769
                            creator_name:
                              type: string
                              example: ippsec
                            youtube_id:
                              type: string
                              example: 4BDFr-ZtlHE
                        - type: array
                          maxItems: 0
                          example: []
                    walkthrough:
                      properties:
                        filename:
                          example: Appointment.pdf
                          type: string
                        sha256:
                          example: fb62437a6debee31245c06a6db9626a7854fd8fa62f082571c93a498c427d61a
                          type: string
                      type: object
                    youtube_id:
                      example: null
                      nullable: true
                      type: string
                type: array
              name:
                example: Tier 1
                type: string
            type: object
        title: Sp Machine Info
        type: object
      SpTierResponse:
        $ref: '#/components/schemas/SpTierInfo'
        description: Schema definition for Sp Tier Response
        title: Sp Tier Response
        type: object
      SpTiersProgressResponse:
        description: Schema definition for Sp Tiers Progress Response
        properties:
          data:
            items:
              properties:
                completion_percentage:
                  type: integer
                description:
                  type: string
                free_machine_completion_percentage:
                  type: integer
                id:
                  type: integer
                name:
                  type: string
              type: object
            type: array
        title: Sp Tiers Progress Response
        type: object
      SpawnExtendRequest:
        description: Schema definition for Spawn Request
        properties:
          machine_id:
            example: 597
            type: integer
        required:
          - machine_id
        title: Spawn Request
        type: object
      SubscriptionsPricingResponse:
        properties:
          default_currency:
            type: string
          plans:
            properties:
              annual-prolabs-subscription:
                properties:
                  EUR:
                    properties:
                      per_period:
                        type: number
                      setup:
                        type: number
                    type: object
                  GBP:
                    properties:
                      per_period:
                        type: number
                      setup:
                        type: number
                    type: object
                  USD:
                    properties:
                      per_period:
                        type: number
                      setup:
                        type: number
                    type: object
                type: object
              monthly-prolabs-subscription:
                properties:
                  EUR:
                    properties:
                      per_period:
                        type: number
                      setup:
                        type: number
                    type: object
                  GBP:
                    properties:
                      per_period:
                        type: number
                      setup:
                        type: number
                    type: object
                  USD:
                    properties:
                      per_period:
                        type: number
                      setup:
                        type: number
                    type: object
                type: object
            type: object
        type: object
      SwitchedServer:
        description: Schema definition for Switched Server
        properties:
          current_clients:
            example: 85
            type: integer
          friendly_name:
            example: US VIP+ 1
            type: string
          id:
            example: 289
            type: integer
          location:
            example: US
            type: string
        title: Switched Server
        type: object
      Tag:
        description: Schema definition for Tag
        properties:
          id:
            type: integer
          name:
            type: string
          tag_category_id:
            type: integer
        title: Tag
        type: object
      TagCatagory:
        description: Schema definition for Tag Catagory
        properties:
          id:
            type: integer
          name:
            type: string
          tags:
            items:
              $ref: '#/components/schemas/Tag'
            type: array
        title: Tag Catagory
        type: object
      TaskFlagResponse:
        description: Schema definition for Task Flag Response
        properties:
          message:
            example: Task flag owned!
            type: string
          user_task:
            properties:
              id:
                type: integer
              task_id:
                type: integer
              user_id:
                type: integer
            type: object
        title: Task Flag Response
        type: object
      TeamActivityIdResponse:
        description: Schema definition for Team Activity Id Response
        items:
          properties:
            date:
              example: '2024-11-20T22:36:18.000000Z'
              format: date-time
              type: string
            date_diff:
              example: 10 hours ago
              type: string
            first_blood:
              example: false
              type: boolean
            id:
              example: 9
              type: integer
            machine_avatar:
              example: /storage/avatars/0d6275efbd5e48fcdc96e61b9724ae5e_thumb.png
              type: string
            name:
              example: Arctic
              type: string
            object_type:
              example: machine
              type: string
            points:
              example: 0
              type: integer
            type:
              example: user
              type: string
            user:
              properties:
                avatar_thumb:
                  example: /storage/avatars/sdfgs45345edrgsdfsd374fb23452d_thumb.png
                  type: string
                id:
                  example: 1234
                  type: integer
                name:
                  example: ABC123
                  type: string
                public:
                  example: 0
                  type: integer
              type: object
          type: object
        title: Team Activity Id Response
        type: array
      TeamGraphIdResponse:
        description: Schema definition for Team Graph Id Response
        properties:
          data:
            properties:
              points:
                items:
                  type: integer
                type: array
              rank:
                items:
                  type: integer
                type: array
              respect:
                items:
                  type: integer
                type: array
            type: object
          status:
            type: boolean
        title: Team Graph Id Response
        type: object
      TeamInfoIdResponse:
        description: Schema definition for Team Info Id Response
        properties:
          avatar_url:
            type: string
          can_delete_avatar:
            type: boolean
          captain:
            properties:
              id:
                format: int32
                type: integer
              name:
                type: string
            type: object
          country_code:
            type: string
            nullable: true
          country_name:
            type: string
          cover_image_url:
            type: string
            nullable: true
          description:
            type: string
          discord:
            type: string
            nullable: true
          facebook:
            nullable: true
            type: string
          id:
            format: int32
            type: integer
          is_respected:
            type: boolean
          join_request_sent:
            type: boolean
          motto:
            type: string
          name:
            type: string
          points:
            format: int32
            type: integer
          public:
            type: boolean
          twitter:
            nullable: true
            type: string
        title: Team Info Id Response
        type: object
      TeamInformationProfileResponse:
        description: Schema definition for Team Information Profile Response
        properties:
          avatar_url:
            example: https://www.hackthebox.eu/storage/teams/8232e119d8f59aa83050a741631803a6.jpg
            format: uri
            type: string
          captain:
            $ref: '#/components/schemas/CommonIdName'
          country_code:
            example: NL
            type: string
          country_name:
            example: Netherlands
            type: string
          cover_image_url:
            format: uri
            nullable: true
            type: string
          description:
            example: Open for anyone who is polite, honest, nice, and willing to help others.
            type: string
          id:
            example: 2102
            type: integer
          is_respected:
            example: true
            type: boolean
          motto:
            example: Hacking for the fun of it! Learning it as a bonus
            type: string
          name:
            example: CommandlineKings
            type: string
          points:
            example: 1839
            type: integer
        title: Team Information Profile Response
        type: object
      TeamInvitationsIdResponse:
        description: Schema definition for Team Invitations Id Response
        properties: {}
        title: Team Invitations Id Response
        type: object
      TeamMembersIdResponse:
        description: Schema definition for Team Members Id Response
        items:
          $ref: '#/components/schemas/TeamMember'
        title: Team Members Id Response
        type: array
      TeamsAttackPathCard:
        description: Schema definition for Teams Attack Path Card
        properties:
          avg_teams_solved:
            example: 0.1403438192620737
            type: number
          name:
            type: string
          solved:
            example: 20
            type: integer
          total:
            example: 100
            type: integer
        title: Teams Attack Path Card
        type: object
      TodoResponse:
        description: Response for ToDos
        properties:
          info:
            items:
              properties:
                id:
                  example: 750
                  type: integer
              required:
                - id
              type: object
            type: array
        type: object
      TracksIdResponse:
        description: Schema definition for Tracks Id Response
        properties:
          completed:
            type: boolean
          completion_cta:
            type: integer
            nullable: true
          completion_message:
            type: string
            nullable: true
          completion_url:
            type: string
            nullable: true
          cover_image:
            type: string
            nullable: true
          creator:
            properties:
              avatar:
                type: string
                nullable: true
              id:
                type: number
              name:
                type: string
              type:
                type: string
            type: object
          description:
            type: string
          difficulty:
            type: string
          enrolled:
            type: boolean
          has_completion_message:
            type: boolean
          id:
            type: number
          items:
            items:
              properties:
                avatar:
                  type: string
                  nullable: true
                category:
                  type: string
                  nullable: true
                complete:
                  type: boolean
                difficulty:
                  type: string
                difficulty_ratings:
                  properties:
                    counterBitHard:
                      type: number
                    counterBrainFuck:
                      type: number
                    counterCake:
                      type: number
                    counterEasy:
                      type: number
                    counterExHard:
                      type: number
                    counterHard:
                      type: number
                    counterMedium:
                      type: number
                    counterTooEasy:
                      type: number
                    counterTooHard:
                      type: number
                    counterVeryEasy:
                      type: number
                  type: object
                id:
                  type: number
                name:
                  type: string
                os:
                  type: string
                  nullable: true
                type:
                  type: string
              type: object
            type: array
          liked:
            type: boolean
          likes:
            type: number
          name:
            type: string
          official:
            type: boolean
          staff_pick:
            type: number
        title: Tracks Id Response
        type: object
      TracksLikeResponse:
        properties:
          liked:
            type: boolean
        type: object
      TracksResponse:
        description: Schema definition for Tracks Response
        items:
          properties:
            cover_image:
              type: string
            creator:
              properties:
                avatar:
                  type: string
                id:
                  type: integer
                name:
                  type: string
                type:
                  type: string
              type: object
            difficulty:
              type: string
            id:
              type: integer
            likes:
              type: integer
            name:
              type: string
            official:
              oneOf:
                - type: boolean
                - type: integer
            staff_pick:
              type: integer
          type: object
        title: Tracks Response
        type: array
      TraksEnrollResponse:
        properties:
          enrolled:
            type: boolean
        type: object
      UniversityActivityResponse:
        items:
          properties:
            challenge_category:
              type: string
            date:
              type: string
            date_diff:
              type: string
            first_blood:
              type: boolean
            id:
              type: number
            name:
              type: string
            object_type:
              type: string
            points:
              type: number
            type:
              type: string
            user:
              properties:
                avatar_thumb:
                  type: string
                id:
                  type: number
                name:
                  type: string
                public:
                  type: number
              type: object
          type: object
        type: array
      UniversityAllListResponse:
        description: Schema for University All List Response
        properties:
          data:
            properties:
              current_page:
                example: 1
                type: integer
              data:
                items:
                  properties:
                    cca2:
                      type: string
                    country:
                      type: string
                    created_at:
                      type: string
                    has_auto_generated_logo:
                      type: number
                    id:
                      type: number
                    name:
                      type: string
                    respected_by_count:
                      type: number
                    user_avatars:
                      items:
                        type: string
                      type: array
                    users_count:
                      type: number
                  type: object
                type: array
              first_page_url:
                type: string
              from:
                example: 1
                type: integer
              last_page:
                example: 11
                type: integer
              last_page_url:
                type: string
              links:
                items:
                  $ref: '#/components/schemas/PaginationLink'
                type: array
              next_page_url:
                type: string
              path:
                example: https://labs.hackthebox.com/api/v4/prolab/1/reviews
                type: string
              per_page:
                example: 15
                type: integer
              prev_page_url:
                type: object
              to:
                example: 15
                type: integer
              total:
                example: 162
                type: integer
            type: object
          message:
            type: string
          section:
            type: string
      UniversityChartChallengeCategoriesResponse:
        properties:
          data:
            items:
              properties:
                all_universitys_avg_percentage:
                  type: number
                id:
                  type: number
                name:
                  type: string
                university_percentage:
                  type: number
              type: object
            type: array
          status:
            type: boolean
        type: object
      UniversityChartMachinesAttackResponse:
        properties:
          machine_attack_paths:
            properties:
              Binary Analysis:
                properties:
                  avg_universitys_solved:
                    type: number
                  name:
                    type: string
                  solved:
                    type: number
                  total:
                    type: number
                type: object
              Binary Exploitation:
                properties:
                  avg_universitys_solved:
                    type: number
                  name:
                    type: string
                  solved:
                    type: number
                  total:
                    type: number
                type: object
              Configuration Analysis:
                properties:
                  avg_universitys_solved:
                    type: number
                  name:
                    type: string
                  solved:
                    type: number
                  total:
                    type: number
                type: object
              Fuzzing:
                properties:
                  avg_universitys_solved:
                    type: number
                  name:
                    type: string
                  solved:
                    type: number
                  total:
                    type: number
                type: object
              Impersonation:
                properties:
                  avg_universitys_solved:
                    type: number
                  name:
                    type: string
                  solved:
                    type: number
                  total:
                    type: number
                type: object
              Packet Capture Analysis:
                properties:
                  avg_universitys_solved:
                    type: number
                  name:
                    type: string
                  solved:
                    type: number
                  total:
                    type: number
                type: object
              Pivoting:
                properties:
                  avg_universitys_solved:
                    type: number
                  name:
                    type: string
                  solved:
                    type: number
                  total:
                    type: number
                type: object
              Reconnaissance:
                properties:
                  avg_universitys_solved:
                    type: number
                  name:
                    type: string
                  solved:
                    type: number
                  total:
                    type: number
                type: object
              User Enumeration:
                properties:
                  avg_universitys_solved:
                    type: number
                  name:
                    type: string
                  solved:
                    type: number
                  total:
                    type: number
                type: object
              Web Site Structure Discovery:
                properties:
                  avg_universitys_solved:
                    type: number
                  name:
                    type: string
                  solved:
                    type: number
                  total:
                    type: number
                type: object
            type: object
          machine_owns:
            properties:
              solved:
                type: number
              total:
                type: number
            type: object
        type: object
      UniversityCountryListResponse:
        properties:
          data:
            properties:
              current_page:
                type: number
              data:
                items:
                  properties:
                    cca2:
                      type: string
                    country:
                      type: string
                    created_at:
                      type: string
                    has_auto_generated_logo:
                      type: number
                    id:
                      type: number
                    name:
                      type: string
                    respected_by_count:
                      type: number
                    user_avatars:
                      items:
                        type: string
                      type: array
                    users_count:
                      type: number
                  type: object
                type: array
              first_page_url:
                type: string
              from:
                type: number
              last_page:
                type: number
              last_page_url:
                type: string
              links:
                items:
                  properties:
                    active:
                      type: boolean
                    label:
                      type: string
                    url:
                      type: object
                  type: object
                type: array
              next_page_url:
                type: string
              path:
                type: string
              per_page:
                type: number
              prev_page_url:
                type: object
              to:
                type: number
              total:
                type: number
            type: object
          message:
            type: string
          section:
            type: string
        type: object
      UniversityMembersResponse:
        description: University Members Resposne
        properties:
          avatar:
            type: string
          country_code:
            type: string
          country_name:
            type: string
          id:
            type: number
          name:
            type: string
          points:
            type: number
          public:
            type: number
          rank:
            type: string
          rank_text:
            type: string
          role:
            type: string
          root_bloods_count:
            type: number
          root_owns:
            type: number
          university:
            properties:
              captain_id:
                type: number
              id:
                type: number
            type: object
          user_bloods_count:
            type: number
          user_owns:
            type: number
      TeamMember:
        description: University Members Resposne
        properties:
          avatar:
            type: string
          country_code:
            type: string
          country_name:
            type: string
          id:
            type: number
          name:
            type: string
          points:
            type: number
          public:
            type: number
          rank:
            type: string
          rank_text:
            type: string
          role:
            type: string
          root_bloods_count:
            type: number
          root_owns:
            type: number
          team:
            properties:
              captain_id:
                type: number
              id:
                type: number
            type: object
          user_bloods_count:
            type: number
          user_owns:
            type: number
      UniversityMyResponse:
        properties:
          data:
            items:
              type: object
            type: array
          message:
            type: string
          section:
            type: string
        type: object
      UniversityNewListResponse:
        properties:
          data:
            properties:
              data:
                items:
                  properties:
                    cca2:
                      type: string
                    country:
                      type: string
                    created_at:
                      type: string
                    has_auto_generated_logo:
                      type: number
                    id:
                      type: number
                    name:
                      type: string
                    respected_by_count:
                      type: number
                    user_avatars:
                      items:
                        type: string
                      type: array
                    users_count:
                      type: number
                  type: object
                type: array
              last_page:
                type: number
            type: object
          message:
            type: string
          section:
            type: string
        type: object
      UniversityTopListResponse:
        properties:
          data:
            properties:
              data:
                items:
                  properties:
                    cca2:
                      type: string
                    country:
                      type: string
                    created_at:
                      type: string
                    has_auto_generated_logo:
                      type: number
                    id:
                      type: number
                    name:
                      type: string
                    rank:
                      type: number
                    respected_by_count:
                      type: number
                    user_avatars:
                      items:
                        type: string
                      type: array
                    users_count:
                      type: number
                  type: object
                type: array
              last_page:
                type: number
            type: object
          message:
            type: string
          section:
            type: string
        type: object
      UserAchievementTarTypeUserIdTarIdResponse:
        description: Schema definition for User Achievement Target Type User Id Target
        properties:
          machine:
            properties:
              avatar:
                type: string
              name:
                type: string
            type: object
          own:
            properties:
              date:
                type: string
              points:
                type: integer
              rank:
                type: integer
            type: object
          user:
            properties:
              avatar:
                type: string
              name:
                type: string
            type: object
        title: User Achievement Target Type User Id Target Id Response
        type: object
      UserAnonymizedIdResponse:
        description: Schema definition for User Anonymized Id Response
        properties:
          id:
            type: string
          user_hash:
            type: string
        title: User Anonymized Id Response
        type: object
      UserApptokenCreateResponse:
        properties:
          access_token:
            type: string
          created_at:
            type: string
          expires_at:
            type: string
          name:
            type: string
        type: object
      UserApptokenListResponse:
        properties:
          tokens:
            items:
              properties:
                created_at:
                  type: string
                expires_at:
                  type: string
                last_seen:
                  type: string
                name:
                  type: string
              type: object
            type: array
        type: object
      UserAvailability:
        description: Schema definition for User Availability
        properties:
          available:
            example: true
            type: boolean
          code:
            example: 0
            type: integer
          message:
            nullable: true
            type: string
        title: User Availability
        type: object
      UserBasic:
        description: Schema definition for User Basic
        properties:
          avatar:
            type: string
          id:
            type: integer
          name:
            type: string
        title: User Basic
        type: object
      UserCareerResponse:
        properties:
          data:
            properties:
              cv:
                type: object
                nullable: true
              email:
                type: string
              name:
                type: string
              phone:
                type: string
                nullable: true
            type: object
        type: object
      UserConnectionStatusResponse:
        description: Schema definition for User Connection Status Response
        properties:
          connection:
            oneOf:
              - type: object
                properties:
                  down:
                    type: number
                    example: 123.45
                  ip4:
                    type: string
                    example: 10.10.10.10
                  ip6:
                    type: string
                    example: 2001:db8::1
                  name:
                    type: string
                    example: tun0
                  through_pwnbox:
                    type: boolean
                    example: false
                  up:
                    type: number
                    example: 67.89
              - type: string
                example: not connected
          status:
            type: boolean
        title: User Connection Status Response
        type: object
      UserDashboardResponse:
        description: Schema definition for User Dashboard Response
        properties:
          dashboard_players:
            $ref: '#/components/schemas/DashboardPlayers'
        title: User Dashboard Response
        type: object
      UserFollowersResponse:
        description: Schema definition for User Followers Response
        properties:
          info:
            items:
              properties:
                id:
                  type: integer
              type: object
            type: array
        title: User Followers Response
        type: object
      UserFriendsResponse:
        description: Schema definition for User Friends Response
        items: {}
        title: User Friends Response
        type: array
      UserInfo:
        description: Schema definition for User Info
        properties:
          TwoFaEnabled:
            example: true
            type: boolean
          avatar:
            example: string
            type: string
          beta_tester:
            example: 0
            type: integer
          canAccessDedilab:
            example: false
            type: boolean
          canAccessVIP:
            example: true
            type: boolean
          can_delete_avatar:
            example: false
            type: boolean
          dunning_exists:
            example: false
            type: boolean
          email:
            example: string
            type: string
          hasAppTokens:
            example: true
            type: boolean
          hasteam_Invitation:
            example: false
            type: boolean
          id:
            example: 0
            type: integer
          identifier:
            example: string
            type: string
          isBGModerator:
            example: false
            type: boolean
          isChatBanned:
            example: false
            type: boolean
          isDedicatedVip:
            example: true
            type: boolean
          isModerator:
            example: false
            type: boolean
          isVip:
            example: false
            type: boolean
          is_sso_connected:
            example: true
            type: boolean
          isserverVIP:
            example: true
            type: boolean
          name:
            example: string
            type: string
          onboarding_completed:
            example: true
            type: boolean
          onboarding_tutorial_complete:
            example: 1
            type: integer
          opt_in:
            example: 0
            type: integer
          rank_id:
            example: 3
            type: integer
          server_id:
            example: 0
            type: integer
          subscription_plan:
            example: string
            type: string
          team:
            nullable: true
            properties:
              avatar_thumb_url:
                type: string
              id:
                type: integer
              name:
                type: string
            type: object
          timezone:
            example: string
            type: string
          university:
            example: null
            nullable: true
            type: string
          verified:
            example: true
            type: boolean
        title: User Info
        type: object
      UserInfoResponse:
        description: Schema definition for User Info Response
        properties:
          info:
            $ref: '#/components/schemas/UserInfo'
        title: User Info Response
        type: object
      UserProfileBasicIdResponse:
        description: Schema definition for User Profile Basic Id Response
        properties:
          profile:
            properties:
              avatar:
                type: string
              country_code:
                type: string
              country_name:
                type: string
              current_rank_progress:
                type: integer
              description:
                type: string
              github:
                nullable: true
                type: string
              id:
                type: integer
              isDedicatedVip:
                type: boolean
              isFollowed:
                type: boolean
              isRespected:
                type: boolean
              isVip:
                type: boolean
              linkedin:
                nullable: true
                type: string
              name:
                type: string
              next_rank:
                type: string
                nullable: true
              next_rank_points:
                type: number
                nullable: true
              points:
                type: integer
              public:
                type: boolean
              rank:
                type: string
              rank_id:
                type: integer
              rank_ownership:
                type: number
              rank_requirement:
                type: integer
                nullable: true
              ranking:
                type: integer
              respects:
                type: integer
              system_bloods:
                type: integer
              system_owns:
                type: integer
              team:
                properties:
                  avatar:
                    type: string
                  id:
                    type: integer
                  name:
                    type: string
                  ranking:
                    type: integer
                type: object
              timezone:
                type: string
              twitter:
                nullable: true
                type: string
              university_name:
                nullable: true
                type: string
              user_bloods:
                type: integer
              user_owns:
                type: integer
            type: object
        title: User Profile Basic Id Response
        type: object
      UserProfileProgressSherlocksResponse:
        properties:
          profile:
            properties:
              challenge_categories:
                items:
                  properties:
                    avg_user_solved:
                      type: number
                    completion_percentage:
                      type: number
                    name:
                      type: string
                    owned_flags:
                      type: number
                    total_flags:
                      type: number
                  type: object
                type: array
              challenge_difficulties:
                items:
                  properties:
                    completion_percentage:
                      type: number
                    name:
                      type: string
                    owned_challenges:
                      type: number
                    total_challenges:
                      type: number
                  type: object
                type: array
              challenge_owns:
                properties:
                  percentage:
                    type: number
                  solved:
                    type: number
                  total:
                    type: number
                type: object
              solved_tasks:
                type: number
            type: object
        type: object
      UserRank:
        description: Schema definition for User Rank
        properties:
          changed:
            example: false
            type: boolean
          newRank:
            $ref: '#/components/schemas/NewRank'
        title: User Rank
        type: object
      UserSettingsResponse:
        description: Schema definition for User Settings Response
        properties:
          email:
            type: string
          hide_machine_tags:
            type: integer
          public:
            type: integer
          name_change_delay:
            type: boolean
            nullable: true
        title: User Settings Response
        type: object
      UserSubmissionsChallengesResponse:
        description: Schema definition for User Submissions Challenges Response
        properties:
          submission_challenges:
            items: {}
            type: array
        title: User Submissions Challenges Response
        type: object
      UserSubmissionsMachineResponse:
        description: Schema definition for User Submissions Machine Response
        properties:
          submission_machines:
            items: {}
            type: array
        title: User Submissions Machine Response
        type: object
      UserSubscriptionBillingHistory:
        properties:
          data:
            items:
              properties:
                amount:
                  type: number
                date:
                  type: string
                description:
                  type: string
                pdf_url:
                  type: string
                quaderno_invoice_id:
                  type: string
              type: object
            type: array
          links:
            $ref: '#/components/schemas/Links'
          meta:
            $ref: '#/components/schemas/Meta'
        type: object
      UserSubscriptionsBalanceResponse:
        description: Schema definition for User Subscriptions Balance Response
        properties:
          balances:
            type: object
            properties:
              USD:
                type: integer
              GBP:
                type: integer
              EUR:
                type: integer
          default_currency:
            type: string
        title: User Subscriptions Balance Response
        type: object
      UserSubscriptionsCancellationReasonsResponse:
        properties:
          categories:
            items:
              properties:
                children:
                  items:
                    type: object
                  type: array
                freetext:
                  type: boolean
                id:
                  type: number
                name:
                  type: string
              type: object
            type: array
        type: object
      UserSubscriptionsManageRecurlyResponse:
        description: Schema definition for User Subscriptions Manage Recurly Response
        properties:
          url:
            type: string
        title: User Subscriptions Manage Recurly Response
        type: object
      UserSubscriptionsResponse:
        description: Schema definition for User Subscriptions Response
        properties:
          subscriptions:
            items:
              properties:
                created_at:
                  type: string
                ends_at:
                  nullable: true
                  type: string
                name:
                  type: string
                paused_at:
                  nullable: true
                  type: string
                recurly_plan:
                  type: string
                renews_at:
                  type: string
                resume_at:
                  nullable: true
                  type: string
                stripe_plan:
                  type: string
              type: object
            type: array
        title: User Subscriptions Response
        type: object
      UserTracksResponse:
        description: Schema definition for User Tracks Response
        items:
          properties:
            complete:
              type: integer
            id:
              type: integer
          type: object
        title: User Tracks Response
        type: array
    securitySchemes:
      bearer:
        description: Need to create token on app.hackthebox.com
        scheme: bearer
        type: http
  info:
    contact:
      name: ' '
    description: The Undocumented Public API For The Hack The Box Platform
    license:
      name: ''
      url: ' '
    title: HTB Unofficial API
    version: v0.1.3
  openapi: 3.0.0
  paths:
    /access/ovpnfile/{vpnId}/0:
      get:
        description: Fetches the UDP OpenVPN configuration file for the specified VPN ID, allowing the user to establish a VPN connection
        operationId: getAccessOvpnfileVpnIdUDP
        parameters:
          - $ref: '#/components/parameters/VpnId'
        responses:
          '200':
            $ref: '#/components/responses/AccessOvpnfileVpnId0Response'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Download UDP VPN config
        tags:
          - Connection
    /access/ovpnfile/{vpnId}/0/1:
      get:
        description: Fetches the TCP OpenVPN configuration file for the specified VPN ID, allowing the user to establish a VPN connection
        operationId: getAccessOvpnfileVpnIdTCP
        parameters:
          - $ref: '#/components/parameters/VpnId'
        responses:
          '200':
            $ref: '#/components/responses/AccessOvpnfileVpnId0Response'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Download TCP VPN config
        tags:
          - Connection
    /arena/own:
      post:
        description: Submit Seasonal Flag - MUST USE THIS TO GET POINTS FOR SEASON
        operationId: postArenaOwn
        requestBody:
          $ref: '#/components/requestBodies/MultiOwnRequest'
        responses:
          '200':
            $ref: '#/components/responses/MultiOwnResponse'
          '400':
            $ref: '#/components/responses/MultiOwn400'
        summary: 'IMPORTANT: MUST USE FOR ACTIVE SEASON POINTS'
        tags:
          - Season
    /badges:
      get:
        description: Returns a list of all available and obtained badges
        operationId: getBadges
        responses:
          '200':
            $ref: '#/components/responses/BadgesResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: List all platform badges
        tags:
          - Badges
    /bg/event/current:
      get:
        description: Retrieve the current event details for a battleground.
        operationId: getBgEventCurrent
        responses:
          '200':
            $ref: '#/components/responses/BgEventCurrentResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: List battleground current event detail
        tags:
          - Battlegrounds
    /bg/flag/own:
      post:
        description: Submit flag
        operationId: postBgFlagOwn
        requestBody:
          $ref: '#/components/requestBodies/BattlegroundOwnRequest'
        responses:
          '200':
            $ref: '#/components/responses/BgFlagOwnResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Submit flag
        tags:
          - Battlegrounds
    /bg/get/{bgUserId}:
      get:
        description: Retrieve battleground information for a specific user.
        operationId: getBgGet
        parameters:
          - $ref: '#/components/parameters/BgUserId'
        responses:
          '200':
            $ref: '#/components/responses/BgCurrentBgUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: BG Get BG User Id
        tags:
          - Battlegrounds
    /bg/history/{bgUserId}:
      get:
        description: Retrieve the battleground history for a specific user.
        operationId: getBgHistory
        parameters:
          - $ref: '#/components/parameters/BgUserId'
        responses:
          '200':
            $ref: '#/components/responses/BgHistoryCurrentBgUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: BG History by BG User Id
        tags:
          - Battlegrounds
    /bg/loading/status/{bgUserId}:
      get:
        description: Retrieve loading status for a specific battleground user.
        operationId: getBgLoadingStatus
        parameters:
          - $ref: '#/components/parameters/BgUserId'
        responses:
          '200':
            $ref: '#/components/responses/BgLoadingStatusCurrentBgUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: BG Loading Status by BG User Id
        tags:
          - Battlegrounds
    /bg/lobby/messages/1:
      get:
        description: Returns the main lobby messages
        operationId: getBgLobbyMessages
        responses:
          '200':
            $ref: '#/components/responses/BgLobbyMessages1Response'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Main lobby messages
        tags:
          - Battlegrounds
    /bg/machine/assignments/{bgUserId}:
      get:
        description: Retrieve machine assignments for a specific battleground user.
        operationId: getBgMachineAssignments
        parameters:
          - $ref: '#/components/parameters/BgUserId'
        responses:
          '200':
            $ref: '#/components/responses/BgMachineAssignmentsCurrentBgUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: BG Machine Assignements by BG User Id
        tags:
          - Battlegrounds
    /bg/match/accept:
      post:
        description: Accept a match in the battleground.
        operationId: postBgMatchAccept
        responses:
          '200':
            $ref: '#/components/responses/BgMatchAcceptResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: BG Match Accept
        tags:
          - Battlegrounds
    /bg/match/find:
      post:
        description: Sends request to be placed in queue to find a match
        operationId: postBgMatchFind
        requestBody:
          $ref: '#/components/requestBodies/BattlegroundFindRequest'
        responses:
          '200':
            $ref: '#/components/responses/GenericSuccess2xx'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Join BG match queue
        tags:
          - Battlegrounds
    /bg/match/history/ad:
      get:
        description: Battleground Match History AD
        operationId: getBgMatchHistoryAD
        responses:
          '200':
            $ref: '#/components/responses/BgMatchHistoryAdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Battleground Match History AD
        tags:
          - Battlegrounds
    /bg/match/history/koh:
      get:
        description: Battleground Match History KOH
        operationId: getBgMatchHistoryKoh
        responses:
          '200':
            $ref: '#/components/responses/BgMatchHistoryKohResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Battleground Match History KOH
        tags:
          - Battlegrounds
    /bg/match/penalty:
      get:
        description: Returns the number of penalties a user has received
        operationId: getBgMatchPenalty
        responses:
          '200':
            $ref: '#/components/responses/BgMatchPenaltyResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Match penalty count
        tags:
          - Battlegrounds
    /bg/messages/{bgUserId}:
      get:
        description: Retrieve messages for a specific battleground user.
        operationId: getBgMessages
        parameters:
          - $ref: '#/components/parameters/BgUserId'
        responses:
          '200':
            $ref: '#/components/responses/BgMessagesCurrentBgUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get battleground messages for specific user
        tags:
          - Battlegrounds
    /bg/open-times:
      get:
        description: Retrieve open times for the battleground.
        operationId: getBgOpenTimes
        responses:
          '200':
            $ref: '#/components/responses/BgOpenTimesResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get battleground available time slots
        tags:
          - Battlegrounds
    /bg/player/count/ad:
      get:
        description: Retrieve player count for AD battleground.
        operationId: getBgPlayerCountAD
        responses:
          '200':
            $ref: '#/components/responses/BgPlayerCountResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Summary for get /bg/player/count/ad
        tags:
          - Battlegrounds
    /bg/player/count/koh:
      get:
        description: Retrieve player count for KOH battleground.
        operationId: getBgPlayerCountKOH
        responses:
          '200':
            $ref: '#/components/responses/BgPlayerCountResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Summary for get /bg/player/count/koh
        tags:
          - Battlegrounds
    /bg/player/queue/count:
      get:
        description: Retrieve the queue count of players in the battleground.
        operationId: getBgPlayerQueueCount
        responses:
          '200':
            $ref: '#/components/responses/BgPlayerQueueCountResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Summary for get /bg/player/queue/count
        tags:
          - Battlegrounds
    /bg/scores/{bgUserId}:
      get:
        description: Battleground Scores
        operationId: getBgScores
        parameters:
          - $ref: '#/components/parameters/BgUserId'
        responses:
          '200':
            $ref: '#/components/responses/BgScoresResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Battleground Scores
        tags:
          - Battlegrounds
    /bg/teams/get/{bgUserId}:
      get:
        description: Retrieve team information for a specific battleground user.
        operationId: getBgTeamsGet
        parameters:
          - $ref: '#/components/parameters/BgUserId'
        responses:
          '200':
            $ref: '#/components/responses/BgTeamsCurrentBgUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: BG Teams Get by BG User Id
        tags:
          - Battlegrounds
    /bg/tournament/rankings/per/rank/{tournamentId}:
      get:
        description: Tournament Rankings Per Rank
        operationId: getBgTournamentRankingsPerRank
        parameters:
          - $ref: '#/components/parameters/TournamentId'
        responses:
          '200':
            $ref: '#/components/responses/BgTournamentRankingsPerRankResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Tournament Rankings Per Rank
        tags:
          - Battlegrounds
    /bg/tournament/rankings/{tournamentId}:
      get:
        description: Tournament Ranking
        operationId: getBgTournamentRankings
        parameters:
          - $ref: '#/components/parameters/TournamentId'
        responses:
          '200':
            $ref: '#/components/responses/BgTournamentRankingsBattlegroundIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Tournament Ranking
        tags:
          - Battlegrounds
    /bg/user/friends:
      get:
        description: User Friends
        operationId: getBgUserFriends
        responses:
          '200':
            $ref: '#/components/responses/BgUserFriendsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: User Friends
        tags:
          - Battlegrounds
    /bg/user/get/{battlegroundId}:
      get:
        description: Returns the users bg user id for a specific battleground.
        operationId: getBgUserGet
        parameters:
          - $ref: '#/components/parameters/BattlegroundId'
        responses:
          '200':
            $ref: '#/components/responses/BgUserBattlegroundIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Returns current_bg_user_id
        tags:
          - Battlegrounds
    /bg/user/info:
      get:
        description: Retrieve information about the battleground user.
        operationId: getBgUserInfo
        responses:
          '200':
            $ref: '#/components/responses/BgUserInfoResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Contains current_bg_user_id
        tags:
          - Battlegrounds
    /bg/user/joining/info:
      get:
        description: Retrieve joining information for a battleground user.
        operationId: getBgUserJoiningInfo
        responses:
          '200':
            $ref: '#/components/responses/BgUserJoiningInfoResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: User Joining Info
        tags:
          - Battlegrounds
    /bg/user/key/{bgUserId}:
      get:
        description: Returns ovpn in base64
        operationId: getBgUserKey
        parameters:
          - $ref: '#/components/parameters/BgUserId'
        responses:
          '200':
            $ref: '#/components/responses/BgUserKeyCurrentBgUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Battleground VPN
        tags:
          - Battlegrounds
    /career/companies:
      get:
        description: Get /career/companies
        operationId: getCareerCompanies
        responses:
          '200':
            $ref: '#/components/responses/CareerCompaniesResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get list of companies
        tags:
          - Career
    /career/company/{companyId}:
      get:
        description: Get company detail
        operationId: getCareerCompany
        parameters:
          - $ref: '#/components/parameters/Page'
          - $ref: '#/components/parameters/CompanyId'
        responses:
          '200':
            $ref: '#/components/responses/CareerCompanyResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Company Detail
        tags:
          - Career
    /career/featured:
      get:
        description: Returns a list of featured jobs
        operationId: getCareerFeatured
        responses:
          '200':
            $ref: '#/components/responses/CareerFeaturedResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Featured jobs
        tags:
          - Career
    /career/history:
      get:
        description: Returns a list of all jobs that the user has applied for
        operationId: getCareerHistory
        responses:
          '200':
            $ref: '#/components/responses/CareerHistoryResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: History of applied jobs
        tags:
          - Career
    /career/info/{jobId}:
      get:
        description: Get career info
        operationId: getCareerInfo
        parameters:
          - in: path
            name: jobId
            required: true
            schema:
              type: string
        responses:
          '200':
            $ref: '#/components/responses/CareerInfoResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Job Description
        tags:
          - Career
    /career/profile:
      get:
        description: Returns a list of profile information related to the user's career settings
        operationId: getCareerProfile
        responses:
          '200':
            $ref: '#/components/responses/CareerProfileResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Career profile
        tags:
          - Career
    /career/requests:
      get:
        description: Get /career/requests
        operationId: getCareerRequests
        parameters:
          - $ref: '#/components/parameters/Page'
        responses:
          '200':
            $ref: '#/components/responses/CareerRequestsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Career Requests
        tags:
          - Career
    /career/search:
      get:
        description: Returns a list of all jobs that match the search query
        operationId: getCareerSearch
        parameters:
          - $ref: '#/components/parameters/SearchQuery'
        responses:
          '200':
            $ref: '#/components/responses/CareerSearchResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Search posted jobs
        tags:
          - Career
    /career/stats:
      get:
        description: Returns a number of new jobs posted today and the total number of jobs posted on the platform
        operationId: getCareerStats
        responses:
          '200':
            $ref: '#/components/responses/CareerStatsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Stats
        tags:
          - Career
    /career/temporary/contact/optin:
      post:
        description: This is the toggle in the career page to allow companies to reach out to you
        operationId: postCareerTemporaryContactOptin
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  opt_in:
                    type: boolean
                type: object
        responses:
          '204':
            description: No Content
            headers:
              x-ratelimit-limit:
                $ref: '#/components/headers/XRateLimitHeader'
              x-ratelimit-remaining:
                $ref: '#/components/headers/XRateLimitRemainingHeader'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Optin to Career Contacting
        tags:
          - Career
    /challenge/activity/{challengeId}:
      get:
        description: Provides a list of users that have completed the challenge
        operationId: getChallengeActivity
        parameters:
          - $ref: '#/components/parameters/ChallengeId'
        responses:
          '200':
            $ref: '#/components/responses/ChallengeActivityResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: List of owns related to a specific challenge
        tags:
          - Challenges
    /challenge/categories/list:
      get:
        description: Provides a list of challenge catatories
        operationId: getChallengeCategoriesList
        responses:
          '200':
            $ref: '#/components/responses/ChallengeCategoriesListResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: List categories
        tags:
          - Challenges
    /challenge/changelog/{challengeId}:
      get:
        description: Provides change details to a challenge
        operationId: getChallengeChangelog
        parameters:
          - $ref: '#/components/parameters/ChallengeId'
        responses:
          '200':
            $ref: '#/components/responses/ChallengeChangelogChallengeIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Changelog for a specific challenge
        tags:
          - Challenges
    /challenge/download/{challengeId}:
      get:
        description: Returns a zip file
        operationId: getChallengeDownload
        responses:
          '200':
            $ref: '#/components/responses/ChallengeDownloadChallengeIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Download zip file related to a specific challenge
        tags:
          - Challenges
        parameters:
          - $ref: '#/components/parameters/ChallengeId'
    /challenge/info/{challengeId}:
      get:
        description: Provides a list of the challege details
        operationId: getChallengeInfo
        responses:
          '200':
            $ref: '#/components/responses/ChallengeInfoChallengeIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Info details of the specific challenge
        tags:
          - Challenges
        parameters:
          - $ref: '#/components/parameters/ChallengeId'
    /challenge/own:
      post:
        description: Submit flag for a challenge.
        operationId: postChallengeOwn
        requestBody:
          $ref: '#/components/requestBodies/ChallengeOwnRequest'
        responses:
          '200':
            $ref: '#/components/responses/ChallengeOwnResponse'
          '403':
            $ref: '#/components/responses/ChallengeOwn403'
        summary: Submit flag for challenge
        tags:
          - Challenges
    /challenge/recommended:
      get:
        description: Provides information about a unreleased challenge along with a challenge that is about to retire
        operationId: getChallengeRecommended
        responses:
          '200':
            $ref: '#/components/responses/ChallengeRecommendedResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Challenge Recommendation Cards
        tags:
          - Challenges
    /challenge/recommended/retired:
      get:
        description: Provides information about two retired challenges
        operationId: getChallengeRecommendedRetired
        responses:
          '200':
            $ref: '#/components/responses/ChallengeRecommendedRetiredResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Challenge Recommendation Cards (Retired)
        tags:
          - Challenges
    /challenge/review:
      post:
        description: Submits data for /challenge/review
        operationId: postChallengeReview
        requestBody:
          $ref: '#/components/requestBodies/ChallengeReviewRequest'
        responses:
          '200':
            $ref: '#/components/responses/GenericSuccess2xx'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Submit challenge review
        tags:
          - Challenges
    /challenge/review/helpful/{reviewId}:
      post:
        description: Submits data for /challenge/review/helpful/{review id}
        operationId: postChallengeHelpfull
        parameters:
          - $ref: '#/components/parameters/ReviewId'
        responses:
          '200':
            $ref: '#/components/responses/GenericSuccess2xx'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Mark Review as helpful
        tags:
          - Challenges
    /challenge/reviews/user/{challengeId}:
      get:
        description: Retrieves information related to /challenge/reviews/user/{challenge id}
        operationId: getChallengeReviewsUser
        responses:
          '200':
            $ref: '#/components/responses/ChallengeReviewsUserChallengeIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Bearer's review for challenge
        tags:
          - Challenges
        parameters:
          - $ref: '#/components/parameters/ChallengeId'
    /challenge/start:
      post:
        description: Starts a challenge container with challenge_id
        operationId: postChallengeStart
        requestBody:
          $ref: '#/components/requestBodies/ChallengeStartStopRequest'
        responses:
          '200':
            $ref: '#/components/responses/ChallengeStartResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Starts a challenge
        tags:
          - Challenges
    /challenge/stop:
      post:
        description: Stops a challenge container with challenge_id
        operationId: postChallengeStop
        requestBody:
          $ref: '#/components/requestBodies/ChallengeStartStopRequest'
        responses:
          '200':
            $ref: '#/components/responses/ChallengeStopResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Stops a challenge
        tags:
          - Challenges
    /challenge/suggested:
      get:
        description: Retrieves information related to /challenge/suggested
        operationId: getChallengeSuggested
        responses:
          '200':
            $ref: '#/components/responses/ChallengeSuggestedResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: challenge Suggestion
        tags:
          - Challenges
    /challenge/todo/update/{challengeId}:
      post:
        description: Mark or unmark challenge as ToDo
        operationId: postChallengeTodoUpdate
        parameters:
          - $ref: '#/components/parameters/ChallengeId'
        responses:
          '200':
            $ref: '#/components/responses/TodoResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Mark Challenge as ToDo
        tags:
          - Challenges
    /challenge/{challengeId}/writeup:
      get:
        description: Gets a write-up for a challenge from challenge id
        operationId: getChallengeWriteup
        parameters:
          - $ref: '#/components/parameters/ChallengeId'
        responses:
          '200':
            $ref: '#/components/responses/ChallengeWriteupResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get a write-up for a challenge
        tags:
          - Challenges
    /challenge/{challengeId}/writeup/official:
      get:
        description: Get Official Writeup
        operationId: getChallengeWriteupOfficial
        responses:
          '200':
            $ref: '#/components/responses/GenericPDFResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Official PDF Writeup
        tags:
          - Challenges
        parameters:
          - $ref: '#/components/parameters/ChallengeId'
    /challenges:
      get:
        description: Porivdes a list of challenges with limited challenge info
        operationId: getChallenges
        parameters:
          - $ref: '#/components/parameters/PerPage'
          - $ref: '#/components/parameters/Status'
          - $ref: '#/components/parameters/State'
          - $ref: '#/components/parameters/SortBy'
          - $ref: '#/components/parameters/SortType'
          - $ref: '#/components/parameters/Difficulty'
          - $ref: '#/components/parameters/CategoryChallenge'
          - $ref: '#/components/parameters/Todo'
        responses:
          '200':
            $ref: '#/components/responses/ChallengeListResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get list of challenges
        tags:
          - Challenges
    /changelogs:
      get:
        description: Possibly depreciated, no updates since 2021
        operationId: getChangelogs
        responses:
          '200':
            $ref: '#/components/responses/ChangelogsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Dashboard: Interface changelog'
        tags:
          - Platform
    /connection/status:
      get:
        description: Retrieve the connection status.
        operationId: getConnectionStatus
        responses:
          '200':
            $ref: '#/components/responses/ConnectionStatusResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Current Active Connections
        tags:
          - Connection
    /connection/status/{productName}:
      get:
        description: Get VPN Server status
        operationId: getConnectionStatusProduct
        parameters:
          - description: Product type, ie lab, starting_point, endgames, fortresses
            in: path
            name: productName
            required: true
            schema:
              type: string
        responses:
          '200':
            $ref: '#/components/responses/ConnectionStatusProductResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get VPN Server status
        tags:
          - Connection
    /connections:
      get:
        description: Shows a list of the last set vpn servers
        operationId: getConnections
        responses:
          '200':
            $ref: '#/components/responses/ConnectionsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Last set connections
        tags:
          - Connection
    /connections/servers:
      get:
        description: Retrieve a list of connection servers.
        operationId: getConnectionsServers
        parameters:
          - $ref: '#/components/parameters/Product'
        responses:
          '200':
            $ref: '#/components/responses/ConnectionsServersResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: list VPN servers
        tags:
          - Connection
    /connections/servers/prolab/{prolabId}:
      get:
        description: Get Prolab VPN Servers
        operationId: getConnectionsServersProlab
        parameters:
          - $ref: '#/components/parameters/ProlabId'
        responses:
          '200':
            $ref: '#/components/responses/ConnectionsServersProlabResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Prolab VPN Servers
        tags:
          - Connection
    /connections/servers/switch/{vpnId}:
      post:
        description: See `/connections/servers` for valid ids
        operationId: postConnectionsServersSwitch
        parameters:
          - $ref: '#/components/parameters/VpnId'
        responses:
          '200':
            $ref: '#/components/responses/ConnectionsServersSwitchVpnIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Swtich VPN server
        tags:
          - Connection
    /content/stats:
      get:
        description: Retrieves information related to /content/stats
        operationId: getContentStats
        responses:
          '200':
            $ref: '#/components/responses/ContentStatsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Dashboard: machine, challenge Counts'
        tags:
          - Platform
    /endgame/{endgameId}:
      get:
        description: Retrieves information related to /endgame/{endgame id}
        operationId: getEndgame
        parameters:
          - $ref: '#/components/parameters/EndgameId'
        responses:
          '200':
            $ref: '#/components/responses/EndgameEndgameIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Endgames profile
        tags:
          - Endgames
    /endgame/{endgameId}/flag:
      post:
        description: Submit the flag from endgame id
        operationId: postEndgameFlag
        parameters:
          - $ref: '#/components/parameters/EndgameId'
        requestBody:
          $ref: '#/components/requestBodies/MultiOwnRequest'
        responses:
          '200':
            $ref: '#/components/responses/MultiOwnResponse'
          '400':
            $ref: '#/components/responses/MultiOwn400'
        summary: Submit Endgame flag
        tags:
          - Endgames
    /endgame/{endgameId}/flags:
      get:
        description: Retrieves information related to /endgame/{endgame id}/flags
        operationId: getEndgameFlag
        parameters:
          - $ref: '#/components/parameters/EndgameId'
        responses:
          '200':
            $ref: '#/components/responses/EndgameEndgameIdFlagsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Endgames flag list
        tags:
          - Endgames
    /endgame/{endgameId}/machines:
      get:
        description: Retrieves information related to /endgame/{endgame id}/machines
        operationId: getEndgameMachines
        parameters:
          - $ref: '#/components/parameters/EndgameId'
        responses:
          '200':
            $ref: '#/components/responses/EndgameEndgameIdMachinesResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Endgames machine list
        tags:
          - Endgames
    /endgame/{endgameId}/writeup:
      get:
        description: Writeup
        operationId: getEndgameWriteup
        parameters:
          - $ref: '#/components/parameters/EndgameId'
        responses:
          '200':
            $ref: '#/components/responses/EndgameWriteupResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Writeup
        tags:
          - Endgames
    /endgame/{endgameId}/writeup/official:
      get:
        description: Official Writeup
        operationId: getEndgameWriteupOfficial
        responses:
          '200':
            $ref: '#/components/responses/GenericPDFResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Official PDF Writeup
        tags:
          - Endgames
        parameters:
          - $ref: '#/components/parameters/EndgameId'
    /endgames:
      get:
        description: Retrieves information related to /endgames
        operationId: getEndgames
        responses:
          '200':
            $ref: '#/components/responses/EndgamesResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get list of endgames
        tags:
          - Endgames
    /fortress/{fortressId}:
      get:
        description: Retrieves information related to /fortress/{fortress id}
        operationId: getFortress
        parameters:
          - $ref: '#/components/parameters/FortressId'
        responses:
          '200':
            $ref: '#/components/responses/FortressFortressIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get fortress profile
        tags:
          - Fortresses
    /fortress/{fortressId}/flag:
      post:
        description: Submit the flag from fortress id
        operationId: postFortressFlag
        parameters:
          - $ref: '#/components/parameters/FortressId'
        requestBody:
          $ref: '#/components/requestBodies/MultiOwnRequest'
        responses:
          '200':
            $ref: '#/components/responses/MultiOwnResponse'
          '400':
            $ref: '#/components/responses/MultiOwn400'
        summary: Submit flag
        tags:
          - Fortresses
    /fortress/{fortressId}/flags:
      get:
        description: Retrieve flags for a specific fortress.
        operationId: getFortressFlags
        parameters:
          - $ref: '#/components/parameters/FortressId'
        responses:
          '200':
            $ref: '#/components/responses/FortressFortressIdFlagsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get list of flags
        tags:
          - Fortresses
    /fortresses:
      get:
        description: Retrieves information related to /fortresses
        operationId: getFortresses
        responses:
          '200':
            $ref: '#/components/responses/FortressesResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get list of fortresses
        tags:
          - Fortresses
    /home/banners:
      get:
        description: Retrieves information related to /home/banners
        operationId: getHomeBanner
        responses:
          '200':
            $ref: '#/components/responses/HomeBannersResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Home Banner
        tags:
          - Home
    /home/recommended:
      get:
        description: Retrieves information related to /home/recommended
        operationId: getHomeRecommended
        responses:
          '200':
            $ref: '#/components/responses/HomeRecommendedResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Home Recommended
        tags:
          - Home
    /home/user/progress:
      get:
        description: Retrieves information related to /home/user/progress
        operationId: getHomeUserProgress
        responses:
          '200':
            $ref: '#/components/responses/HomeUserProgressResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Home User Progress
        tags:
          - Home
    /home/user/todo:
      get:
        description: Retrieves information related to /home/user/todo
        operationId: getHomeUserTodo
        responses:
          '200':
            $ref: '#/components/responses/HomeUserTodoResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Home User ToDo
        tags:
          - Home
    /invoice/quaderno/{invoiceId}:
      get:
        description: Get invoice
        operationId: getInvoiceQuaderno
        parameters:
          - in: query
            name: auth_user_id
            schema:
              type: string
          - in: query
            name: expires
            schema:
              type: string
          - in: query
            name: signature
            schema:
              type: string
          - in: path
            name: invoiceId
            required: true
            schema:
              type: string
        responses:
          '200':
            $ref: '#/components/responses/GenericPDFResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Invoice PDF
        tags:
          - Platform
    /lab/list:
      get:
        description: Retrieves information related to /lab/list
        operationId: getLabList
        responses:
          '200':
            $ref: '#/components/responses/LabListResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Dashboard: list HTB servers (Connection Points)'
        tags:
          - Platform
    /machine/active:
      get:
        description: Retrieves information related to /machine/active
        operationId: getMachineActive
        responses:
          '200':
            $ref: '#/components/responses/MachineActiveResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get active machine details
        tags:
          - Machines
    /machine/activity/{machineId}:
      get:
        description: Retrieves information related to /machine/activity/{machine id}
        operationId: getMachineActivity
        responses:
          '200':
            $ref: '#/components/responses/MachineActivityMachineIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'machine: Activity'
        tags:
          - Machines
        parameters:
          - $ref: '#/components/parameters/MachineId'
    /machine/changelog/{machineId}:
      get:
        description: Retrieves information related to /machine/changelog/{machine id}
        operationId: getMachineChangelog
        responses:
          '200':
            $ref: '#/components/responses/MachineChangelogMachineIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'machine: changelog'
        tags:
          - Machines
        parameters:
          - $ref: '#/components/parameters/MachineId'
    /machine/graph/activity/{machineId}/{period}:
      get:
        description: Retrieves information related to /machine/graph/activity/{machine id}/{period}
        operationId: getMachineGraphActivity
        parameters:
          - $ref: '#/components/parameters/MachineId'
          - $ref: '#/components/parameters/PeriodPath'
        responses:
          '200':
            $ref: '#/components/responses/MachineGraphActivityMachineIdPeriodResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Graph Data: Activity'
        tags:
          - Machines
    /machine/graph/matrix/{machineId}:
      get:
        description: Retrieves graph matrix
        operationId: getMachineGraphMatrix
        responses:
          '200':
            $ref: '#/components/responses/MachineGraphMatrixMachineIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Machine Graph Matrix
        tags:
          - Machines
        parameters:
          - $ref: '#/components/parameters/MachineId'
    /machine/graph/owns/difficulty/{machineId}:
      get:
        description: Retrieves machine graph difficulty
        operationId: getMachineGraphOwnsDifficulty
        responses:
          '200':
            $ref: '#/components/responses/MachineGraphOwnsDifficultyMachineIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Machine Graph Difficulty
        tags:
          - Machines
        parameters:
          - $ref: '#/components/parameters/MachineId'
    /machine/list/retired/paginated:
      get:
        description: Retrieve a paginated list of retired machines.
        operationId: getMachineListRetiredPaginated
        parameters:
          - $ref: '#/components/parameters/PerPage'
          - $ref: '#/components/parameters/ShowCompleted'
          - $ref: '#/components/parameters/SortBy'
          - $ref: '#/components/parameters/SortType'
          - $ref: '#/components/parameters/Difficulty'
          - $ref: '#/components/parameters/Os'
        responses:
          '200':
            $ref: '#/components/responses/MachinePaginatedResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get paginated list of retired machines
        tags:
          - Machines
    /machine/own:
      post:
        description: Submit flag to mark machine as completed
        operationId: postMachineOwn
        requestBody:
          $ref: '#/components/requestBodies/MachineOwnRequest'
        responses:
          '200':
            $ref: '#/components/responses/MachineOwnResponse'
          '400':
            $ref: '#/components/responses/MachineOwn400'
        summary: Submit machine flag
        tags:
          - Machines
    /machine/owns/top/{machineId}:
      get:
        description: Retrieves information related to /machine/owns/top/{machine id}
        operationId: getMachineOwnsTop
        responses:
          '200':
            $ref: '#/components/responses/MachineOwnsTopMachineIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'machine: Top 25 Owners'
        tags:
          - Machines
        parameters:
          - $ref: '#/components/parameters/MachineId'
    /machine/paginated:
      get:
        description: Retrieve a paginated list of machines.
        operationId: getMachinePaginated
        parameters:
          - $ref: '#/components/parameters/PerPage'
          - $ref: '#/components/parameters/ShowCompleted'
          - $ref: '#/components/parameters/SortBy'
          - $ref: '#/components/parameters/SortType'
          - $ref: '#/components/parameters/Difficulty'
          - $ref: '#/components/parameters/Os'
        responses:
          '200':
            $ref: '#/components/responses/MachinePaginatedResponse'
          '400':
            $ref: '#/components/responses/GenericError'
          '422':
            $ref: '#/components/responses/GenericError'
        summary: Get paginated list of active machines
        tags:
          - Machines
    /machine/play/{machineId}:
      post:
        description: Start playing a specific machine.
        operationId: postMachinePlay
        parameters:
          - $ref: '#/components/parameters/MachineId'
        responses:
          '200':
            $ref: '#/components/responses/MachinePlayMachineIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Spawn a machine
        tags:
          - Machines
    /machine/profile/{machineId}:
      get:
        description: Retrieves information related to /machine/profile/{machine id}
        operationId: getMachineProfile
        parameters:
          - $ref: '#/components/parameters/MachineId'
        responses:
          '200':
            $ref: '#/components/responses/MachineProfileMachineIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get machine profile by ID
        tags:
          - Machines
    /machine/recommended:
      get:
        description: Retrieves information related to /machine/recommended
        operationId: getMachineRecommended
        responses:
          '200':
            $ref: '#/components/responses/MachineRecommendedResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get recommended machines
        tags:
          - Machines
    /machine/recommended/retired:
      get:
        description: Retrieves information related to /machine/recommended/retired
        operationId: getMachineRecommendedRetired
        responses:
          '200':
            $ref: '#/components/responses/MachineRecommendedRetiredResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: machine Recommendation Card (Retired)
        tags:
          - Machines
    /machine/review:
      post:
        description: Submit a review for a machine.
        operationId: postMachineReview
        requestBody:
          $ref: '#/components/requestBodies/MachineReviewRequest'
        responses:
          '200':
            $ref: '#/components/responses/MachineReviewResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: review a machine
        tags:
          - Machines
    /machine/reviews/user/{machineId}:
      get:
        description: Retrieves information related to /machine/reviews/user/{machine id}
        operationId: getMachineReviewsUser
        responses:
          '200':
            $ref: '#/components/responses/MachineReviewsUserMachineIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Bearer's review for machine
        tags:
          - Machines
        parameters:
          - $ref: '#/components/parameters/MachineId'
    /machine/stop:
      post:
        description: Stop a specific machine.
        operationId: postMachineStop
        responses:
          '200':
            $ref: '#/components/responses/MachineStopResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Stop a machine
        tags:
          - Machines
    /machine/tags/list:
      get:
        description: Retrieve a list of machine tags.
        operationId: getMachineTagsList
        responses:
          '200':
            $ref: '#/components/responses/MachineTagsListResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get machine tags list
        tags:
          - Machines
    /machine/tags/{machineId}:
      get:
        description: Retrieves information related to /machine/tags/{machine id}
        operationId: getMachineTags
        responses:
          '200':
            $ref: '#/components/responses/MachineTagsMachineIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'machine: tags (Attack Path, Sub, Language)'
        tags:
          - Machines
        parameters:
          - $ref: '#/components/parameters/MachineId'
    /machine/todo/paginated:
      get:
        description: Get /machine/todo/paginated
        operationId: getMachineTodoPaginated
        parameters:
          - $ref: '#/components/parameters/SortType'
          - $ref: '#/components/parameters/Keyword'
          - $ref: '#/components/parameters/Difficulty'
          - $ref: '#/components/parameters/Os'
        responses:
          '200':
            $ref: '#/components/responses/MachinePaginatedResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Machine Todo List
        tags:
          - Machines
    /machine/todo/update/{machineId}:
      post:
        description: Adding and removing to/from ToDo list is the same request.
        operationId: postMachineTodoUpdate
        parameters:
          - $ref: '#/components/parameters/MachineId'
        responses:
          '200':
            $ref: '#/components/responses/TodoResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Add or remove machine to/from the ToDo list
        tags:
          - Machines
    /machine/unreleased:
      get:
        description: Retrieves information related to /machine/unreleased
        operationId: getMachineUnreleased
        responses:
          '200':
            $ref: '#/components/responses/MachineUnreleasedResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: list Release-Scheduled machines
        tags:
          - Machines
    /machine/walkthrough/random:
      get:
        description: Get Rnadom Walkthrough
        operationId: getMachineWalkthroughRandom
        responses:
          '200':
            $ref: '#/components/responses/MachineWalkthroughRandomResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Random Walkthrough
        tags:
          - Machines
    /machine/walkthroughs/language/list:
      get:
        description: Retrieves information related to /machine/walkthroughs/language/list
        operationId: getMachineWalkthroughsLanguageList
        responses:
          '200':
            $ref: '#/components/responses/MachineWalkthroughsLanguageListResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'machine: list Walkthrough Language options'
        tags:
          - Machines
    /machine/walkthroughs/{machineId}:
      get:
        description: Retrieves information related to /machine/walkthroughs/{machine id}
        operationId: getMachineWalkthroughs
        responses:
          '200':
            $ref: '#/components/responses/MachineWalkthroughsMachineIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'machine: list Walkthroughs'
        tags:
          - Machines
        parameters:
          - $ref: '#/components/parameters/MachineId'
    /machine/writeup/{machineId}:
      get:
        description: _response is of a pdf file
        operationId: getMachineWriteup
        responses:
          '200':
            $ref: '#/components/responses/MachineWriteupMachineIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'machine: Get Official Writeup (if Available) by machine ID'
        tags:
          - Machines
        parameters:
          - $ref: '#/components/parameters/MachineId'
    /machines/{machineId}/adventure:
      get:
        description: Get Machine Adventure
        operationId: getMachineAdventure
        parameters:
          - $ref: '#/components/parameters/MachineId'
        responses:
          '200':
            $ref: '#/components/responses/MachinesAdventureResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Machine Adventure
        tags:
          - Machines
    /machines/{machineId}/tasks:
      get:
        description: Get Machine Tasks
        operationId: getMachineTasks
        parameters:
          - $ref: '#/components/parameters/MachineId'
        responses:
          '200':
            $ref: '#/components/responses/MachineTasksResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Machine Tasks
        tags:
          - Machines
    /navigation/main:
      get:
        description: Retrieve main navigation details.
        operationId: getNavigationMain
        responses:
          '200':
            $ref: '#/components/responses/NavigationMainResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get platform navigation details
        tags:
          - Platform
    /notices:
      get:
        description: Retrieve notices.
        operationId: getNotices
        responses:
          '200':
            $ref: '#/components/responses/NoticesResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get platform notices
        tags:
          - Platform
    /prolab/certificates:
      get:
        description: Get /prolab/certificates
        operationId: getProlabCertificates
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      items:
                        type: object
                      type: array
                    status:
                      type: boolean
                  type: object
            description: OK
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Certificates
        tags:
          - Prolabs
    /prolab/{prolabId}/changelogs:
      get:
        description: Get Prolab Changelog
        operationId: getProlabChangelogs
        parameters:
          - $ref: '#/components/parameters/ProlabId'
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      items:
                        type: object
                      type: array
                    status:
                      type: boolean
                  type: object
            description: OK
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Changelogs
        tags:
          - Prolabs
    /prolab/{prolabId}/faq:
      get:
        description: Retrieves information related to /prolab/{prolab id}/faq
        operationId: getProlabFaq
        parameters:
          - $ref: '#/components/parameters/ProlabId'
        responses:
          '200':
            $ref: '#/components/responses/ProlabfaqResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Pro Lab FAQ
        tags:
          - Prolabs
    /prolab/{prolabId}/flag:
      post:
        description: Submit the flag from Pro Lab id
        operationId: postProlabFlag
        parameters:
          - $ref: '#/components/parameters/ProlabId'
        requestBody:
          $ref: '#/components/requestBodies/MultiOwnRequest'
        responses:
          '200':
            $ref: '#/components/responses/MultiOwnResponse'
          '400':
            $ref: '#/components/responses/MultiOwn400'
        summary: Submit Problam flag
        tags:
          - Prolabs
    /prolab/{prolabId}/flags:
      get:
        description: Retrieves information related to /prolab/{prolab id}/flags
        operationId: getProlabFlags
        parameters:
          - $ref: '#/components/parameters/ProlabId'
        responses:
          '200':
            $ref: '#/components/responses/ProlabflagsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Pro Lab flag list
        tags:
          - Prolabs
    /prolab/{prolabId}/info:
      get:
        description: Retrieves information related to /prolab/{prolab id}/info
        operationId: getProlabInfo
        parameters:
          - $ref: '#/components/parameters/ProlabId'
        responses:
          '200':
            $ref: '#/components/responses/ProlabinfoResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Pro Lab Info
        tags:
          - Prolabs
    /prolab/{prolabId}/machines:
      get:
        description: Retrieves information related to /prolab/{prolab id}/machines
        operationId: getProlabMachines
        parameters:
          - $ref: '#/components/parameters/ProlabId'
        responses:
          '200':
            $ref: '#/components/responses/ProlabmachinesResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Pro Lab machine list
        tags:
          - Prolabs
    /prolab/{prolabId}/overview:
      get:
        description: Retrieves information related to /prolab/{prolab id}/overview
        operationId: getProlabOverview
        parameters:
          - $ref: '#/components/parameters/ProlabId'
        responses:
          '200':
            $ref: '#/components/responses/ProlaboverviewResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Pro Lab Overview
        tags:
          - Prolabs
    /prolab/{prolabId}/progress:
      get:
        description: Get Prolab Progress
        operationId: getProlabProgress
        responses:
          '200':
            $ref: '#/components/responses/ProlabProgressResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Prolab Progress
        tags:
          - Prolabs
        parameters:
          - $ref: '#/components/parameters/ProlabId'
    /prolab/{prolabId}/rating:
      get:
        description: Get /prolab/{prolabId}/rating
        operationId: getProlabRating
        parameters:
          - $ref: '#/components/parameters/ProlabId'
        responses:
          '200':
            $ref: '#/components/responses/ProlabRatingResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Prolab Rating
        tags:
          - Prolabs
    /prolab/{prolabId}/reset:
      get:
        description: Reset Prolab
        operationId: getProlabReset
        responses:
          '400':
            content:
              application/json:
                schema:
                  properties:
                    message:
                      type: string
                    status:
                      type: boolean
                  type: object
            description: Bad Request
        summary: Unable to test Problab Reset
        tags:
          - Prolabs
        parameters:
          - $ref: '#/components/parameters/ProlabId'
    /prolab/{prolabId}/reviews:
      get:
        description: Retrieves information related to /prolab/{prolab id}/reviews
        operationId: getProlabReviews
        responses:
          '200':
            $ref: '#/components/responses/ProlabreviewsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Pro Lab reviews (Paginated)
        tags:
          - Prolabs
        parameters:
          - $ref: '#/components/parameters/ProlabId'
          - description: Page number
            in: query
            name: page
            required: false
            schema:
              type: integer
    /prolab/{prolabId}/reviews_overview:
      get:
        description: Retrieves information related to /prolab/{prolab id}/reviews overview
        operationId: getProlabReviewsOverview
        parameters:
          - $ref: '#/components/parameters/ProlabId'
        responses:
          '200':
            $ref: '#/components/responses/ProlabreviewsOverviewResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Pro Lab reviews Overview
        tags:
          - Prolabs
    /prolab/{prolabId}/subscription:
      get:
        description: Get Prolab Subscription
        operationId: getProlabSubscription
        parameters:
          - $ref: '#/components/parameters/ProlabId'
        responses:
          '200':
            $ref: '#/components/responses/ProlabSubscriptionResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Subscription
        tags:
          - Prolabs
    /prolabs:
      get:
        description: Retrieves information related to /prolabs
        operationId: getProlabs
        responses:
          '200':
            $ref: '#/components/responses/ProlabsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get list of Pro Labs
        tags:
          - Prolabs
    /pwnbox/start:
      post:
        description: Start a Pwnbox instance.
        operationId: postPwnboxStart
        requestBody:
          $ref: '#/components/requestBodies/PwnboxStartRequest'
        responses:
          '200':
            $ref: '#/components/responses/PwnboxStartResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Start a Pwnbox instance
        tags:
          - PwnBox
    /pwnbox/status:
      get:
        description: Retrieve the status of a Pwnbox instance.
        operationId: getPwnboxStatus
        responses:
          '200':
            $ref: '#/components/responses/PwnboxStatusResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get status of a Pwnbox instance.
        tags:
          - PwnBox
    /pwnbox/terminate:
      post:
        description: Terminate a Pwnbox instance.
        operationId: postPwnboxTerminate
        responses:
          '204':
            $ref: '#/components/responses/PwnboxTerminate204'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Stop Pwnbox
        tags:
          - PwnBox
    /pwnbox/usage:
      get:
        description: Retrieve usage statistics for Pwnbox.
        operationId: getPwnboxUsage
        responses:
          '200':
            $ref: '#/components/responses/PwnboxUsageResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get usage statistics for Pwnbox
        tags:
          - PwnBox
    /rankings:
      get:
        description: Get /rankings
        operationId: getRankings
        responses:
          '200':
            $ref: '#/components/responses/RankingsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Rankings
        tags:
          - Ranking
    /rankings/countries:
      get:
        description: Retrieves information related to /rankings/countries
        operationId: getRankingsCountries
        responses:
          '200':
            $ref: '#/components/responses/RankingsCountriesResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Countries
        tags:
          - Ranking
    /rankings/country/best:
      get:
        description: Retrieves information related to /rankings/country/best
        operationId: getRankingsCountryBest
        responses:
          '200':
            $ref: '#/components/responses/RankingsCountryBestResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Country:  (Bearer''s) - Best for Period'
        tags:
          - Ranking
        parameters:
          - $ref: '#/components/parameters/PeriodQuery'
    /rankings/country/overview:
      get:
        description: Retrieves information related to /rankings/country/overview
        operationId: getRankingsCountryOverview
        responses:
          '200':
            $ref: '#/components/responses/RankingsCountryOverviewResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Country: (Bearer''s) - Overview'
        tags:
          - Ranking
        parameters:
          - $ref: '#/components/parameters/PeriodQuery'
    /rankings/country/ranking_bracket:
      get:
        description: Retrieves information related to /rankings/country/ranking bracket
        operationId: getRankingsCountryRankingBracket
        responses:
          '200':
            $ref: '#/components/responses/RankingsCountryRankingBracketResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Country: (Bearer''s) - Ranking Bracket'
        tags:
          - Ranking
    /rankings/country/{countryShortName}/members:
      get:
        description: Get Rankings Country Members
        operationId: getRankingsCountryUSMembers
        parameters:
          - description: Two letter short name for country, ie US, DE
            in: path
            name: countryShortName
            required: true
            schema:
              type: string
        responses:
          '200':
            $ref: '#/components/responses/RankingsCountryMembersResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Rankings Country Members
        tags:
          - Ranking
    /rankings/team/best:
      get:
        description: lists the best global rank achieved, in set intervals for a given period (e.g. 1Y, 6M, 3M, 1M, 1W). Omiting team_id will retrieve Bearers current team. (variation 1)
        operationId: getRankingsTeamBest
        parameters:
          - $ref: '#/components/parameters/PeriodQuery'
        responses:
          '200':
            $ref: '#/components/responses/RankingsTeamBestResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Global Rank History for Bearer's team
        tags:
          - Ranking
    /rankings/team/best/{teamId}:
      get:
        description: lists the best global rank achieved, in set intervals for a given period (e.g. 1Y, 6M, 3M, 1M, 1W). Omiting team_id will retrieve Bearers current team. (variation 2)
        operationId: getRankingsTeamBestId
        parameters:
          - $ref: '#/components/parameters/PeriodQuery'
          - description: ID of the team
            in: path
            name: teamId
            required: true
            schema:
              type: integer
        responses:
          '200':
            $ref: '#/components/responses/RankingsTeamBestResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Global Rank History by Team Id
        tags:
          - Ranking
    /rankings/team/overview:
      get:
        description: lists the best global rank, in set intervals for a given period (e.g. 1Y, 6M, 3M, 1M, 1W). Omit team_id for Bearers team. (variation 1)
        operationId: getRankingsTeamOverview
        parameters:
          - $ref: '#/components/parameters/PeriodQuery'
        responses:
          '200':
            $ref: '#/components/responses/RankingsTeamOverviewResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Global Points History for Bearer's team
        tags:
          - Ranking
    /rankings/team/overview/{teamId}:
      get:
        description: lists the best global rank, in set intervals for a given period (e.g. 1Y, 6M, 3M, 1M, 1W). Omit team_id for Bearers team. (variation 2)
        operationId: getRankingsTeamOverviewId
        parameters:
          - $ref: '#/components/parameters/PeriodQuery'
          - description: ID of the team
            in: path
            name: teamId
            required: true
            schema:
              type: integer
        responses:
          '200':
            $ref: '#/components/responses/RankingsTeamOverviewResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Global Points History by Team Id
        tags:
          - Ranking
    /rankings/team/ranking_bracket:
      get:
        description: lists the current team ranking bracket (e.g. "Top 20"), next ranking bracket, total points, points to achieve next bracket, and global rank. Omiting team_id will retrieve Bearers current team. (variation 1)
        operationId: getRankingsTeamRankingBracket
        responses:
          '200':
            $ref: '#/components/responses/RankingsTeamRankingBracketResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Team Ranking Bracket
        tags:
          - Ranking
    /rankings/team/ranking_bracket/{teamId}:
      get:
        description: lists the current team ranking bracket (e.g. "Top 20"), next ranking bracket, total points, points to achieve next bracket, and global rank. Omiting team_id will retrieve Bearers current team. (variation 2)
        operationId: getRankingsTeamRankingBracketId
        parameters:
          - description: ID of the team
            in: path
            name: teamId
            required: true
            schema:
              type: integer
        responses:
          '200':
            $ref: '#/components/responses/RankingsTeamRankingBracketResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Team Ranking Bracket by Team Id
        tags:
          - Ranking
    /rankings/teams:
      get:
        description: lists the highest-ranked teams on HTB.
        operationId: getRankingsTeams
        parameters: []
        responses:
          '200':
            $ref: '#/components/responses/RankingsTeamsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: list Top-Ranked Teams
        tags:
          - Ranking
    /rankings/universities:
      get:
        description: Retrieves information related to /rankings/universities
        operationId: getRankingsUniversities
        responses:
          '200':
            $ref: '#/components/responses/RankingsUniversitiesResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Universities
        tags:
          - Ranking
    /rankings/university/best:
      get:
        description: Retrieves information related to /rankings/university/best
        operationId: getRankingsUniversityBest
        responses:
          '200':
            $ref: '#/components/responses/RankingsUniversityBestResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'University:  (Bearer''s) - Best for Period'
        tags:
          - Ranking
        parameters:
          - $ref: '#/components/parameters/PeriodQuery'
    /rankings/university/overview:
      get:
        description: Retrieves information related to /rankings/university/overview
        operationId: getRankingsUniversityOverview
        responses:
          '200':
            $ref: '#/components/responses/RankingsUniversityOverviewResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'University: (Bearer''s) - Overview'
        tags:
          - Ranking
        parameters:
          - $ref: '#/components/parameters/PeriodQuery'
    /rankings/university/ranking_bracket:
      get:
        description: Retrieves information related to /rankings/university/ranking bracket
        operationId: getRankingsUniversityRankingBracket
        responses:
          '200':
            $ref: '#/components/responses/RankingsUniversityRankingBracketResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'University: (Bearer''s) - Ranking Bracket'
        tags:
          - Ranking
    /rankings/university/ranking_bracket/{universityId}:
      get:
        description: Get /rankings/university/ranking_bracket/{ranking_bracket-id}
        operationId: getRankingsUniversityRankingBracketId
        parameters:
          - $ref: '#/components/parameters/UniversityId'
        responses:
          '200':
            $ref: '#/components/responses/RankingsUniversityRankingBracketByIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Ranking Univeritiy Brakcet By Id
        tags:
          - Ranking
    /rankings/user/best:
      get:
        description: Get /rankings/user/best
        operationId: getRankingsUserBest
        parameters:
          - $ref: '#/components/parameters/PeriodQuery'
        responses:
          '200':
            $ref: '#/components/responses/RankingsUserBestResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Rankings User Best
        tags:
          - Ranking
    /rankings/user/overview:
      get:
        description: Get /rankings/user/overview
        operationId: getRankingsUserOverview
        parameters:
          - $ref: '#/components/parameters/PeriodQuery'
        responses:
          '200':
            $ref: '#/components/responses/RankingsUserOverviewResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Rankings User Overview
        tags:
          - Ranking
    /rankings/user/ranking_bracket:
      get:
        description: Get /rankings/user/ranking_bracket
        operationId: getRankingsUserRankingBracket
        responses:
          '200':
            $ref: '#/components/responses/RankingsUserRankingBracketResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Rankings User Bracket
        tags:
          - Ranking
    /rankings/users:
      get:
        description: Retrieves information related to /rankings/users
        operationId: getRankingsUsers
        responses:
          '200':
            $ref: '#/components/responses/RankingsUsersResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Users
        tags:
          - Ranking
    /review/challenge/{challengeId}:
      get:
        description: Retrieves information related to /review/challenge/{challenge id}
        operationId: getReviewChallenge
        responses:
          '200':
            $ref: '#/components/responses/ChallengeReviewsChallengeIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: challenge reviews
        tags:
          - Challenges
        parameters:
          - $ref: '#/components/parameters/ChallengeId'
    /review/machine/{machineId}:
      get:
        description: Retrieves information related to /review/machine/{machine id}
        operationId: getReviewMachine
        responses:
          '200':
            $ref: '#/components/responses/MachineReviewsMachineIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: machine reviews
        tags:
          - Machines
        parameters:
          - $ref: '#/components/parameters/MachineId'
    /review/sherlock/{sherlockId}:
      get:
        description: Retrieve reviews for a specific Sherlock instance.
        operationId: getReviewSherlock
        parameters:
          - $ref: '#/components/parameters/SherlockId'
        responses:
          '200':
            $ref: '#/components/responses/ReviewSherlockSherlockIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get reviews for a Sherlock by ID
        tags:
          - Sherlocks
    /search/fetch:
      get:
        description: Fetch search results.
        operationId: getSearchFetch
        parameters:
          - $ref: '#/components/parameters/Query'
          - $ref: '#/components/parameters/Tags'
        responses:
          '200':
            $ref: '#/components/responses/SearchFetchResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Fetch search results
        tags:
          - Platform
    /season/list:
      get:
        description: Retrieve a list of seasons.
        operationId: getSeasonList
        responses:
          '200':
            $ref: '#/components/responses/SeasonListResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get list of seasons
        tags:
          - Season
    /season/machine/active:
      get:
        description: Retrieve active season machines.
        operationId: getSeasonMachineActive
        responses:
          '200':
            $ref: '#/components/responses/SeasonMachineActiveResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get active machines for the current season
        tags:
          - Season
    /season/machines:
      get:
        description: Retrieve machines for the current season.
        operationId: getSeasonMachines
        responses:
          '200':
            $ref: '#/components/responses/SeasonMachinesResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get season machines
        tags:
          - Season
    /season/machines/completed/{seasonId}:
      get:
        description: Retrieve completed machines for a specific season.
        operationId: getSeasonMachinesCompleted
        parameters:
          - $ref: '#/components/parameters/SeasonId'
        responses:
          '200':
            $ref: '#/components/responses/SeasonMachinesCompletedSeasonIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get completed machine flags for the current season
        tags:
          - Season
    /season/players/leaderboard:
      get:
        description: Get /season/players/leaderboard
        operationId: getSeasonPlayersLeaderboard
        parameters:
          - in: query
            name: season
            schema:
              type: string
        responses:
          '200':
            $ref: '#/components/responses/SeasonPlayersLeaderboardResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Season Leaderboar
        tags:
          - Season
    /season/players/leaderboard/top/{seasonId}:
      get:
        description: Season Top Leaderboard
        operationId: getSeasonPlayersLeaderboardTop
        parameters:
          - $ref: '#/components/parameters/PeriodQuery'
          - $ref: '#/components/parameters/SeasonId'
        responses:
          '200':
            $ref: '#/components/responses/SeasonPlatersLeaderboardTopResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Season Leaderboard Top
        tags:
          - Season
    /season/rewards/{seasonId}:
      get:
        description: Get Season Rewwards
        operationId: getSeasonRewards
        parameters:
          - $ref: '#/components/parameters/SeasonId'
        responses:
          '200':
            $ref: '#/components/responses/SeasonRewardsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Season Rewwards
        tags:
          - Season
    /season/user/followers/{seasonId}:
      get:
        description: Retrieve user followers for a specific season.
        operationId: getSeasonUserFollowers
        parameters:
          - $ref: '#/components/parameters/SeasonId'
        responses:
          '200':
            $ref: '#/components/responses/SeasonUserFollowersSeasonIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get top season users and top ranked followers for a user
        tags:
          - Season
    /season/user/rank/{seasonId}:
      get:
        description: Retrieve user rank for a specific season.
        operationId: getSeasonUserRank
        parameters:
          - $ref: '#/components/parameters/SeasonId'
        responses:
          '200':
            $ref: '#/components/responses/SeasonUserRankSeasonIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get user's rank for the current season
        tags:
          - Season
    /sherlock/todo/update/{sherlockId}:
      post:
        description: Marks a Sherlock as a ToDo or removes if already marked
        operationId: postSherlockTodoUpdate
        parameters:
          - $ref: '#/components/parameters/SherlockId'
        responses:
          '200':
            $ref: '#/components/responses/TodoResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Mark Sherlock as ToDo
        tags:
          - Sherlocks
    /sherlocks:
      get:
        description: Retrieve a list of Sherlock instances.
        operationId: getSherlocks
        parameters:
          - $ref: '#/components/parameters/SortType'
          - $ref: '#/components/parameters/Difficulty'
          - $ref: '#/components/parameters/State'
          - $ref: '#/components/parameters/SherlockSortBy'
          - $ref: '#/components/parameters/Category'
          - $ref: '#/components/parameters/Keyword'
          - $ref: '#/components/parameters/Status'
          - $ref: '#/components/parameters/PerPage'
        responses:
          '200':
            $ref: '#/components/responses/SherlocksResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get list of Sherlocks
        tags:
          - Sherlocks
    /sherlocks/categories/list:
      get:
        description: Get Sherlocks Categories List
        operationId: getSherlocksCategoriesList
        responses:
          '200':
            $ref: '#/components/responses/SherlocksCategoriesListResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Sherlocks Categories List
        tags:
          - Sherlocks
    /sherlocks/{sherlockId}:
      get:
        description: Retrieve information for a specific Sherlock instance.
        operationId: getSherlocksId
        parameters:
          - $ref: '#/components/parameters/SherlockId'
        responses:
          '200':
            $ref: '#/components/responses/SherlocksNameResponse'
          '404':
            $ref: '#/components/responses/SherlocksSherlockId404'
        summary: Get Sherlock by Id
        tags:
          - Sherlocks
    /sherlocks/{sherlockId}/download_link:
      get:
        description: Retrieve the download link for a specific Sherlock instance.
        operationId: getSherlocksDownloadlink
        parameters:
          - $ref: '#/components/parameters/SherlockId'
        responses:
          '200':
            $ref: '#/components/responses/SherlocksDownloadLinkResponse'
          '404':
            $ref: '#/components/responses/SherlocksSherlockId404'
        summary: Get Download Url for Sherlock by ID
        tags:
          - Sherlocks
    /sherlocks/{sherlockId}/info:
      get:
        description: Retrieve detailed information for a specific Sherlock instance.
        operationId: getSherlocksInfo
        parameters:
          - $ref: '#/components/parameters/SherlockId'
        responses:
          '200':
            $ref: '#/components/responses/SherlocksSherlockIdInfoResponse'
          '404':
            $ref: '#/components/responses/SherlocksSherlockId404'
        summary: Get info of Sherlock by ID
        tags:
          - Sherlocks
    /sherlocks/{sherlockId}/play:
      get:
        description: Start or continue playing a specific Sherlock instance.
        operationId: getSherlocksPlay
        parameters:
          - $ref: '#/components/parameters/SherlockId'
        responses:
          '200':
            $ref: '#/components/responses/SherlocksSherlockIdPlayResponse'
          '404':
            $ref: '#/components/responses/SherlocksSherlockId404'
        summary: Does this do anything Sherlock by ID
        tags:
          - Sherlocks
    /sherlocks/{sherlockId}/progress:
      get:
        description: Retrieve progress information for a specific Sherlock instance.
        operationId: getSherlocksProgress
        parameters:
          - $ref: '#/components/parameters/SherlockId'
        responses:
          '200':
            $ref: '#/components/responses/SherlocksSherlockIdProgressResponse'
          '404':
            $ref: '#/components/responses/SherlocksSherlockId404'
        summary: Get progress of Sherlock item by ID
        tags:
          - Sherlocks
    /sherlocks/{sherlockId}/tasks:
      get:
        description: Retrieve tasks for a specific Sherlock instance.
        operationId: getSherlocksTasks
        parameters:
          - $ref: '#/components/parameters/SherlockId'
        responses:
          '200':
            $ref: '#/components/responses/SherlocksSherlockIdTasksResponse'
          '404':
            $ref: '#/components/responses/SherlocksSherlockId404'
        summary: Get tasks for Sherlock by ID
        tags:
          - Sherlocks
    /sherlocks/{sherlockId}/tasks/{taskId}/flag:
      post:
        description: Submit a flag for a specific task in a Sherlock instance.
        operationId: postSherlocksTasksFlag
        parameters:
          - $ref: '#/components/parameters/SherlockId'
          - $ref: '#/components/parameters/TaskId'
        requestBody:
          $ref: '#/components/requestBodies/SherlocksTasksFlagRequest'
        responses:
          '201':
            $ref: '#/components/responses/SherlocksSherlockIdTasksTaskIdFlag201'
          '400':
            $ref: '#/components/responses/SherlocksSherlockIdTasksTaskIdFlag400'
          '404':
            $ref: '#/components/responses/SherlocksSherlockId404'
        summary: Submit flag for a specific Sherlock task
        tags:
          - Sherlocks
    /sherlocks/{sherlockId}/writeup:
      get:
        description: Retrieve a writeup for a specific Sherlock instance.
        operationId: getSherlocksWriteup
        parameters:
          - $ref: '#/components/parameters/SherlockId'
        responses:
          '200':
            $ref: '#/components/responses/SherlocksSherlockIdWriteupResponse'
          '404':
            $ref: '#/components/responses/SherlocksSherlockId404'
        summary: Get community write-up for Sherlock by ID
        tags:
          - Sherlocks
    /sherlocks/{sherlockId}/writeup/official:
      get:
        description: Retrieve the official writeup for a specific Sherlock instance.
        operationId: getSherlocksWriteupOfficial
        parameters:
          - $ref: '#/components/parameters/SherlockId'
        responses:
          '200':
            $ref: '#/components/responses/SherlocksSherlockIdWriteupOfficialResponse'
          '404':
            $ref: '#/components/responses/SherlocksSherlockId404'
        summary: Get official write-up for Sherlock by ID
        tags:
          - Sherlocks
    /sidebar/announcement:
      get:
        description: Retrieves information related to /sidebar/announcement
        operationId: getSidebarAnnouncement
        responses:
          '200':
            $ref: '#/components/responses/SidebarAnnouncementResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Sidebar: announcement'
        tags:
          - Platform
    /sidebar/changelog:
      get:
        deprecated: true
        description: Retrieves information related to /sidebar/changelog
        operationId: getSidebarChangelog
        responses:
          '200':
            $ref: '#/components/responses/SidebarChangelogResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Sidebar: changelog'
        tags:
          - Platform
    /sp/profile/{startingPointId}:
      get:
        description: Retrieve the profile information for a specific starting point.
        operationId: getSPProfile
        parameters:
          - $ref: '#/components/parameters/StartingPointId'
        responses:
          '200':
            $ref: '#/components/responses/SpProfileStartingPointIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Summary for get /sp/profile/{startingPointId}
        tags:
          - Starting Point
    /sp/task/flag:
      post:
        description: Submit a flag for an SP task.
        operationId: postSPTaskFlag
        responses:
          '200':
            $ref: '#/components/responses/SpTaskFlagResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Summary for post /sp/task/flag
        tags:
          - Starting Point
    /sp/tier/{tierId}:
      get:
        description: Retrieve details of SP Tier.
        operationId: getSPTier
        parameters:
          - $ref: '#/components/parameters/TierId'
        responses:
          '200':
            $ref: '#/components/responses/SpTierResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Starting Point Tier Info
        tags:
          - Starting Point
    /sp/tiers/progress:
      get:
        description: Retrieve progress of SP tiers.
        operationId: getSPTiersProgress
        responses:
          '200':
            $ref: '#/components/responses/SpTiersProgressResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Summary for get /sp/tiers/progress
        tags:
          - Starting Point
    /subscriptions/pricing:
      get:
        description: Get Subscription Pricing
        operationId: getSubscriptionsPricing
        parameters:
          - in: query
            name: type
            schema:
              type: string
        responses:
          '200':
            $ref: '#/components/responses/SubscriptionsPricingResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Subscription Pricing
        tags:
          - Platform
    /team/activity/{teamId}:
      get:
        description: Retrieve a handful of recent team owns. (Does not indicate which member achieved each item)
        operationId: getTeamActivity
        parameters:
          - $ref: '#/components/parameters/TeamId'
        responses:
          '200':
            $ref: '#/components/responses/TeamActivityTeamIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Recent team Activity
        tags:
          - Team
    /team/chart/challenge/categories/{teamId}:
      get:
        description: Retrieve challenge category charts for a team.
        operationId: getTeamChartChallengeCategories
        parameters:
          - $ref: '#/components/parameters/TeamId'
        responses:
          '200':
            $ref: '#/components/responses/TeamChartChallengeTeamIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Challenge Categories by Team ID
        tags:
          - Team
    /team/chart/machines/attack/{teamId}:
      get:
        description: Gets team machine ownage per attack path (e.g. "Web", "Account Misconfiguration"), expressed for each path (and for the total set of machines) as number of machines owned (either user or root, apparently) versus the total number available.
        operationId: getTeamChartMachinesAttack
        parameters:
          - $ref: '#/components/parameters/TeamId'
        responses:
          '200':
            $ref: '#/components/responses/TeamChartMachinesAttackTeamIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get team Ownage by Attack Path
        tags:
          - Team
    /team/graph/{teamId}:
      get:
        description: Get graph data for a team for a given duration (e.g. 1Y, 6M, 3M, 1M, 1W)
        operationId: getTeamGraph
        parameters:
          - $ref: '#/components/parameters/TeamId'
          - $ref: '#/components/parameters/PeriodQuery'
        responses:
          '200':
            $ref: '#/components/responses/TeamGraphTeamIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get team Graph for Duration
        tags:
          - Team
    /team/info/{teamId}:
      get:
        description: Retrieve the information profile for a team including captain, motto and other attributes.
        operationId: getTeamInfo
        responses:
          '200':
            $ref: '#/components/responses/TeamInfoTeamIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get team profile
        tags:
          - Team
        parameters:
          - $ref: '#/components/parameters/TeamId'
    /team/invitations/{teamId}:
      get:
        description: list the pending team members who have requested to join a team, or who were requested by the team captain, but have not yet accepted / been approved.
        operationId: getTeaminvItations
        parameters:
          - $ref: '#/components/parameters/TeamId'
        responses:
          '200':
            $ref: '#/components/responses/TeamInvitationsTeamIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: list team Invitations
        tags:
          - Team
    /team/members/{teamId}:
      get:
        description: list the members of a team (both active and pending / invited), given its ID. (variation 2)
        operationId: getTeaMmembers
        parameters:
          - $ref: '#/components/parameters/TeamId'
        responses:
          '200':
            $ref: '#/components/responses/TeamMembersTeamIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: list team members
        tags:
          - Team
    /team/stats/owns/{teamId}:
      get:
        description: Retrieves information related to /team/stats/owns/{team id}
        operationId: getTeamStatsOwns
        parameters:
          - $ref: '#/components/parameters/TeamId'
        responses:
          '200':
            $ref: '#/components/responses/TeamStatsOwnsTeamIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get team Statistics (Owns)
        tags:
          - Team
    /tracks:
      get:
        description: Retrieves information related to /tracks
        operationId: getTracks
        responses:
          '200':
            $ref: '#/components/responses/TracksResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: list Available Tracks
        tags:
          - Tracks
    /tracks/enroll/{trackId}':
      post:
        description: Enroll to track
        operationId: postTracksEnroll
        parameters:
          - in: path
            name: trackId
            required: true
            schema:
              type: string
        responses:
          '200':
            $ref: '#/components/responses/TraksEnrollResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Enroll to track
        tags:
          - Tracks
    /tracks/like/{trackId}:
      post:
        description: Like a track
        operationId: postTracksLike
        parameters:
          - in: path
            name: trackId
            required: true
            schema:
              type: string
        responses:
          '200':
            $ref: '#/components/responses/TracksLikeResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Like a track
        tags:
          - Tracks
    /tracks/{trackId}:
      get:
        description: Retrieves information related to /tracks/{id}
        operationId: getTracksId
        responses:
          '200':
            $ref: '#/components/responses/TracksIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Track Details
        tags:
          - Tracks
        parameters:
          - description: ID of the Track
            in: path
            name: trackId
            required: true
            schema:
              type: integer
    /university/activity/{universityId}:
      get:
        description: Univeritiy Activity
        operationId: getUniversityActivity
        parameters:
          - $ref: '#/components/parameters/UniversityId'
        responses:
          '200':
            $ref: '#/components/responses/UniversityActivityResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Univeritiy Activity
        tags:
          - Universities
    /university/all/list:
      get:
        description: Retrieve a list of all universities.
        operationId: getUniversityAllList
        parameters:
          - $ref: '#/components/parameters/Search'
          - $ref: '#/components/parameters/Page'
        responses:
          '200':
            $ref: '#/components/responses/UniversityAllListResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Retrieve information profile for teams
        tags:
          - Universities
    /university/chart/challenge/categories/{universityId}:
      get:
        description: Get Univeritiy Challenge Chart Categories
        operationId: getUniversityChartChallengeCategories
        parameters:
          - $ref: '#/components/parameters/UniversityId'
        responses:
          '200':
            $ref: '#/components/responses/UniversityChartChallengeCategoriesResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: University Challenge Categories Chart
        tags:
          - Universities
    /university/chart/machines/attack/{universityId}:
      get:
        description: University Machine Chart
        operationId: getUniversityChartMachinesAttack
        parameters:
          - $ref: '#/components/parameters/UniversityId'
        responses:
          '200':
            $ref: '#/components/responses/UniversityChartMachinesAttackResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: University Machine Attack Chart
        tags:
          - Universities
    /university/country/list:
      get:
        description: Univeritiy Country List
        operationId: getUniversityCountryList
        responses:
          '200':
            $ref: '#/components/responses/UniversityCountryListResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Univeritiy Country List
        tags:
          - Universities
    /university/members/{teamId}:
      get:
        description: Retrieve the list of members of a team, including both active and pending/invited members
        operationId: getUniversityMembers
        parameters:
          - $ref: '#/components/parameters/TeamId'
        responses:
          '200':
            $ref: '#/components/responses/UniversityMembersTeamIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get team members
        tags:
          - Universities
    /university/my:
      get:
        description: My Univeritiy
        operationId: getUniversityMy
        responses:
          '200':
            $ref: '#/components/responses/UniversityMyResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: My Univeritiy
        tags:
          - Universities
    /university/new/list:
      get:
        description: Univeritiy New List
        operationId: getUniversityNewList
        responses:
          '200':
            $ref: '#/components/responses/UniversityNewListResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Univeritiy New List
        tags:
          - Universities
    /university/profile/{teamId}:
      get:
        description: Retrieve the profile of a university by team ID.
        operationId: getUniversityProfile
        parameters:
          - $ref: '#/components/parameters/TeamId'
        responses:
          '200':
            $ref: '#/components/responses/UniversityProfileTeamIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Retrieve information profile for a specific team
        tags:
          - Universities
    /university/stats/owns/{userId}:
      get:
        description: Retrieve owns statistics for a specific user identified by user_id
        operationId: getUniversityStatsOwns
        parameters:
          - $ref: '#/components/parameters/UserId'
        responses:
          '200':
            $ref: '#/components/responses/UniversityStatsOwnsUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get owns statistics for a user
        tags:
          - Universities
    /university/top/list:
      get:
        description: Univeritiy Top List
        operationId: getUniversityTopList
        responses:
          '200':
            $ref: '#/components/responses/UniversityTopListResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Univeritiy Top List
        tags:
          - Universities
    /user/achievement/{targetType}/{userId}/{targetId}:
      get:
        description: Validate Achievement / Own
        operationId: getUserAchievement
        responses:
          '200':
            $ref: '#/components/responses/UserAchievementTarTypeUserIdTarIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Validate Achievement / Own
        tags:
          - User
        parameters:
          - $ref: '#/components/parameters/UserId'
          - description: Target ID
            in: path
            name: targetId
            required: true
            schema:
              type: integer
          - description: Target Type
            in: path
            name: targetType
            required: true
            schema:
              type: string
    /user/anonymized/id:
      get:
        description: Retrieves information related to /user/anonymized/id
        operationId: getUserAnonymizedId
        responses:
          '200':
            $ref: '#/components/responses/UserAnonymizedIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Bearer: Anonymous ID'
        tags:
          - User
    /user/apptoken/create:
      post:
        description: User App Token Create
        operationId: postUserApptokenCreate
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  expire_after:
                    type: number
                  name:
                    type: string
                type: object
        responses:
          '200':
            $ref: '#/components/responses/UserApptokenCreateResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: User App Token Create
        tags:
          - User
    /user/apptoken/delete:
      post:
        description: Delete app token, requires the name of the token
        operationId: postUserApptokenDelete
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  name:
                    type: string
                type: object
        responses:
          '200':
            $ref: '#/components/responses/GenericSuccess2xx'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Delete App Token
        tags:
          - User
    /user/apptoken/list:
      get:
        description: Get /user/apptoken/list
        operationId: getUserApptokenList
        responses:
          '200':
            $ref: '#/components/responses/UserApptokenListResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: User App Tokens List
        tags:
          - User
    /user/career:
      get:
        description: Get /user/career
        operationId: getUserCareer
        responses:
          '200':
            $ref: '#/components/responses/UserCareerResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get User Career
        tags:
          - User
    /user/connection/status:
      get:
        description: Retrieves information related to /user/connection/status
        operationId: getUserConnectionStatus
        responses:
          '200':
            $ref: '#/components/responses/UserConnectionStatusResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Bearer: Connection Status [ Connected ]'
        tags:
          - User
    /user/dashboard:
      get:
        description: Retrieves information related to /user/dashboard
        operationId: getUserDashboard
        responses:
          '200':
            $ref: '#/components/responses/UserDashboardResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Dashboard: Various Platform Stats'
        tags:
          - User
    /user/disrespect/{userId}:
      post:
        parameters:
          - $ref: '#/components/parameters/UserId'
        description: Remove respect from user
        operationId: postUserDisrespect
        responses:
          '200':
            $ref: '#/components/responses/GenericSuccess2xx'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Remove respect from user
        tags:
          - User
    /user/feedback/bug/areas:
      get:
        description: Retrieves information related to /user/feedback/bug/areas
        operationId: getUserFeedbackBugAreas
        responses:
          '200':
            $ref: '#/components/responses/UserFeedbackBugAreasResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Dashboard: list Bug Feedback Areas'
        tags:
          - User
    /user/follow/{userId}:
      post:
        parameters:
          - $ref: '#/components/parameters/UserId'
        description: Follow a user
        operationId: postUserFollow
        responses:
          '200':
            $ref: '#/components/responses/GenericSuccess2xx'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Follow a user
        tags:
          - User
    /user/followers:
      get:
        description: Retrieves information related to /user/followers
        operationId: getUserFollowers
        responses:
          '200':
            $ref: '#/components/responses/UserFollowersResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Bearer: Followers'
        tags:
          - User
    /user/info:
      get:
        description: Retrieves information related to /user/info
        operationId: getUserInfo
        responses:
          '200':
            $ref: '#/components/responses/UserInfoResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get user information
        tags:
          - User
    /user/profile/activity/{userId}:
      get:
        description: Retrieves information related to /user/profile/activity/{user id}
        operationId: getUserProfileActivity
        responses:
          '200':
            $ref: '#/components/responses/ProfileActivityUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'User profile: Activity'
        tags:
          - User
        parameters:
          - $ref: '#/components/parameters/UserId'
    /user/profile/badges/{userId}:
      get:
        description: Retrieves information related to /user/profile/badges/{user id}
        operationId: getUserProfileBadges
        responses:
          '200':
            $ref: '#/components/responses/ProfileBadgesUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'User profile: badges'
        tags:
          - User
        parameters:
          - $ref: '#/components/parameters/UserId'
    /user/profile/basic/{userId}:
      get:
        description: Retrieves information related to /user/profile/basic/{user id}
        operationId: getUserProfileBasic
        responses:
          '200':
            $ref: '#/components/responses/UserProfileBasicUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Other user's profile
        tags:
          - User
        parameters:
          - $ref: '#/components/parameters/UserId'
    /user/profile/bloods/{userId}:
      get:
        description: Retrieves information related to /user/profile/bloods/{user id}
        operationId: getUserProfileBloods
        responses:
          '200':
            $ref: '#/components/responses/ProfileBloodsUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'User profile: Bloods'
        tags:
          - User
        parameters:
          - $ref: '#/components/parameters/UserId'
    /user/profile/certificates:
      get:
        description: User Profile Certificates
        operationId: getUserProfileCertificates
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    ownedProLab:
                      items:
                        type: object
                      type: array
                  type: object
            description: OK
          '400':
            $ref: '#/components/responses/GenericError'
        summary: User Profile Certificates
        tags:
          - User
    /user/profile/chart/machines/attack/{userId}:
      get:
        description: Retrieves information related to /user/profile/chart/machines/attack/{user id}
        operationId: getUserProfileChartMachinesAttack
        responses:
          '200':
            $ref: '#/components/responses/ProfileChartMachinesAttackUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'User profile: machine Ownage Chart By Attack Path'
        tags:
          - User
        parameters:
          - $ref: '#/components/parameters/UserId'
    /user/profile/content/{userId}:
      get:
        description: Retrieves information related to /user/profile/content/{user id}
        operationId: getUserProfileContent
        responses:
          '200':
            $ref: '#/components/responses/ProfileContentUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'User profile: Submitted Content'
        tags:
          - User
        parameters:
          - $ref: '#/components/parameters/UserId'
    /user/profile/graph/{period}/{userId}:
      get:
        description: Retrieves information related to /user/profile/graph/{period}/{user id}
        operationId: getUserProfileGraph
        responses:
          '200':
            $ref: '#/components/responses/ProfileGraphPeriodUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'User profile: Achievement Graph'
        tags:
          - User
        parameters:
          - $ref: '#/components/parameters/UserId'
          - $ref: '#/components/parameters/PeriodPath'
    /user/profile/progress/challenges/{userId}:
      get:
        description: Retrieves information related to /user/profile/progress/challenges/{user id}
        operationId: getUserProfileProgressChallenges
        responses:
          '200':
            $ref: '#/components/responses/ProfileProgressChallengesUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'User Progress: challenges (Total + by Category)'
        tags:
          - User
        parameters:
          - $ref: '#/components/parameters/UserId'
    /user/profile/progress/endgame/{userId}:
      get:
        description: Retrieves information related to /user/profile/progress/endgame/{user id}
        operationId: getUserProfileProgressEndgame
        responses:
          '200':
            $ref: '#/components/responses/ProfileProgressEndgameUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'User Progress: Endgames'
        tags:
          - User
        parameters:
          - $ref: '#/components/parameters/UserId'
    /user/profile/progress/fortress/{userId}:
      get:
        description: Retrieves information related to /user/profile/progress/fortress/{user id}
        operationId: getUserProfileProgressFortress
        responses:
          '200':
            $ref: '#/components/responses/ProfileProgressFortressUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'User Progress: fortress'
        tags:
          - User
        parameters:
          - $ref: '#/components/parameters/UserId'
    /user/profile/progress/prolab/{userId}:
      get:
        description: Retrieves information related to /user/profile/progress/prolab/{user id}
        operationId: getUserProfileProgressProlab
        responses:
          '200':
            $ref: '#/components/responses/ProfileProgressProlabUserIdResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'User Progress: Pro Lab'
        tags:
          - User
        parameters:
          - $ref: '#/components/parameters/UserId'
    /user/profile/progress/sherlocks/{userId}:
      get:
        description: User Profile Progreess Sherlocks
        operationId: getUserProfileProgressSherlocks
        parameters:
          - $ref: '#/components/parameters/UserId'
        responses:
          '200':
            $ref: '#/components/responses/UserProfileProgressSherlocksResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: User Profile Progreess Sherlocks
        tags:
          - User
    /user/profile/summary:
      get:
        description: Retrieves information related to /user/profile/summary
        operationId: getUserProfileSummary
        responses:
          '200':
            $ref: '#/components/responses/UserProfileSummaryResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: User Profile Summary
        tags:
          - User
    /user/respect/{userId}:
      post:
        parameters:
          - $ref: '#/components/parameters/UserId'
        description: Respect a user
        operationId: postUserRespect
        responses:
          '200':
            $ref: '#/components/responses/GenericSuccess2xx'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Respect a user
        tags:
          - User
    /user/settings:
      get:
        description: Retrieves information related to /user/settings
        operationId: getUserSettings
        responses:
          '200':
            $ref: '#/components/responses/UserSettingsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Bearer: Settings'
        tags:
          - User
    /user/submissions/challenges:
      get:
        description: Retrieves information related to /user/submissions/challenges
        operationId: getUserSubmissionsChallenges
        responses:
          '200':
            $ref: '#/components/responses/UserSubmissionsChallengesResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Bearer: challenge Submissions'
        tags:
          - User
    /user/submissions/machines:
      get:
        description: Retrieves information related to /user/submissions/machines
        operationId: getUserSubmissionsMachines
        responses:
          '200':
            $ref: '#/components/responses/UserSubmissionsMachinesResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Bearer: machine Submissions'
        tags:
          - User
    /user/subscriptions:
      get:
        description: Retrieves information related to /user/subscriptions
        operationId: getUserSubscriptions
        responses:
          '200':
            $ref: '#/components/responses/UserSubscriptionsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Bearer: Subscription Status'
        tags:
          - User
    /user/subscriptions/balance:
      get:
        description: Retrieves information related to /user/subscriptions/balance
        operationId: getUserSubscriptionsBalance
        responses:
          '200':
            $ref: '#/components/responses/UserSubscriptionsBalanceResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Bearer: Subscription Balance'
        tags:
          - User
    /user/subscriptions/billing-history:
      get:
        description: Get billing history for bearer's account
        operationId: getUserSubscriptionsBillingHistory
        parameters:
          - $ref: '#/components/parameters/PerPage'
        responses:
          '200':
            $ref: '#/components/responses/UserSubscriptionBillingHistory'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Get Billing History
        tags:
          - User
    /user/subscriptions/cancellation/reasons:
      get:
        description: User Subscription Cancellation Reasons
        operationId: getUserSubscriptionsCancellationReasons
        responses:
          '200':
            $ref: '#/components/responses/UserSubscriptionsCancellationReasonsResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: User Subscription Cancellation Reasons
        tags:
          - User
    /user/subscriptions/manage/recurly:
      get:
        description: Retrieves information related to /user/subscriptions/manage/recurly
        operationId: getUserSubscriptionsManageRecurly
        responses:
          '200':
            $ref: '#/components/responses/UserSubscriptionsManageRecurlyResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Bearer: Recurly URL to Manage Subscriptions'
        tags:
          - User
    /user/tracks:
      get:
        description: Retrieves information related to /user/tracks
        operationId: getUserTracks
        responses:
          '200':
            $ref: '#/components/responses/UserTracksResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: 'Bearer: Enrolled Tracks'
        tags:
          - User
    /user/unfollow/{userId}:
      post:
        parameters:
          - $ref: '#/components/parameters/UserId'
        description: Unfollow a user
        operationId: postUserUnfollow
        responses:
          '200':
            $ref: '#/components/responses/GenericSuccess2xx'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Unfollow a user
        tags:
          - User
    /vm/extend:
      post:
        description: Extend the virtual machine.
        operationId: postVMExtend
        requestBody:
          $ref: '#/components/requestBodies/VirtualMachineRequest'
        responses:
          '200':
            $ref: '#/components/responses/VmExtendResponse'
          '400':
            $ref: '#/components/responses/GenericError'
        summary: Extend a machine / SP
        tags:
          - VM
    /vm/reset:
      post:
        description: Reset the virtual machine.
        operationId: postVMReset
        requestBody:
          $ref: '#/components/requestBodies/VirtualMachineRequest'
        responses:
          '200':
            $ref: '#/components/responses/VmResetResponse'
          '400':
            $ref: '#/components/responses/VmReset400'
        summary: Reset a machine / SP
        tags:
          - VM
    /vm/spawn:
      post:
        description: Spawn a virtual machine.
        operationId: postVMSpawn
        requestBody:
          $ref: '#/components/requestBodies/VirtualMachineRequest'
        responses:
          '200':
            $ref: '#/components/responses/VmSpawnResponse'
          '400':
            $ref: '#/components/responses/GenericError'
          '500':
            $ref: '#/components/responses/GenericError5xx'
        summary: Spawn a machine / SP
        tags:
          - VM
    /vm/terminate:
      post:
        description: Terminate a virtual machine.
        operationId: postVMTerminate
        requestBody:
          $ref: '#/components/requestBodies/VirtualMachineRequest'
        responses:
          '200':
            $ref: '#/components/responses/VmSpawnResponse'
          '400':
            $ref: '#/components/responses/GenericError'
          '500':
            $ref: '#/components/responses/GenericError5xx'
        summary: Terminate a machine / SP
        tags:
          - VM
  security:
    - bearer: []
  servers:
    - url: https://labs.hackthebox.com/api/v4
  tags:
    - description: Endpoints related to platform badges
      name: Badges
    - description: Endpoints related to Battlegrounds
      name: Battlegrounds
    - description: Endpoints related to Careers
      name: Career
    - description: Endpoints related to Challenges
      name: Challenges
    - description: Endpoints related to VPN connections
      name: Connection
    - description: Endpoints related to Endgames
      name: Endgames
    - description: Endpoints related to Fortresses
      name: Fortresses
    - description: Endpoints related to the Home page banner
      name: Home
    - description: Endpoints related to Machines
      name: Machines
    - description: Endpoints related to the platform (General)
      name: Platform
    - description: Endpoints related to ProLabs
      name: Prolabs
    - description: Endpoints related to PwnBox
      name: PwnBox
    - description: Endpoints related to Rankings
      name: Ranking
    - description: Endpoints related to Seasons/Arenas
      name: Season
    - description: Endpoints related to Sherlocks
      name: Sherlocks
    - description: Endpoints related to Starting Point
      name: Starting Point
    - description: Endpoints related to Team Rankings
      name: Team
    - description: Endpoints related to Tracks
      name: Tracks
    - description: Endpoints related to University Rankings
      name: Universities
    - description: Endpoints related to User Profiles
      name: User
    - description: Endpoints related to spawning VMs for Machines and Starting Point
      name: VM